---
title: "Bayesian Inference - Introduction with applications"
author: "Felipe Angelim"
format: 
    revealjs:
        html-math-method: mathjax

---

# Bayesian Inference 


## Agenda

1. Motivation
2. Bayes' Rule
3. Inference methods
4. Probabilistic Programming Languages
5. Example of Applications
   1. Time-series: cumulative sales in a week
   2. Pricing: willingness-to-pay


## Motivation


If:

*  $[A, B]$ is an interval generated by a model
*  $\theta$ is the parameter of interest
  
which of the following is bayesian and which is frequentist statement?

> **A. There is a 95% probability that the true quantity $\theta$ lies in $[A, B]$**


> **B. There is 95% chance that $[A, B]$ contains the true quantity $\theta$**


## Bayes' rule

$$
\underbrace{P(\theta|X)}_{\text{Posterior}} = \frac{P(X|\theta)P(\theta)}{P(X)}
$$


$$
 \underbrace{P(\theta|X)}_{\text{Posterior}} \propto \underbrace{P(X|\theta)}_{\text{Likelihood}} \underbrace{P(\theta)}_{\text{Prior}}
$$ {#eq-bayes-propto}

## A menu of distributions

// Figure with many axes representing multiple distributions

## Probabilistic Programming Language (PPL)

Pyro, Numpyro, PyMC, TensorflowProbability...

## Box with coloured balls example

// Codigo em numpyro

```python
import numpyro
import numpyro.distributions as dist


def bernoulli_model(obs):

    p = numpyro.sample("p", dist.Uniform(0, 1))

    with numpyro.plate("obs_plate", size=obs.shape[0]):
        numpyro.sample("obs", dist.Bernoulli(probs=p), obs=obs)
```

## Inference Methods

### MCMC

* Many-worlds analogy
* Markov Chains: sequence of random events/states, with transition probabilities between them. Can have stationary distributions, "equilibrium"
* Idea: build a chain whose "equilibrium" is the posterior distribution of interest. Here Monte Carlo is used to be able to sample from such target distribution
* Modern algorithms such as HMC use the gradient of the posterior to improve convergence


### Variational inference

MCMC can be slow, and can also fail to convert. VI provides a fast and approximate solution to the problem

// image of the function space

### Maximum a Posteriori

// imagem

* Ridge & Lasso are equivalent to MAP of bayesian models!

## Example of code with 
