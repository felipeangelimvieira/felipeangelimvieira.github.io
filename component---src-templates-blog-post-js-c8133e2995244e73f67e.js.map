{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Header/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","_this$props$pageConte","site","siteMetadata","title","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","styles","body","_components_Header__WEBPACK_IMPORTED_MODULE_5__","container","frontmatter","date","style","textAlign","dangerouslySetInnerHTML","__html","html","marginBottom","rhythm","nextPrevious","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","path","rel","React","Component","pageQuery","Example","react_burger_menu__WEBPACK_IMPORTED_MODULE_1__","right","wdith","id","href","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_bootstrap__WEBPACK_IMPORTED_MODULE_1__","typography_theme_bootstrap__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","bootstrapTheme","scale","options"],"mappings":"uNAUMA,kLACJC,OAAA,WAEE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eAFtBC,GAGWJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MACzBP,KAAKC,MAAMO,aAA9BC,EAJDL,EAICK,SAAUC,EAJXN,EAIWM,KAElB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAaC,IAAOC,MACvBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,MACFN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOG,WAEvBP,EAAAC,EAAAC,cAAA,MACEC,UAAWC,IAAOR,OAEjBR,EAAKoB,YAAYZ,OAEpBI,EAAAC,EAAAC,cAAA,KACEC,UAAaC,IAAOK,MAEnBrB,EAAKoB,YAAYC,MAEpBT,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAACC,UAAW,WAAYC,wBAAyB,CAAEC,OAAQzB,EAAK0B,QAC5Ed,EAAAC,EAAAC,cAAA,MACEQ,MAAO,CACLK,aAAcC,YAAO,MAKzBhB,EAAAC,EAAAC,cAAA,MACEC,UAAWC,IAAOa,cAElBjB,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAIrB,EAASU,YAAYY,KAAMC,IAAI,QAAzC,KACKvB,EAASU,YAAYZ,QAI9BI,EAAAC,EAAAC,cAAA,UACGH,GACCC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAIpB,EAAKS,YAAYY,KAAMC,IAAI,QAClCtB,EAAKS,YAAYZ,MADpB,cA1CiB0B,IAAMC,WAsDtBrC,YAER,IAAMsC,EAAS,uFC9DhBC,kLAEJtC,OAAA,WACE,OACEa,EAAAC,EAAAC,cAACwB,EAAA,MAAD,CAAMC,OAAK,EAACC,MAAO,OACjB5B,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,OAAO1B,UAAU,YAAY2B,KAAK,KAAxC,QACA9B,EAAAC,EAAAC,cAAA,KAAG2B,GAAG,OAAO1B,UAAU,YAAY2B,KAAK,SAAxC,wBANcR,IAAMC,WAYbE,2BChBf,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAArC,EAAAqC,EAAAC,EAAAF,GAAAG,EAAAF,EAAA,IAAAG,EAAAH,EAAAC,EAAAC,GAAAE,EAAAJ,EAAA,IAAAK,EAAAL,EAAAC,EAAAG,GAAAJ,EAAAM,EAAAC,EAAA,sBAAAF,EAAAzC,IAAAoC,EAAA,KAa2Bf,IAAMuB,cAAc,IAuDvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,iGClEhBC,EAAmB,SAAAC,GAAiC,IAA9BC,EAA8BD,EAA9BC,SAAUC,EAAoBF,EAApBE,cACpC,OAAKA,EAGEhC,IAAMpB,cAAcqD,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXP,EAAiBQ,UAAY,CAC3BN,SAAUP,IAAUc,MAAM,CACxBC,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUE,8CCtBfd,EAAAM,EAAAC,EAAA,sBAAA5B,IAAA,IAAA8C,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAAC,EAAAwB,GAAAE,EAAA3B,EAAA,KAAA4B,EAAA5B,EAAAC,EAAA0B,GAGME,EAAa,IAAIC,IAAWC,KAEZpD,GAAoBkD,EAA3BG,MAA2BH,EAApBlD,QAAoBkD,EAAZI","file":"component---src-templates-blog-post-js-c8133e2995244e73f67e.js","sourcesContent":["// Borrowed from gatsby-starter-blog\r\n\r\nimport React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nimport styles from '../styles/blog-post.module.css'\r\nimport 'katex/dist/katex.min.css'\r\nimport Header from '../components/Header'\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    \r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n        <div className = {styles.body}>\r\n          <Header />\r\n        <div className={styles.container}>\r\n        \r\n        <h1\r\n          className={styles.title}\r\n        >\r\n          {post.frontmatter.title}\r\n        </h1>\r\n        <p\r\n          className = {styles.date}\r\n        >\r\n          {post.frontmatter.date}\r\n        </p>\r\n        <div style={{textAlign: \"justify\"}} dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        \r\n\r\n        <ul \r\n          className={styles.nextPrevious}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.frontmatter.path} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.frontmatter.path} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport './header.css';\r\n\r\nclass Example extends React.Component {\r\n\r\n  render () {\r\n    return (\r\n      <Menu right wdith={'25%'}>\r\n        <a id=\"home\" className=\"menu-item\" href=\"/\">Home</a>\r\n        <a id=\"blog\" className=\"menu-item\" href=\"/blog\">Paper summaries</a>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from \"typography\"\r\nimport bootstrapTheme from 'typography-theme-bootstrap';\r\n\r\nconst typography = new Typography(bootstrapTheme)\r\n\r\nexport const { scale, rhythm, options } = typography\r\nexport default typography"],"sourceRoot":""}