{"version":3,"sources":["webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js"],"names":["__webpack_require__","Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","_classCallCheck","this","state","isOpen","Error","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","disableAutoFocus","firstItem","document","querySelector","focus","activeElement","blur","body","timeoutId","clearTimeout","setTimeout","set","applyClass","el","className","classList","htmlClassName","bodyClassName","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","wrapper","getElementById","builtStyles","getStyle","prop","style","applyOverflow","console","error","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","e","window","event","disableCloseOnEsc","keyCode","toggleMenu","disableOverlayClick","customOnKeyDown","onkeydown","listenForClose","bind","prevProps","morphShape","path","_this2","svg","findDOMNode","lib","select","animate","attr","pathInitial","_this3","createElement","noOverlay","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","tabIndex","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","element","oneOf","func","bool","isRequired","number","defaultProps","module","$export","toObject","toPrimitive","P","F","Date","NaN","toJSON","toISOString","O","pv","isFinite","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","RegExp","Base","proto","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","proxy","it","keys","slide","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","has","cof","fails","gOPD","$trim","$Number","BROKEN_COF","TRIM","String","toNumber","argument","third","radix","maxCode","first","charCodeAt","code","digits","slice","l","parseInt","that","valueOf","split","j","Snap","_menuFactory","_menuFactory2","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","_x","_x2","BurgerIcon","hover","left","top","bmBurgerBarsHover","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","apply","type","bmCross","getCrossStyle","bmCrossButton","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","getTime","isArray","Array","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","root","w","h","nodeType","wrap","is","Element","glob","doc","Paper","version","_","win","tokenRegex","objNotationRegex","Str","toFloat","parseFloat","toInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","cacher","scope","postprocessor","newf","arg","args","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","name","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","indexOf","r","g","hex","rgbtoString","_toHex","red","green","blue","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","concat","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","forEach","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","ownerDocument","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","appendTo","prepend","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuned","tuner","chunk","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","defined","spaces","space","ltrim","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","TYPE","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon"],"mappings":"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","file":"1-c843019067edc163c47b.js","sourcesContent":["'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x3, _x4, _x5) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x3,\n        property = _x4,\n        receiver = _x5;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x3 = parent;\n        _x4 = property;\n        _x5 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n\n      this.state = {\n        isOpen: false\n      };\n\n      if (!styles) {\n        throw new Error('No styles supplied');\n      }\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n        this.applyWrapperStyles();\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          if (!_this.props.disableAutoFocus) {\n            // For accessibility reasons, ensures that when we toggle open,\n            // we focus the first menu item if one exists.\n            if (newState.isOpen) {\n              var firstItem = document.querySelector('.bm-item');\n\n              if (firstItem) {\n                firstItem.focus();\n              }\n            } else {\n              if (document.activeElement) {\n                document.activeElement.blur();\n              } else {\n                document.body.blur(); // Needed for IE\n              }\n            }\n          } // Timeout ensures wrappers are cleared after animation finishes.\n\n\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      } // Applies component-specific styles to external wrapper elements.\n\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        var applyClass = function applyClass(el, className) {\n          return el.classList[set ? 'add' : 'remove'](className);\n        };\n\n        if (this.props.htmlClassName) {\n          applyClass(document.querySelector('html'), this.props.htmlClassName);\n        }\n\n        if (this.props.bodyClassName) {\n          applyClass(document.querySelector('body'), this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      } // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        } // Prevent any horizontal scroll.\n        // Only set overflow-x as an inline style if htmlClassName or\n        // bodyClassName is not passed in. Otherwise, it is up to the caller to\n        // decide if they want to set the overflow style in CSS using the custom\n        // class names.\n\n\n        var applyOverflow = function applyOverflow(el) {\n          return el.style['overflow-x'] = set ? 'hidden' : '';\n        };\n\n        if (!this.props.htmlClassName) {\n          applyOverflow(document.querySelector('html'));\n        }\n\n        if (!this.props.bodyClassName) {\n          applyOverflow(document.querySelector('body'));\n        }\n      } // Builds styles incrementally for a given element.\n\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase()); // Set base styles.\n\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {}; // Add animation-specific styles.\n\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        } // Add custom styles.\n\n\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        } // Add element inline styles.\n\n\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event; // Close on ESC, unless disabled\n\n        if (!this.props.disableCloseOnEsc && this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else {\n          window.onkeydown = this.listenForClose.bind(this);\n        } // Allow initial open state to be set by props.\n\n\n        if (this.props.isOpen) {\n          this.toggleMenu({\n            isOpen: true,\n            noStateChange: true\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        var wasToggled = typeof this.props.isOpen !== 'undefined' && this.props.isOpen !== this.state.isOpen && this.props.isOpen !== prevProps.isOpen;\n\n        if (wasToggled) {\n          this.toggleMenu(); // Toggling changes SVG animation requirements, so we defer these until the next componentDidUpdate\n\n          return;\n        }\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement('div', null, !this.props.noOverlay && _react2['default'].createElement('div', {\n          className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n          onClick: function onClick() {\n            return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n          },\n          style: this.getStyles('overlay')\n        }), _react2['default'].createElement('div', {\n          id: this.props.id,\n          className: ('bm-menu-wrap ' + this.props.className).trim(),\n          style: this.getStyles('menuWrap')\n        }, styles.svg && _react2['default'].createElement('div', {\n          className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n          style: this.getStyles('morphShape')\n        }, _react2['default'].createElement('svg', {\n          width: '100%',\n          height: '100%',\n          viewBox: '0 0 100 800',\n          preserveAspectRatio: 'none'\n        }, _react2['default'].createElement('path', {\n          d: styles.svg.pathInitial\n        }))), _react2['default'].createElement('div', {\n          className: ('bm-menu ' + this.props.menuClassName).trim(),\n          style: this.getStyles('menu')\n        }, _react2['default'].createElement('nav', {\n          className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n          style: this.getStyles('itemList')\n        }, _react2['default'].Children.map(this.props.children, function (item, index) {\n          if (item) {\n            var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n              return !!className;\n            }).join(' ');\n            var extraProps = {\n              key: index,\n              className: classList,\n              style: _this3.getStyles('item', index, item.props.style),\n              tabIndex: _this3.state.isOpen ? 0 : -1\n            };\n            return _react2['default'].cloneElement(item, extraProps);\n          }\n        }))), this.props.customCrossIcon !== false && _react2['default'].createElement('div', {\n          style: this.getStyles('closeButton')\n        }, _react2['default'].createElement(_CrossIcon2['default'], {\n          onClick: function onClick() {\n            return _this3.toggleMenu();\n          },\n          styles: this.props.styles,\n          customIcon: this.props.customCrossIcon,\n          className: this.props.crossButtonClassName,\n          crossClassName: this.props.crossClassName,\n          tabIndex: this.state.isOpen ? 0 : -1\n        }))), this.props.customBurgerIcon !== false && _react2['default'].createElement('div', {\n          style: this.getStyles('burgerIcon')\n        }, _react2['default'].createElement(_BurgerIcon2['default'], {\n          onClick: function onClick() {\n            return _this3.toggleMenu();\n          },\n          styles: this.props.styles,\n          customIcon: this.props.customBurgerIcon,\n          className: this.props.burgerButtonClassName,\n          barClassName: this.props.burgerBarClassName\n        })));\n      }\n    }]);\n\n    return Menu;\n  }(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    className: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableAutoFocus: _propTypes2['default'].bool,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    htmlClassName: _propTypes2['default'].string,\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableAutoFocus: false,\n    disableCloseOnEsc: false,\n    htmlClassName: '',\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n  item: function item() {\n    return {\n      display: 'block'\n    };\n  }\n};\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return _extends({\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      }, this.state.hover && this.props.styles.bmBurgerBarsHover);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-icon ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', null, [0, 1, 2].map(function (bar) {\n          return _react2['default'].createElement('span', {\n            key: bar,\n            className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover ? 'bm-burger-bars-hover' : '')).trim(),\n            style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n          });\n        }));\n      }\n\n      return _react2['default'].createElement('div', {\n        className: ('bm-burger-button ' + this.props.className).trim(),\n        style: _extends({\n          zIndex: 1000\n        }, this.props.styles.bmBurgerButton)\n      }, icon, _react2['default'].createElement('button', {\n        onClick: this.props.onClick,\n        onMouseOver: function onMouseOver() {\n          return _this.setState({\n            hover: true\n          });\n        },\n        onMouseOut: function onMouseOut() {\n          return _this.setState({\n            hover: false\n          });\n        },\n        style: buttonStyle\n      }, 'Open Menu'));\n    }\n  }]);\n\n  return BurgerIcon;\n}(_react.Component);\n\nexports['default'] = BurgerIcon;\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-cross ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', {\n          style: {\n            position: 'absolute',\n            top: '6px',\n            right: '14px'\n          }\n        }, ['before', 'after'].map(function (type, i) {\n          return _react2['default'].createElement('span', {\n            key: i,\n            className: ('bm-cross ' + _this.props.crossClassName).trim(),\n            style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n          });\n        }));\n      }\n\n      return _react2['default'].createElement('div', {\n        className: ('bm-cross-button ' + this.props.className).trim(),\n        style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n      }, icon, _react2['default'].createElement('button', {\n        onClick: this.props.onClick,\n        style: buttonStyle,\n        tabIndex: this.props.tabIndex\n      }, 'Close Menu'));\n    }\n  }]);\n\n  return CrossIcon;\n}(_react.Component);\n\nexports['default'] = CrossIcon;\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object,\n  tabIndex: _propTypes2['default'].number\n};\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {},\n  tabIndex: 0\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({\n        path: this.pathOpen\n      }, 400, window.mina.easeinout);\n    }\n  },\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","require(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nwindow.eve = require('eve'); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar mina = function (eve) {\n  var animations = {},\n      requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    setTimeout(callback, 16, new Date().getTime());\n    return true;\n  },\n      requestID,\n      isArray = Array.isArray || function (a) {\n    return a instanceof Array || Object.prototype.toString.call(a) == \"[object Array]\";\n  },\n      idgen = 0,\n      idprefix = \"M\" + (+new Date()).toString(36),\n      ID = function ID() {\n    return idprefix + (idgen++).toString(36);\n  },\n      diff = function diff(a, b, A, B) {\n    if (isArray(a)) {\n      res = [];\n\n      for (var i = 0, ii = a.length; i < ii; i++) {\n        res[i] = diff(a[i], b, A[i], B);\n      }\n\n      return res;\n    }\n\n    var dif = (A - a) / (B - b);\n    return function (bb) {\n      return a + dif * (bb - b);\n    };\n  },\n      timer = Date.now || function () {\n    return +new Date();\n  },\n      sta = function sta(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.s;\n    }\n\n    var ds = a.s - val;\n    a.b += a.dur * ds;\n    a.B += a.dur * ds;\n    a.s = val;\n  },\n      speed = function speed(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.spd;\n    }\n\n    a.spd = val;\n  },\n      duration = function duration(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.dur;\n    }\n\n    a.s = a.s * val / a.dur;\n    a.dur = val;\n  },\n      stopit = function stopit() {\n    var a = this;\n    delete animations[a.id];\n    a.update();\n    eve(\"mina.stop.\" + a.id, a);\n  },\n      pause = function pause() {\n    var a = this;\n\n    if (a.pdif) {\n      return;\n    }\n\n    delete animations[a.id];\n    a.update();\n    a.pdif = a.get() - a.b;\n  },\n      resume = function resume() {\n    var a = this;\n\n    if (!a.pdif) {\n      return;\n    }\n\n    a.b = a.get() - a.pdif;\n    delete a.pdif;\n    animations[a.id] = a;\n    frame();\n  },\n      update = function update() {\n    var a = this,\n        res;\n\n    if (isArray(a.start)) {\n      res = [];\n\n      for (var j = 0, jj = a.start.length; j < jj; j++) {\n        res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n      }\n    } else {\n      res = +a.start + (a.end - a.start) * a.easing(a.s);\n    }\n\n    a.set(res);\n  },\n      frame = function frame(timeStamp) {\n    // Manual invokation?\n    if (!timeStamp) {\n      // Frame loop stopped?\n      if (!requestID) {\n        // Start frame loop...\n        requestID = requestAnimFrame(frame);\n      }\n\n      return;\n    }\n\n    var len = 0;\n\n    for (var i in animations) {\n      if (animations.hasOwnProperty(i)) {\n        var a = animations[i],\n            b = a.get(),\n            res;\n        len++;\n        a.s = (b - a.b) / (a.dur / a.spd);\n\n        if (a.s >= 1) {\n          delete animations[i];\n          a.s = 1;\n          len--;\n\n          (function (a) {\n            setTimeout(function () {\n              eve(\"mina.finish.\" + a.id, a);\n            });\n          })(a);\n        }\n\n        a.update();\n      }\n    }\n\n    requestID = len ? requestAnimFrame(frame) : false;\n  },\n\n  /*\\\n   * mina\n   [ method ]\n   **\n   * Generic animation of numbers\n   **\n   - a (number) start _slave_ number\n   - A (number) end _slave_ number\n   - b (number) start _master_ number (start time in general case)\n   - B (number) end _master_ number (end time in general case)\n   - get (function) getter of _master_ number (see @mina.time)\n   - set (function) setter of _slave_ number\n   - easing (function) #optional easing function, default is @mina.linear\n   = (object) animation descriptor\n   o {\n   o         id (string) animation id,\n   o         start (number) start _slave_ number,\n   o         end (number) end _slave_ number,\n   o         b (number) start _master_ number,\n   o         s (number) animation status (0..1),\n   o         dur (number) animation duration,\n   o         spd (number) animation speed,\n   o         get (function) getter of _master_ number (see @mina.time),\n   o         set (function) setter of _slave_ number,\n   o         easing (function) easing function, default is @mina.linear,\n   o         status (function) status getter/setter,\n   o         speed (function) speed getter/setter,\n   o         duration (function) duration getter/setter,\n   o         stop (function) animation stopper\n   o         pause (function) pauses the animation\n   o         resume (function) resumes the animation\n   o         update (function) calles setter with the right value of the animation\n   o }\n  \\*/\n  mina = function mina(a, A, b, B, get, set, easing) {\n    var anim = {\n      id: ID(),\n      start: a,\n      end: A,\n      b: b,\n      s: 0,\n      dur: B - b,\n      spd: 1,\n      get: get,\n      set: set,\n      easing: easing || mina.linear,\n      status: sta,\n      speed: speed,\n      duration: duration,\n      stop: stopit,\n      pause: pause,\n      resume: resume,\n      update: update\n    };\n    animations[anim.id] = anim;\n    var len = 0,\n        i;\n\n    for (i in animations) {\n      if (animations.hasOwnProperty(i)) {\n        len++;\n\n        if (len == 2) {\n          break;\n        }\n      }\n    }\n\n    len == 1 && frame();\n    return anim;\n  };\n  /*\\\n   * mina.time\n   [ method ]\n   **\n   * Returns the current time. Equivalent to:\n   | function () {\n   |     return (new Date).getTime();\n   | }\n  \\*/\n\n\n  mina.time = timer;\n  /*\\\n   * mina.getById\n   [ method ]\n   **\n   * Returns an animation by its id\n   - id (string) animation's id\n   = (object) See @mina\n  \\*/\n\n  mina.getById = function (id) {\n    return animations[id] || null;\n  };\n  /*\\\n   * mina.linear\n   [ method ]\n   **\n   * Default linear easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.linear = function (n) {\n    return n;\n  };\n  /*\\\n   * mina.easeout\n   [ method ]\n   **\n   * Easeout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easeout = function (n) {\n    return Math.pow(n, 1.7);\n  };\n  /*\\\n   * mina.easein\n   [ method ]\n   **\n   * Easein easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easein = function (n) {\n    return Math.pow(n, .48);\n  };\n  /*\\\n   * mina.easeinout\n   [ method ]\n   **\n   * Easeinout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easeinout = function (n) {\n    if (n == 1) {\n      return 1;\n    }\n\n    if (n == 0) {\n      return 0;\n    }\n\n    var q = .48 - n / 1.04,\n        Q = Math.sqrt(.1734 + q * q),\n        x = Q - q,\n        X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n        y = -Q - q,\n        Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n        t = X + Y + .5;\n    return (1 - t) * 3 * t * t + t * t * t;\n  };\n  /*\\\n   * mina.backin\n   [ method ]\n   **\n   * Backin easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.backin = function (n) {\n    if (n == 1) {\n      return 1;\n    }\n\n    var s = 1.70158;\n    return n * n * ((s + 1) * n - s);\n  };\n  /*\\\n   * mina.backout\n   [ method ]\n   **\n   * Backout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.backout = function (n) {\n    if (n == 0) {\n      return 0;\n    }\n\n    n = n - 1;\n    var s = 1.70158;\n    return n * n * ((s + 1) * n + s) + 1;\n  };\n  /*\\\n   * mina.elastic\n   [ method ]\n   **\n   * Elastic easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.elastic = function (n) {\n    if (n == !!n) {\n      return n;\n    }\n\n    return Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1;\n  };\n  /*\\\n   * mina.bounce\n   [ method ]\n   **\n   * Bounce easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.bounce = function (n) {\n    var s = 7.5625,\n        p = 2.75,\n        l;\n\n    if (n < 1 / p) {\n      l = s * n * n;\n    } else {\n      if (n < 2 / p) {\n        n -= 1.5 / p;\n        l = s * n * n + .75;\n      } else {\n        if (n < 2.5 / p) {\n          n -= 2.25 / p;\n          l = s * n * n + .9375;\n        } else {\n          n -= 2.625 / p;\n          l = s * n * n + .984375;\n        }\n      }\n    }\n\n    return l;\n  };\n\n  window.mina = mina;\n  return mina;\n}(typeof eve == \"undefined\" ? function () {} : eve); // Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nvar Snap = function (root) {\n  Snap.version = \"0.5.1\";\n  /*\\\n   * Snap\n   [ method ]\n   **\n   * Creates a drawing surface or wraps existing SVG element.\n   **\n   - width (number|string) width of surface\n   - height (number|string) height of surface\n   * or\n   - DOM (SVGElement) element to be wrapped into Snap structure\n   * or\n   - array (array) array of elements (will return set of elements)\n   * or\n   - query (string) CSS query selector\n   = (object) @Element\n  \\*/\n\n  function Snap(w, h) {\n    if (w) {\n      if (w.nodeType) {\n        return wrap(w);\n      }\n\n      if (is(w, \"array\") && Snap.set) {\n        return Snap.set.apply(Snap, w);\n      }\n\n      if (w instanceof Element) {\n        return w;\n      }\n\n      if (h == null) {\n        try {\n          w = glob.doc.querySelector(String(w));\n          return wrap(w);\n        } catch (e) {\n          return null;\n        }\n      }\n    }\n\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n  }\n\n  Snap.toString = function () {\n    return \"Snap v\" + this.version;\n  };\n\n  Snap._ = {};\n  var glob = {\n    win: root.window,\n    doc: root.window.document\n  };\n  Snap._.glob = glob;\n\n  var has = \"hasOwnProperty\",\n      Str = String,\n      toFloat = parseFloat,\n      toInt = parseInt,\n      math = Math,\n      mmax = math.max,\n      mmin = math.min,\n      abs = math.abs,\n      pow = math.pow,\n      PI = math.PI,\n      round = math.round,\n      E = \"\",\n      S = \" \",\n      objectToString = Object.prototype.toString,\n      ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n      colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n      bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n      separator = Snap._.separator = /[,\\s]+/,\n      whitespace = /[\\s]/g,\n      commaSpaces = /[\\s]*,[\\s]*/,\n      hsrg = {\n    hs: 1,\n    rg: 1\n  },\n      pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n      idgen = 0,\n      idprefix = \"S\" + (+new Date()).toString(36),\n      ID = function ID(el) {\n    return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n  },\n      xlink = \"http://www.w3.org/1999/xlink\",\n      xmlns = \"http://www.w3.org/2000/svg\",\n      hub = {},\n\n  /*\\\n   * Snap.url\n   [ method ]\n   **\n   * Wraps path into `\"url('<path>')\"`.\n   - value (string) path\n   = (string) wrapped path\n  \\*/\n  URL = Snap.url = function (url) {\n    return \"url('#\" + url + \"')\";\n  };\n\n  function $(el, attr) {\n    if (attr) {\n      if (el == \"#text\") {\n        el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n      }\n\n      if (el == \"#comment\") {\n        el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n      }\n\n      if (typeof el == \"string\") {\n        el = $(el);\n      }\n\n      if (typeof attr == \"string\") {\n        if (el.nodeType == 1) {\n          if (attr.substring(0, 6) == \"xlink:\") {\n            return el.getAttributeNS(xlink, attr.substring(6));\n          }\n\n          if (attr.substring(0, 4) == \"xml:\") {\n            return el.getAttributeNS(xmlns, attr.substring(4));\n          }\n\n          return el.getAttribute(attr);\n        } else if (attr == \"text\") {\n          return el.nodeValue;\n        } else {\n          return null;\n        }\n      }\n\n      if (el.nodeType == 1) {\n        for (var key in attr) {\n          if (attr[has](key)) {\n            var val = Str(attr[key]);\n\n            if (val) {\n              if (key.substring(0, 6) == \"xlink:\") {\n                el.setAttributeNS(xlink, key.substring(6), val);\n              } else if (key.substring(0, 4) == \"xml:\") {\n                el.setAttributeNS(xmlns, key.substring(4), val);\n              } else {\n                el.setAttribute(key, val);\n              }\n            } else {\n              el.removeAttribute(key);\n            }\n          }\n        }\n      } else if (\"text\" in attr) {\n        el.nodeValue = attr.text;\n      }\n    } else {\n      el = glob.doc.createElementNS(xmlns, el);\n    }\n\n    return el;\n  }\n\n  Snap._.$ = $;\n  Snap._.id = ID;\n\n  function getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n\n    for (var i = 0; i < attrs.length; i++) {\n      if (attrs[i].namespaceURI == xlink) {\n        name = \"xlink:\";\n      } else {\n        name = \"\";\n      }\n\n      name += attrs[i].name;\n      out[name] = attrs[i].textContent;\n    }\n\n    return out;\n  }\n\n  function is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n\n    if (type == \"finite\") {\n      return isFinite(o);\n    }\n\n    if (type == \"array\" && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n      return true;\n    }\n\n    return type == \"null\" && o === null || type == typeof o && o !== null || type == \"object\" && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type;\n  }\n  /*\\\n   * Snap.format\n   [ method ]\n   **\n   * Replaces construction of type `{<name>}` to the corresponding argument\n   **\n   - token (string) string to format\n   - json (object) object which properties are used as a replacement\n   = (string) formatted string\n   > Usage\n   | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n   | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n   |     x: 10,\n   |     y: 20,\n   |     dim: {\n   |         width: 40,\n   |         height: 50,\n   |         \"negative width\": -40\n   |     }\n   | }));\n  \\*/\n\n\n  Snap.format = function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,\n        // matches .xxxxx or [\"xxxxx\"] to run over object properties\n    replacer = function replacer(all, key, obj) {\n      var res = obj;\n      key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n        name = name || quotedName;\n\n        if (res) {\n          if (name in res) {\n            res = res[name];\n          }\n\n          typeof res == \"function\" && isFunc && (res = res());\n        }\n      });\n      res = (res == null || res == obj ? all : res) + \"\";\n      return res;\n    };\n\n    return function (str, obj) {\n      return Str(str).replace(tokenRegex, function (all, key) {\n        return replacer(all, key, obj);\n      });\n    };\n  }();\n\n  function clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n      return obj;\n    }\n\n    var res = new obj.constructor();\n\n    for (var key in obj) {\n      if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n      }\n    }\n\n    return res;\n  }\n\n  Snap._.clone = clone;\n\n  function repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) {\n      if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n      }\n    }\n  }\n\n  function cacher(f, scope, postprocessor) {\n    function newf() {\n      var arg = Array.prototype.slice.call(arguments, 0),\n          args = arg.join(\"\\u2400\"),\n          cache = newf.cache = newf.cache || {},\n          count = newf.count = newf.count || [];\n\n      if (cache[has](args)) {\n        repush(count, args);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n      }\n\n      count.length >= 1e3 && delete cache[count.shift()];\n      count.push(args);\n      cache[args] = f.apply(scope, arg);\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n\n    return newf;\n  }\n\n  Snap._.cacher = cacher;\n\n  function angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n      var x = x1 - x2,\n          y = y1 - y2;\n\n      if (!x && !y) {\n        return 0;\n      }\n\n      return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n      return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n  }\n\n  function rad(deg) {\n    return deg % 360 * PI / 180;\n  }\n\n  function deg(rad) {\n    return rad * 180 / PI % 360;\n  }\n\n  function x_y() {\n    return this.x + S + this.y;\n  }\n\n  function x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n  }\n  /*\\\n   * Snap.rad\n   [ method ]\n   **\n   * Transform angle to radians\n   - deg (number) angle in degrees\n   = (number) angle in radians\n  \\*/\n\n\n  Snap.rad = rad;\n  /*\\\n   * Snap.deg\n   [ method ]\n   **\n   * Transform angle to degrees\n   - rad (number) angle in radians\n   = (number) angle in degrees\n  \\*/\n\n  Snap.deg = deg;\n  /*\\\n   * Snap.sin\n   [ method ]\n   **\n   * Equivalent to `Math.sin()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) sin\n  \\*/\n\n  Snap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.tan\n   [ method ]\n   **\n   * Equivalent to `Math.tan()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) tan\n  \\*/\n\n\n  Snap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.cos\n   [ method ]\n   **\n   * Equivalent to `Math.cos()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) cos\n  \\*/\n\n\n  Snap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.asin\n   [ method ]\n   **\n   * Equivalent to `Math.asin()` only works with degrees, not radians.\n   - num (number) value\n   = (number) asin in degrees\n  \\*/\n\n\n  Snap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n  };\n  /*\\\n   * Snap.acos\n   [ method ]\n   **\n   * Equivalent to `Math.acos()` only works with degrees, not radians.\n   - num (number) value\n   = (number) acos in degrees\n  \\*/\n\n\n  Snap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n  };\n  /*\\\n   * Snap.atan\n   [ method ]\n   **\n   * Equivalent to `Math.atan()` only works with degrees, not radians.\n   - num (number) value\n   = (number) atan in degrees\n  \\*/\n\n\n  Snap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n  };\n  /*\\\n   * Snap.atan2\n   [ method ]\n   **\n   * Equivalent to `Math.atan2()` only works with degrees, not radians.\n   - num (number) value\n   = (number) atan2 in degrees\n  \\*/\n\n\n  Snap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n  };\n  /*\\\n   * Snap.angle\n   [ method ]\n   **\n   * Returns an angle between two or three points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   - x3 (number) #optional x coord of third point\n   - y3 (number) #optional y coord of third point\n   = (number) angle in degrees\n  \\*/\n\n\n  Snap.angle = angle;\n  /*\\\n   * Snap.len\n   [ method ]\n   **\n   * Returns distance between two points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   = (number) distance\n  \\*/\n\n  Snap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n  };\n  /*\\\n   * Snap.len2\n   [ method ]\n   **\n   * Returns squared distance between two points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   = (number) distance\n  \\*/\n\n\n  Snap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n  };\n  /*\\\n   * Snap.closestPoint\n   [ method ]\n   **\n   * Returns closest point to a given one on a given path.\n   - path (Element) path element\n   - x (number) x coord of a point\n   - y (number) y coord of a point\n   = (object) in format\n   {\n      x (number) x coord of the point on the path\n      y (number) y coord of the point on the path\n      length (number) length of the path to the point\n      distance (number) distance from the given point to the path\n   }\n  \\*/\n  // Copied from http://bl.ocks.org/mbostock/8027637\n\n\n  Snap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n      var dx = p.x - x,\n          dy = p.y - y;\n      return dx * dx + dy * dy;\n    }\n\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity; // linear scan for coarse approximation\n\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n      if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n        best = scan;\n        bestLength = scanLength;\n        bestDistance = scanDistance;\n      }\n    } // binary search for precise estimate\n\n\n    precision *= .5;\n\n    while (precision > .5) {\n      var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n\n      if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n        best = before;\n        bestLength = beforeLength;\n        bestDistance = beforeDistance;\n      } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n        best = after;\n        bestLength = afterLength;\n        bestDistance = afterDistance;\n      } else {\n        precision *= .5;\n      }\n    }\n\n    best = {\n      x: best.x,\n      y: best.y,\n      length: bestLength,\n      distance: Math.sqrt(bestDistance)\n    };\n    return best;\n  };\n  /*\\\n   * Snap.is\n   [ method ]\n   **\n   * Handy replacement for the `typeof` operator\n   - o (…) any object or primitive\n   - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n   = (boolean) `true` if given value is of given type\n  \\*/\n\n\n  Snap.is = is;\n  /*\\\n   * Snap.snapTo\n   [ method ]\n   **\n   * Snaps given value to given grid\n   - values (array|number) given array of values or step of the grid\n   - value (number) value to adjust\n   - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n   = (number) adjusted value\n  \\*/\n\n  Snap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\n    if (is(values, \"array\")) {\n      var i = values.length;\n\n      while (i--) {\n        if (abs(values[i] - value) <= tolerance) {\n          return values[i];\n        }\n      }\n    } else {\n      values = +values;\n      var rem = value % values;\n\n      if (rem < tolerance) {\n        return value - rem;\n      }\n\n      if (rem > values - tolerance) {\n        return value - rem + values;\n      }\n    }\n\n    return value;\n  }; // Colour\n\n  /*\\\n   * Snap.getRGB\n   [ method ]\n   **\n   * Parses color string as RGB object\n   - color (string) color string in one of the following formats:\n   # <ul>\n   #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n   #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n   #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n   #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n   #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n   #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n   #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n   #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n   #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n   #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n   #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n   #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n   # </ul>\n   * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••,\n   o     error (boolean) true if string can't be parsed\n   o }\n  \\*/\n\n\n  Snap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }\n\n    if (colour == \"none\") {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        toString: rgbtoString\n      };\n    }\n\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = _toHex(colour));\n\n    if (!colour) {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }\n\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n\n    if (rgb) {\n      if (rgb[2]) {\n        blue = toInt(rgb[2].substring(5), 16);\n        green = toInt(rgb[2].substring(3, 5), 16);\n        red = toInt(rgb[2].substring(1, 3), 16);\n      }\n\n      if (rgb[3]) {\n        blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n        green = toInt((t = rgb[3].charAt(2)) + t, 16);\n        red = toInt((t = rgb[3].charAt(1)) + t, 16);\n      }\n\n      if (rgb[4]) {\n        values = rgb[4].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red *= 2.55);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green *= 2.55);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue *= 2.55);\n        rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      }\n\n      if (rgb[5]) {\n        values = rgb[5].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red /= 100);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green /= 100);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue /= 100);\n        (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n        rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        return Snap.hsb2rgb(red, green, blue, opacity);\n      }\n\n      if (rgb[6]) {\n        values = rgb[6].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red /= 100);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green /= 100);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue /= 100);\n        (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n        rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        return Snap.hsl2rgb(red, green, blue, opacity);\n      }\n\n      red = mmin(math.round(red), 255);\n      green = mmin(math.round(green), 255);\n      blue = mmin(math.round(blue), 255);\n      opacity = mmin(mmax(opacity, 0), 1);\n      rgb = {\n        r: red,\n        g: green,\n        b: blue,\n        toString: rgbtoString\n      };\n      rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n      rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n      return rgb;\n    }\n\n    return {\n      r: -1,\n      g: -1,\n      b: -1,\n      hex: \"none\",\n      error: 1,\n      toString: rgbtoString\n    };\n  }, Snap);\n  /*\\\n   * Snap.hsb\n   [ method ]\n   **\n   * Converts HSB values to a hex representation of the color\n   - h (number) hue\n   - s (number) saturation\n   - b (number) value or brightness\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n  });\n  /*\\\n   * Snap.hsl\n   [ method ]\n   **\n   * Converts HSL values to a hex representation of the color\n   - h (number) hue\n   - s (number) saturation\n   - l (number) luminosity\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n  });\n  /*\\\n   * Snap.rgb\n   [ method ]\n   **\n   * Converts RGB values to a hex representation of the color\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n      var round = math.round;\n      return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n  });\n\n  var _toHex = function toHex(color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    _toHex = cacher(function (color) {\n      if (color.toLowerCase() == \"red\") {\n        return red;\n      }\n\n      i.style.color = red;\n      i.style.color = color;\n      var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n      return out == red ? null : out;\n    });\n    return _toHex(color);\n  },\n      hsbtoString = function hsbtoString() {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n  },\n      hsltoString = function hsltoString() {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n  },\n      rgbtoString = function rgbtoString() {\n    return this.opacity == 1 || this.opacity == null ? this.hex : \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n  },\n      prepareRGB = function prepareRGB(r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n      b = r.b;\n      g = r.g;\n      r = r.r;\n    }\n\n    if (g == null && is(r, string)) {\n      var clr = Snap.getRGB(r);\n      r = clr.r;\n      g = clr.g;\n      b = clr.b;\n    }\n\n    if (r > 1 || g > 1 || b > 1) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n    }\n\n    return [r, g, b];\n  },\n      packageRGB = function packageRGB(r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n      r: r,\n      g: g,\n      b: b,\n      opacity: is(o, \"finite\") ? o : 1,\n      hex: Snap.rgb(r, g, b),\n      toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n  };\n  /*\\\n   * Snap.color\n   [ method ]\n   **\n   * Parses the color string and returns an object featuring the color's component values\n   - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n   = (object) Combined RGB/HSB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••,\n   o     error (boolean) `true` if string can't be parsed,\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     v (number) value (brightness),\n   o     l (number) lightness\n   o }\n  \\*/\n\n\n  Snap.color = function (clr) {\n    var rgb;\n\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n      rgb = Snap.hsb2rgb(clr);\n      clr.r = rgb.r;\n      clr.g = rgb.g;\n      clr.b = rgb.b;\n      clr.opacity = 1;\n      clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n      rgb = Snap.hsl2rgb(clr);\n      clr.r = rgb.r;\n      clr.g = rgb.g;\n      clr.b = rgb.b;\n      clr.opacity = 1;\n      clr.hex = rgb.hex;\n    } else {\n      if (is(clr, \"string\")) {\n        clr = Snap.getRGB(clr);\n      }\n\n      if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n        rgb = Snap.rgb2hsl(clr);\n        clr.h = rgb.h;\n        clr.s = rgb.s;\n        clr.l = rgb.l;\n        rgb = Snap.rgb2hsb(clr);\n        clr.v = rgb.b;\n      } else {\n        clr = {\n          hex: \"none\"\n        };\n        clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n        clr.error = 1;\n      }\n    }\n\n    clr.toString = rgbtoString;\n    return clr;\n  };\n  /*\\\n   * Snap.hsb2rgb\n   [ method ]\n   **\n   * Converts HSB values to an RGB object\n   - h (number) hue\n   - s (number) saturation\n   - v (number) value or brightness\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••\n   o }\n  \\*/\n\n\n  Snap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n      v = h.b;\n      s = h.s;\n      o = h.o;\n      h = h.h;\n    }\n\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n  };\n  /*\\\n   * Snap.hsl2rgb\n   [ method ]\n   **\n   * Converts HSL values to an RGB object\n   - h (number) hue\n   - s (number) saturation\n   - l (number) luminosity\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••\n   o }\n  \\*/\n\n\n  Snap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n      l = h.l;\n      s = h.s;\n      h = h.h;\n    }\n\n    if (h > 1 || s > 1 || l > 1) {\n      h /= 360;\n      s /= 100;\n      l /= 100;\n    }\n\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n  };\n  /*\\\n   * Snap.rgb2hsb\n   [ method ]\n   **\n   * Converts RGB values to an HSB object\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (object) HSB object in the following format:\n   o {\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     b (number) brightness\n   o }\n  \\*/\n\n\n  Snap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {\n      h: H,\n      s: S,\n      b: V,\n      toString: hsbtoString\n    };\n  };\n  /*\\\n   * Snap.rgb2hsl\n   [ method ]\n   **\n   * Converts RGB values to an HSL object\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (object) HSL object in the following format:\n   o {\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     l (number) luminosity\n   o }\n  \\*/\n\n\n  Snap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L);\n    return {\n      h: H,\n      s: S,\n      l: L,\n      toString: hsltoString\n    };\n  }; // Transformations\n\n  /*\\\n   * Snap.parsePathString\n   [ method ]\n   **\n   * Utility method\n   **\n   * Parses given path string into an array of arrays of path segments\n   - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n   = (array) array of segments\n  \\*/\n\n\n  Snap.parsePathString = function (pathString) {\n    if (!pathString) {\n      return null;\n    }\n\n    var pth = Snap.path(pathString);\n\n    if (pth.arr) {\n      return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {\n      a: 7,\n      c: 6,\n      o: 2,\n      h: 1,\n      l: 2,\n      m: 2,\n      r: 4,\n      q: 4,\n      s: 4,\n      t: 2,\n      v: 1,\n      u: 3,\n      z: 0\n    },\n        data = [];\n\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) {\n      // rough assumption\n      data = Snap.path.clone(pathString);\n    }\n\n    if (!data.length) {\n      Str(pathString).replace(pathCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          b && params.push(+b);\n        });\n\n        if (name == \"m\" && params.length > 2) {\n          data.push([b].concat(params.splice(0, 2)));\n          name = \"l\";\n          b = b == \"m\" ? \"l\" : \"L\";\n        }\n\n        if (name == \"o\" && params.length == 1) {\n          data.push([b, params[0]]);\n        }\n\n        if (name == \"r\") {\n          data.push([b].concat(params));\n        } else while (params.length >= paramCounts[name]) {\n          data.push([b].concat(params.splice(0, paramCounts[name])));\n\n          if (!paramCounts[name]) {\n            break;\n          }\n        }\n      });\n    }\n\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n  };\n  /*\\\n   * Snap.parseTransformString\n   [ method ]\n   **\n   * Utility method\n   **\n   * Parses given transform string into an array of transformations\n   - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n   = (array) array of transformations\n  \\*/\n\n\n  var parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n      return null;\n    }\n\n    var paramCounts = {\n      r: 3,\n      s: 4,\n      t: 2,\n      m: 6\n    },\n        data = [];\n\n    if (is(TString, \"array\") && is(TString[0], \"array\")) {\n      // rough assumption\n      data = Snap.path.clone(TString);\n    }\n\n    if (!data.length) {\n      Str(TString).replace(tCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          b && params.push(+b);\n        });\n        data.push([b].concat(params));\n      });\n    }\n\n    data.toString = Snap.path.toString;\n    return data;\n  };\n\n  function svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n      params = params.split(/\\s*,\\s*|\\s+/);\n\n      if (name == \"rotate\" && params.length == 1) {\n        params.push(0, 0);\n      }\n\n      if (name == \"scale\") {\n        if (params.length > 2) {\n          params = params.slice(0, 2);\n        } else if (params.length == 2) {\n          params.push(0, 0);\n        }\n\n        if (params.length == 1) {\n          params.push(params[0], 0, 0);\n        }\n      }\n\n      if (name == \"skewX\") {\n        res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n      } else if (name == \"skewY\") {\n        res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n      } else {\n        res.push([name.charAt(0)].concat(params));\n      }\n\n      return all;\n    });\n    return res;\n  }\n\n  Snap._.svgTransform2string = svgTransform2string;\n  Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\n  function transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix();\n\n    if (tdata) {\n      for (var i = 0, ii = tdata.length; i < ii; i++) {\n        var t = tdata[i],\n            tlen = t.length,\n            command = Str(t[0]).toLowerCase(),\n            absolute = t[0] != command,\n            inver = absolute ? m.invert() : 0,\n            x1,\n            y1,\n            x2,\n            y2,\n            bb;\n\n        if (command == \"t\" && tlen == 2) {\n          m.translate(t[1], 0);\n        } else if (command == \"t\" && tlen == 3) {\n          if (absolute) {\n            x1 = inver.x(0, 0);\n            y1 = inver.y(0, 0);\n            x2 = inver.x(t[1], t[2]);\n            y2 = inver.y(t[1], t[2]);\n            m.translate(x2 - x1, y2 - y1);\n          } else {\n            m.translate(t[1], t[2]);\n          }\n        } else if (command == \"r\") {\n          if (tlen == 2) {\n            bb = bb || bbox;\n            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n          } else if (tlen == 4) {\n            if (absolute) {\n              x2 = inver.x(t[2], t[3]);\n              y2 = inver.y(t[2], t[3]);\n              m.rotate(t[1], x2, y2);\n            } else {\n              m.rotate(t[1], t[2], t[3]);\n            }\n          }\n        } else if (command == \"s\") {\n          if (tlen == 2 || tlen == 3) {\n            bb = bb || bbox;\n            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n          } else if (tlen == 4) {\n            if (absolute) {\n              x2 = inver.x(t[2], t[3]);\n              y2 = inver.y(t[2], t[3]);\n              m.scale(t[1], t[1], x2, y2);\n            } else {\n              m.scale(t[1], t[1], t[2], t[3]);\n            }\n          } else if (tlen == 5) {\n            if (absolute) {\n              x2 = inver.x(t[3], t[4]);\n              y2 = inver.y(t[3], t[4]);\n              m.scale(t[1], t[2], x2, y2);\n            } else {\n              m.scale(t[1], t[2], t[3], t[4]);\n            }\n          }\n        } else if (command == \"m\" && tlen == 7) {\n          m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n        }\n      }\n    }\n\n    return m;\n  }\n\n  Snap._.transform2matrix = transform2matrix;\n  Snap._unit2px = unit2px;\n  var contains = glob.doc.contains || glob.doc.compareDocumentPosition ? function (a, b) {\n    var adown = a.nodeType == 9 ? a.documentElement : a,\n        bup = b && b.parentNode;\n    return a == bup || !!(bup && bup.nodeType == 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n  } : function (a, b) {\n    if (b) {\n      while (b) {\n        b = b.parentNode;\n\n        if (b == a) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  function getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select(\"svg\") || Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs = pdefs == null ? false : pdefs.node;\n\n    if (!defs) {\n      defs = make(\"defs\", p.node).node;\n    }\n\n    return defs;\n  }\n\n  function getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n  }\n\n  Snap._.getSomeDefs = getSomeDefs;\n  Snap._.getSomeSVG = getSomeSVG;\n\n  function unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n\n    if (!mgr) {\n      mgr = $(\"rect\");\n      $(mgr, {\n        x: -9e9,\n        y: -9e9,\n        width: 10,\n        height: 10,\n        \"class\": \"svg---mgr\",\n        fill: \"none\"\n      });\n      svg.appendChild(mgr);\n    }\n\n    function getW(val) {\n      if (val == null) {\n        return E;\n      }\n\n      if (val == +val) {\n        return val;\n      }\n\n      $(mgr, {\n        width: val\n      });\n\n      try {\n        return mgr.getBBox().width;\n      } catch (e) {\n        return 0;\n      }\n    }\n\n    function getH(val) {\n      if (val == null) {\n        return E;\n      }\n\n      if (val == +val) {\n        return val;\n      }\n\n      $(mgr, {\n        height: val\n      });\n\n      try {\n        return mgr.getBBox().height;\n      } catch (e) {\n        return 0;\n      }\n    }\n\n    function set(nam, f) {\n      if (name == null) {\n        out[nam] = f(el.attr(nam) || 0);\n      } else if (nam == name) {\n        out = f(value == null ? el.attr(nam) || 0 : value);\n      }\n    }\n\n    switch (el.type) {\n      case \"rect\":\n        set(\"rx\", getW);\n        set(\"ry\", getH);\n\n      case \"image\":\n        set(\"width\", getW);\n        set(\"height\", getH);\n\n      case \"text\":\n        set(\"x\", getW);\n        set(\"y\", getH);\n        break;\n\n      case \"circle\":\n        set(\"cx\", getW);\n        set(\"cy\", getH);\n        set(\"r\", getW);\n        break;\n\n      case \"ellipse\":\n        set(\"cx\", getW);\n        set(\"cy\", getH);\n        set(\"rx\", getW);\n        set(\"ry\", getH);\n        break;\n\n      case \"line\":\n        set(\"x1\", getW);\n        set(\"x2\", getW);\n        set(\"y1\", getH);\n        set(\"y2\", getH);\n        break;\n\n      case \"marker\":\n        set(\"refX\", getW);\n        set(\"markerWidth\", getW);\n        set(\"refY\", getH);\n        set(\"markerHeight\", getH);\n        break;\n\n      case \"radialGradient\":\n        set(\"fx\", getW);\n        set(\"fy\", getH);\n        break;\n\n      case \"tspan\":\n        set(\"dx\", getW);\n        set(\"dy\", getH);\n        break;\n\n      default:\n        set(name, getW);\n    }\n\n    svg.removeChild(mgr);\n    return out;\n  }\n  /*\\\n   * Snap.select\n   [ method ]\n   **\n   * Wraps a DOM element specified by CSS selector as @Element\n   - query (string) CSS selector of the element\n   = (Element) the current element\n  \\*/\n\n\n  Snap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n  };\n  /*\\\n   * Snap.selectAll\n   [ method ]\n   **\n   * Wraps DOM elements specified by CSS selector as set or array of @Element\n   - query (string) CSS selector of the element\n   = (Element) the current element\n  \\*/\n\n\n  Snap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n\n    for (var i = 0; i < nodelist.length; i++) {\n      set.push(wrap(nodelist[i]));\n    }\n\n    return set;\n  };\n\n  function add2group(list) {\n    if (!is(list, \"array\")) {\n      list = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var i = 0,\n        j = 0,\n        node = this.node;\n\n    while (this[i]) {\n      delete this[i++];\n    }\n\n    for (i = 0; i < list.length; i++) {\n      if (list[i].type == \"set\") {\n        list[i].forEach(function (el) {\n          node.appendChild(el.node);\n        });\n      } else {\n        node.appendChild(list[i].node);\n      }\n    }\n\n    var children = node.childNodes;\n\n    for (i = 0; i < children.length; i++) {\n      this[j++] = wrap(children[i]);\n    }\n\n    return this;\n  } // Hub garbage collector every 10s\n\n\n  setInterval(function () {\n    for (var key in hub) {\n      if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n          delete hub[key];\n        }\n      }\n    }\n  }, 1e4);\n\n  function Element(el) {\n    if (el.snap in hub) {\n      return hub[el.snap];\n    }\n\n    var svg;\n\n    try {\n      svg = el.ownerSVGElement;\n    } catch (e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n\n\n    this.node = el;\n\n    if (svg) {\n      this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n\n\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n      transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n\n    if (this.type == \"g\") {\n      this.add = add2group;\n    }\n\n    if (this.type in {\n      g: 1,\n      mask: 1,\n      pattern: 1,\n      symbol: 1\n    }) {\n      for (var method in Paper.prototype) {\n        if (Paper.prototype[has](method)) {\n          this[method] = Paper.prototype[method];\n        }\n      }\n    }\n  }\n  /*\\\n    * Element.attr\n    [ method ]\n    **\n    * Gets or sets given attributes of the element.\n    **\n    - params (object) contains key-value pairs of attributes you want to set\n    * or\n    - param (string) name of the attribute\n    = (Element) the current element\n    * or\n    = (string) value of attribute\n    > Usage\n    | el.attr({\n    |     fill: \"#fc0\",\n    |     stroke: \"#000\",\n    |     strokeWidth: 2, // CamelCase...\n    |     \"fill-opacity\": 0.5, // or dash-separated names\n    |     width: \"*=2\" // prefixed values\n    | });\n    | console.log(el.attr(\"fill\")); // #fc0\n    * Prefixed values in format `\"+=10\"` supported. All four operations\n    * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n    * and `-`: `\"+=2em\"`.\n   \\*/\n\n\n  Element.prototype.attr = function (params, value) {\n    var el = this,\n        node = el.node;\n\n    if (!params) {\n      if (node.nodeType != 1) {\n        return {\n          text: node.nodeValue\n        };\n      }\n\n      var attr = node.attributes,\n          out = {};\n\n      for (var i = 0, ii = attr.length; i < ii; i++) {\n        out[attr[i].nodeName] = attr[i].nodeValue;\n      }\n\n      return out;\n    }\n\n    if (is(params, \"string\")) {\n      if (arguments.length > 1) {\n        var json = {};\n        json[params] = value;\n        params = json;\n      } else {\n        return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n      }\n    }\n\n    for (var att in params) {\n      if (params[has](att)) {\n        eve(\"snap.util.attr.\" + att, el, params[att]);\n      }\n    }\n\n    return el;\n  };\n  /*\\\n   * Snap.parse\n   [ method ]\n   **\n   * Parses SVG fragment and converts it into a @Fragment\n   **\n   - svg (string) SVG string\n   = (Fragment) the @Fragment\n  \\*/\n\n\n  Snap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n      svg = \"<svg>\" + svg + \"</svg>\";\n      full = false;\n    }\n\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n\n    if (svg) {\n      if (full) {\n        f = svg;\n      } else {\n        while (svg.firstChild) {\n          f.appendChild(svg.firstChild);\n        }\n      }\n    }\n\n    return new Fragment(f);\n  };\n\n  function Fragment(frag) {\n    this.node = frag;\n  }\n  /*\\\n   * Snap.fragment\n   [ method ]\n   **\n   * Creates a DOM fragment from a given list of elements or strings\n   **\n   - varargs (…) SVG string\n   = (Fragment) the @Fragment\n  \\*/\n\n\n  Snap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n\n    for (var i = 0, ii = args.length; i < ii; i++) {\n      var item = args[i];\n\n      if (item.node && item.node.nodeType) {\n        f.appendChild(item.node);\n      }\n\n      if (item.nodeType) {\n        f.appendChild(item);\n      }\n\n      if (typeof item == \"string\") {\n        f.appendChild(Snap.parse(item).node);\n      }\n    }\n\n    return new Fragment(f);\n  };\n\n  function make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n  }\n\n  function Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n      if (w.snap in hub) {\n        return hub[w.snap];\n      }\n\n      var doc = w.ownerDocument;\n      res = new Element(w);\n      desc = w.getElementsByTagName(\"desc\")[0];\n      defs = w.getElementsByTagName(\"defs\")[0];\n\n      if (!desc) {\n        desc = $(\"desc\");\n        desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n        res.node.appendChild(desc);\n      }\n\n      if (!defs) {\n        defs = $(\"defs\");\n        res.node.appendChild(defs);\n      }\n\n      res.defs = defs;\n\n      for (var key in proto) {\n        if (proto[has](key)) {\n          res[key] = proto[key];\n        }\n      }\n\n      res.paper = res.root = res;\n    } else {\n      res = make(\"svg\", glob.doc.body);\n      $(res.node, {\n        height: h,\n        version: 1.1,\n        width: w,\n        xmlns: xmlns\n      });\n    }\n\n    return res;\n  }\n\n  function wrap(dom) {\n    if (!dom) {\n      return dom;\n    }\n\n    if (dom instanceof Element || dom instanceof Fragment) {\n      return dom;\n    }\n\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n      return new Paper(dom);\n    }\n\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n      return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n\n    return new Element(dom);\n  }\n\n  Snap._.make = make;\n  Snap._.wrap = wrap;\n  /*\\\n   * Paper.el\n   [ method ]\n   **\n   * Creates an element on paper with a given name and no attributes\n   **\n   - name (string) tag name\n   - attr (object) attributes\n   = (Element) the current element\n   > Usage\n   | var c = paper.circle(10, 10, 10); // is the same as...\n   | var c = paper.el(\"circle\").attr({\n   |     cx: 10,\n   |     cy: 10,\n   |     r: 10\n   | });\n   | // and the same as\n   | var c = paper.el(\"circle\", {\n   |     cx: 10,\n   |     cy: 10,\n   |     r: 10\n   | });\n  \\*/\n\n  Paper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n  };\n  /*\\\n   * Element.children\n   [ method ]\n   **\n   * Returns array of all the children of the element.\n   = (array) array of Elements\n  \\*/\n\n\n  Element.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n      out[i] = Snap(ch[i]);\n    }\n\n    return out;\n  };\n\n  function jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n      var item = {\n        type: root[i].type,\n        attr: root[i].attr()\n      },\n          children = root[i].children();\n      o.push(item);\n\n      if (children.length) {\n        jsonFiller(children, item.childNodes = []);\n      }\n    }\n  }\n  /*\\\n   * Element.toJSON\n   [ method ]\n   **\n   * Returns object representation of the given element and all its children.\n   = (object) in format\n   o {\n   o     type (string) this.type,\n   o     attr (object) attributes map,\n   o     childNodes (array) optional array of children in the same format\n   o }\n  \\*/\n\n\n  Element.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n  }; // default\n\n\n  eve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n      return \"-\" + letter.toLowerCase();\n    });\n\n    if (cssAttr[has](css)) {\n      return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n      return $(this.node, att);\n    }\n  });\n  var cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n  };\n  eve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n      return letter.toUpperCase();\n    }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n      return \"-\" + letter.toLowerCase();\n    });\n\n    if (cssAttr[has](css)) {\n      this.node.style[style] = value == null ? E : value;\n    } else {\n      $(this.node, attr);\n    }\n  });\n\n  (function (proto) {})(Paper.prototype); // simple ajax\n\n  /*\\\n   * Snap.ajax\n   [ method ]\n   **\n   * Simple implementation of Ajax\n   **\n   - url (string) URL\n   - postData (object|string) data for post request\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n   * or\n   - url (string) URL\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n   = (XMLHttpRequest) the XMLHttpRequest object, just in case\n  \\*/\n\n\n  Snap.ajax = function (url, postData, callback, scope) {\n    var req = new XMLHttpRequest(),\n        id = ID();\n\n    if (req) {\n      if (is(postData, \"function\")) {\n        scope = callback;\n        callback = postData;\n        postData = null;\n      } else if (is(postData, \"object\")) {\n        var pd = [];\n\n        for (var key in postData) {\n          if (postData.hasOwnProperty(key)) {\n            pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n          }\n        }\n\n        postData = pd.join(\"&\");\n      }\n\n      req.open(postData ? \"POST\" : \"GET\", url, true);\n\n      if (postData) {\n        req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n      }\n\n      if (callback) {\n        eve.once(\"snap.ajax.\" + id + \".0\", callback);\n        eve.once(\"snap.ajax.\" + id + \".200\", callback);\n        eve.once(\"snap.ajax.\" + id + \".304\", callback);\n      }\n\n      req.onreadystatechange = function () {\n        if (req.readyState != 4) return;\n        eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n      };\n\n      if (req.readyState == 4) {\n        return req;\n      }\n\n      req.send(postData);\n      return req;\n    }\n  };\n  /*\\\n   * Snap.load\n   [ method ]\n   **\n   * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n   **\n   - url (string) URL\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n  \\*/\n\n\n  Snap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n      var f = Snap.parse(req.responseText);\n      scope ? callback.call(scope, f) : callback(f);\n    });\n  };\n\n  var getOffset = function getOffset(elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0,\n        clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n      y: top,\n      x: left\n    };\n  };\n  /*\\\n   * Snap.getElementByPoint\n   [ method ]\n   **\n   * Returns you topmost element under given point.\n   **\n   = (object) Snap element object\n   - x (number) x coordinate from the top left corner of the window\n   - y (number) y coordinate from the top left corner of the window\n   > Usage\n   | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n  \\*/\n\n\n  Snap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n\n    if (glob.win.opera && target.tagName == \"svg\") {\n      var so = getOffset(target),\n          sr = target.createSVGRect();\n      sr.x = x - so.x;\n      sr.y = y - so.y;\n      sr.width = sr.height = 1;\n      var hits = target.getIntersectionList(sr, null);\n\n      if (hits.length) {\n        target = hits[hits.length - 1];\n      }\n    }\n\n    if (!target) {\n      return null;\n    }\n\n    return wrap(target);\n  };\n  /*\\\n   * Snap.plugin\n   [ method ]\n   **\n   * Let you write plugins. You pass in a function with five arguments, like this:\n   | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n   |     Snap.newmethod = function () {};\n   |     Element.prototype.newmethod = function () {};\n   |     Paper.prototype.newmethod = function () {};\n   | });\n   * Inside the function you have access to all main objects (and their\n   * prototypes). This allow you to extend anything you want.\n   **\n   - f (function) your plugin body\n  \\*/\n\n\n  Snap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n  };\n\n  glob.win.Snap = Snap;\n  return Snap;\n}(window || this); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      unit2px = Snap._unit2px,\n      $ = Snap._.$,\n      make = Snap._.make,\n      getSomeDefs = Snap._.getSomeDefs,\n      has = \"hasOwnProperty\",\n      wrap = Snap._.wrap;\n  /*\\\n   * Element.getBBox\n   [ method ]\n   **\n   * Returns the bounding box descriptor for the given element\n   **\n   = (object) bounding box descriptor:\n   o {\n   o     cx: (number) x of the center,\n   o     cy: (number) x of the center,\n   o     h: (number) height,\n   o     height: (number) height,\n   o     path: (string) path command for the box,\n   o     r0: (number) radius of a circle that fully encloses the box,\n   o     r1: (number) radius of the smallest circle that can be enclosed,\n   o     r2: (number) radius of the largest circle that can be enclosed,\n   o     vb: (string) box as a viewbox command,\n   o     w: (number) width,\n   o     width: (number) width,\n   o     x2: (number) x of the right side,\n   o     x: (number) x of the left side,\n   o     y2: (number) y of the bottom edge,\n   o     y: (number) y of the top edge\n   o }\n  \\*/\n\n  elproto.getBBox = function (isWithoutTransform) {\n    if (this.type == \"tspan\") {\n      return Snap._.box(this.node.getClientRects().item(0));\n    }\n\n    if (!Snap.Matrix || !Snap.path) {\n      return this.node.getBBox();\n    }\n\n    var el = this,\n        m = new Snap.Matrix();\n\n    if (el.removed) {\n      return Snap._.box();\n    }\n\n    while (el.type == \"use\") {\n      if (!isWithoutTransform) {\n        m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n      }\n\n      if (el.original) {\n        el = el.original;\n      } else {\n        var href = el.attr(\"xlink:href\");\n        el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n      }\n    }\n\n    var _ = el._,\n        pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\n    try {\n      if (isWithoutTransform) {\n        _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n        return Snap._.box(_.bboxwt);\n      } else {\n        el.realPath = pathfinder(el);\n        el.matrix = el.transform().localMatrix;\n        _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n        return Snap._.box(_.bbox);\n      }\n    } catch (e) {\n      // Firefox doesn’t give you bbox of hidden element\n      return Snap._.box();\n    }\n  };\n\n  var propString = function propString() {\n    return this.string;\n  };\n\n  function extractTransform(el, tstr) {\n    if (tstr == null) {\n      var doReturn = true;\n\n      if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n        tstr = el.node.getAttribute(\"gradientTransform\");\n      } else if (el.type == \"pattern\") {\n        tstr = el.node.getAttribute(\"patternTransform\");\n      } else {\n        tstr = el.node.getAttribute(\"transform\");\n      }\n\n      if (!tstr) {\n        return new Snap.Matrix();\n      }\n\n      tstr = Snap._.svgTransform2string(tstr);\n    } else {\n      if (!Snap._.rgTransform.test(tstr)) {\n        tstr = Snap._.svgTransform2string(tstr);\n      } else {\n        tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n      }\n\n      if (is(tstr, \"array\")) {\n        tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n      }\n\n      el._.transform = tstr;\n    }\n\n    var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\n    if (doReturn) {\n      return m;\n    } else {\n      el.matrix = m;\n    }\n  }\n  /*\\\n   * Element.transform\n   [ method ]\n   **\n   * Gets or sets transformation of the element\n   **\n   - tstr (string) transform string in Snap or SVG format\n   = (Element) the current element\n   * or\n   = (object) transformation descriptor:\n   o {\n   o     string (string) transform string,\n   o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n   o     localMatrix (Matrix) matrix of transformations applied only to the element,\n   o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n   o     global (string) global transformation as string,\n   o     local (string) local transformation as string,\n   o     toString (function) returns `string` property\n   o }\n  \\*/\n\n\n  elproto.transform = function (tstr) {\n    var _ = this._;\n\n    if (tstr == null) {\n      var papa = this,\n          global = new Snap.Matrix(this.node.getCTM()),\n          local = extractTransform(this),\n          ms = [local],\n          m = new Snap.Matrix(),\n          i,\n          localString = local.toTransformString(),\n          string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n\n      while (papa.type != \"svg\" && (papa = papa.parent())) {\n        ms.push(extractTransform(papa));\n      }\n\n      i = ms.length;\n\n      while (i--) {\n        m.add(ms[i]);\n      }\n\n      return {\n        string: string,\n        globalMatrix: global,\n        totalMatrix: m,\n        localMatrix: local,\n        diffMatrix: global.clone().add(local.invert()),\n        global: global.toTransformString(),\n        total: m.toTransformString(),\n        local: localString,\n        toString: propString\n      };\n    }\n\n    if (tstr instanceof Snap.Matrix) {\n      this.matrix = tstr;\n      this._.transform = tstr.toTransformString();\n    } else {\n      extractTransform(this, tstr);\n    }\n\n    if (this.node) {\n      if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n        $(this.node, {\n          gradientTransform: this.matrix\n        });\n      } else if (this.type == \"pattern\") {\n        $(this.node, {\n          patternTransform: this.matrix\n        });\n      } else {\n        $(this.node, {\n          transform: this.matrix\n        });\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.parent\n   [ method ]\n   **\n   * Returns the element's parent\n   **\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.parent = function () {\n    return wrap(this.node.parentNode);\n  };\n  /*\\\n   * Element.append\n   [ method ]\n   **\n   * Appends the given element to current one\n   **\n   - el (Element|Set) element to append\n   = (Element) the parent element\n  \\*/\n\n  /*\\\n   * Element.add\n   [ method ]\n   **\n   * See @Element.append\n  \\*/\n\n\n  elproto.append = elproto.add = function (el) {\n    if (el) {\n      if (el.type == \"set\") {\n        var it = this;\n        el.forEach(function (el) {\n          it.add(el);\n        });\n        return this;\n      }\n\n      el = wrap(el);\n      this.node.appendChild(el.node);\n      el.paper = this.paper;\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.appendTo\n   [ method ]\n   **\n   * Appends the current element to the given one\n   **\n   - el (Element) parent element to append to\n   = (Element) the child element\n  \\*/\n\n\n  elproto.appendTo = function (el) {\n    if (el) {\n      el = wrap(el);\n      el.append(this);\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.prepend\n   [ method ]\n   **\n   * Prepends the given element to the current one\n   **\n   - el (Element) element to prepend\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.prepend = function (el) {\n    if (el) {\n      if (el.type == \"set\") {\n        var it = this,\n            first;\n        el.forEach(function (el) {\n          if (first) {\n            first.after(el);\n          } else {\n            it.prepend(el);\n          }\n\n          first = el;\n        });\n        return this;\n      }\n\n      el = wrap(el);\n      var parent = el.parent();\n      this.node.insertBefore(el.node, this.node.firstChild);\n      this.add && this.add();\n      el.paper = this.paper;\n      this.parent() && this.parent().add();\n      parent && parent.add();\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.prependTo\n   [ method ]\n   **\n   * Prepends the current element to the given one\n   **\n   - el (Element) parent element to prepend to\n   = (Element) the child element\n  \\*/\n\n\n  elproto.prependTo = function (el) {\n    el = wrap(el);\n    el.prepend(this);\n    return this;\n  };\n  /*\\\n   * Element.before\n   [ method ]\n   **\n   * Inserts given element before the current one\n   **\n   - el (Element) element to insert\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.before = function (el) {\n    if (el.type == \"set\") {\n      var it = this;\n      el.forEach(function (el) {\n        var parent = el.parent();\n        it.node.parentNode.insertBefore(el.node, it.node);\n        parent && parent.add();\n      });\n      this.parent().add();\n      return this;\n    }\n\n    el = wrap(el);\n    var parent = el.parent();\n    this.node.parentNode.insertBefore(el.node, this.node);\n    this.parent() && this.parent().add();\n    parent && parent.add();\n    el.paper = this.paper;\n    return this;\n  };\n  /*\\\n   * Element.after\n   [ method ]\n   **\n   * Inserts given element after the current one\n   **\n   - el (Element) element to insert\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.after = function (el) {\n    el = wrap(el);\n    var parent = el.parent();\n\n    if (this.node.nextSibling) {\n      this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n    } else {\n      this.node.parentNode.appendChild(el.node);\n    }\n\n    this.parent() && this.parent().add();\n    parent && parent.add();\n    el.paper = this.paper;\n    return this;\n  };\n  /*\\\n   * Element.insertBefore\n   [ method ]\n   **\n   * Inserts the element after the given one\n   **\n   - el (Element) element next to whom insert to\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.insertBefore = function (el) {\n    el = wrap(el);\n    var parent = this.parent();\n    el.node.parentNode.insertBefore(this.node, el.node);\n    this.paper = el.paper;\n    parent && parent.add();\n    el.parent() && el.parent().add();\n    return this;\n  };\n  /*\\\n   * Element.insertAfter\n   [ method ]\n   **\n   * Inserts the element after the given one\n   **\n   - el (Element) element next to whom insert to\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.insertAfter = function (el) {\n    el = wrap(el);\n    var parent = this.parent();\n    el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n    this.paper = el.paper;\n    parent && parent.add();\n    el.parent() && el.parent().add();\n    return this;\n  };\n  /*\\\n   * Element.remove\n   [ method ]\n   **\n   * Removes element from the DOM\n   = (Element) the detached element\n  \\*/\n\n\n  elproto.remove = function () {\n    var parent = this.parent();\n    this.node.parentNode && this.node.parentNode.removeChild(this.node);\n    delete this.paper;\n    this.removed = true;\n    parent && parent.add();\n    return this;\n  };\n  /*\\\n   * Element.select\n   [ method ]\n   **\n   * Gathers the nested @Element matching the given set of CSS selectors\n   **\n   - query (string) CSS selector\n   = (Element) result of query selection\n  \\*/\n\n\n  elproto.select = function (query) {\n    return wrap(this.node.querySelector(query));\n  };\n  /*\\\n   * Element.selectAll\n   [ method ]\n   **\n   * Gathers nested @Element objects matching the given set of CSS selectors\n   **\n   - query (string) CSS selector\n   = (Set|array) result of query selection\n  \\*/\n\n\n  elproto.selectAll = function (query) {\n    var nodelist = this.node.querySelectorAll(query),\n        set = (Snap.set || Array)();\n\n    for (var i = 0; i < nodelist.length; i++) {\n      set.push(wrap(nodelist[i]));\n    }\n\n    return set;\n  };\n  /*\\\n   * Element.asPX\n   [ method ]\n   **\n   * Returns given attribute of the element as a `px` value (not %, em, etc.)\n   **\n   - attr (string) attribute name\n   - value (string) #optional attribute value\n   = (Element) result of query selection\n  \\*/\n\n\n  elproto.asPX = function (attr, value) {\n    if (value == null) {\n      value = this.attr(attr);\n    }\n\n    return +unit2px(this, attr, value);\n  }; // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\n  /*\\\n   * Element.use\n   [ method ]\n   **\n   * Creates a `<use>` element linked to the current element\n   **\n   = (Element) the `<use>` element\n  \\*/\n\n\n  elproto.use = function () {\n    var use,\n        id = this.node.id;\n\n    if (!id) {\n      id = this.id;\n      $(this.node, {\n        id: id\n      });\n    }\n\n    if (this.type == \"linearGradient\" || this.type == \"radialGradient\" || this.type == \"pattern\") {\n      use = make(this.type, this.node.parentNode);\n    } else {\n      use = make(\"use\", this.node.parentNode);\n    }\n\n    $(use.node, {\n      \"xlink:href\": \"#\" + id\n    });\n    use.original = this;\n    return use;\n  };\n\n  function fixids(el) {\n    var els = el.selectAll(\"*\"),\n        it,\n        url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n        ids = [],\n        uses = {};\n\n    function urltest(it, name) {\n      var val = $(it.node, name);\n      val = val && val.match(url);\n      val = val && val[2];\n\n      if (val && val.charAt() == \"#\") {\n        val = val.substring(1);\n      } else {\n        return;\n      }\n\n      if (val) {\n        uses[val] = (uses[val] || []).concat(function (id) {\n          var attr = {};\n          attr[name] = Snap.url(id);\n          $(it.node, attr);\n        });\n      }\n    }\n\n    function linktest(it) {\n      var val = $(it.node, \"xlink:href\");\n\n      if (val && val.charAt() == \"#\") {\n        val = val.substring(1);\n      } else {\n        return;\n      }\n\n      if (val) {\n        uses[val] = (uses[val] || []).concat(function (id) {\n          it.attr(\"xlink:href\", \"#\" + id);\n        });\n      }\n    }\n\n    for (var i = 0, ii = els.length; i < ii; i++) {\n      it = els[i];\n      urltest(it, \"fill\");\n      urltest(it, \"stroke\");\n      urltest(it, \"filter\");\n      urltest(it, \"mask\");\n      urltest(it, \"clip-path\");\n      linktest(it);\n      var oldid = $(it.node, \"id\");\n\n      if (oldid) {\n        $(it.node, {\n          id: it.id\n        });\n        ids.push({\n          old: oldid,\n          id: it.id\n        });\n      }\n    }\n\n    for (i = 0, ii = ids.length; i < ii; i++) {\n      var fs = uses[ids[i].old];\n\n      if (fs) {\n        for (var j = 0, jj = fs.length; j < jj; j++) {\n          fs[j](ids[i].id);\n        }\n      }\n    }\n  }\n  /*\\\n   * Element.clone\n   [ method ]\n   **\n   * Creates a clone of the element and inserts it after the element\n   **\n   = (Element) the clone\n  \\*/\n\n\n  elproto.clone = function () {\n    var clone = wrap(this.node.cloneNode(true));\n\n    if ($(clone.node, \"id\")) {\n      $(clone.node, {\n        id: clone.id\n      });\n    }\n\n    fixids(clone);\n    clone.insertAfter(this);\n    return clone;\n  };\n  /*\\\n   * Element.toDefs\n   [ method ]\n   **\n   * Moves element to the shared `<defs>` area\n   **\n   = (Element) the element\n  \\*/\n\n\n  elproto.toDefs = function () {\n    var defs = getSomeDefs(this);\n    defs.appendChild(this.node);\n    return this;\n  };\n  /*\\\n   * Element.toPattern\n   [ method ]\n   **\n   * Creates a `<pattern>` element from the current element\n   **\n   * To create a pattern you have to specify the pattern rect:\n   - x (string|number)\n   - y (string|number)\n   - width (string|number)\n   - height (string|number)\n   = (Element) the `<pattern>` element\n   * You can use pattern later on as an argument for `fill` attribute:\n   | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n   |         fill: \"none\",\n   |         stroke: \"#bada55\",\n   |         strokeWidth: 5\n   |     }).pattern(0, 0, 10, 10),\n   |     c = paper.circle(200, 200, 100);\n   | c.attr({\n   |     fill: p\n   | });\n  \\*/\n\n\n  elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n    var p = make(\"pattern\", getSomeDefs(this));\n\n    if (x == null) {\n      x = this.getBBox();\n    }\n\n    if (is(x, \"object\") && \"x\" in x) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      x = x.x;\n    }\n\n    $(p.node, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      patternUnits: \"userSpaceOnUse\",\n      id: p.id,\n      viewBox: [x, y, width, height].join(\" \")\n    });\n    p.node.appendChild(this.node);\n    return p;\n  }; // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n  // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\n  /*\\\n   * Element.marker\n   [ method ]\n   **\n   * Creates a `<marker>` element from the current element\n   **\n   * To create a marker you have to specify the bounding rect and reference point:\n   - x (number)\n   - y (number)\n   - width (number)\n   - height (number)\n   - refX (number)\n   - refY (number)\n   = (Element) the `<marker>` element\n   * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n  \\*/\n  // TODO add usage for markers\n\n\n  elproto.marker = function (x, y, width, height, refX, refY) {\n    var p = make(\"marker\", getSomeDefs(this));\n\n    if (x == null) {\n      x = this.getBBox();\n    }\n\n    if (is(x, \"object\") && \"x\" in x) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      refX = x.refX || x.cx;\n      refY = x.refY || x.cy;\n      x = x.x;\n    }\n\n    $(p.node, {\n      viewBox: [x, y, width, height].join(\" \"),\n      markerWidth: width,\n      markerHeight: height,\n      orient: \"auto\",\n      refX: refX || 0,\n      refY: refY || 0,\n      id: p.id\n    });\n    p.node.appendChild(this.node);\n    return p;\n  };\n\n  var eldata = {};\n  /*\\\n   * Element.data\n   [ method ]\n   **\n   * Adds or retrieves given value associated with given key. (Don’t confuse\n   * with `data-` attributes)\n   *\n   * See also @Element.removeData\n   - key (string) key to store data\n   - value (any) #optional value to store\n   = (object) @Element\n   * or, if value is not specified:\n   = (any) value\n   > Usage\n   | for (var i = 0, i < 5, i++) {\n   |     paper.circle(10 + 15 * i, 10, 10)\n   |          .attr({fill: \"#000\"})\n   |          .data(\"i\", i)\n   |          .click(function () {\n   |             alert(this.data(\"i\"));\n   |          });\n   | }\n  \\*/\n\n  elproto.data = function (key, value) {\n    var data = eldata[this.id] = eldata[this.id] || {};\n\n    if (arguments.length == 0) {\n      eve(\"snap.data.get.\" + this.id, this, data, null);\n      return data;\n    }\n\n    if (arguments.length == 1) {\n      if (Snap.is(key, \"object\")) {\n        for (var i in key) {\n          if (key[has](i)) {\n            this.data(i, key[i]);\n          }\n        }\n\n        return this;\n      }\n\n      eve(\"snap.data.get.\" + this.id, this, data[key], key);\n      return data[key];\n    }\n\n    data[key] = value;\n    eve(\"snap.data.set.\" + this.id, this, value, key);\n    return this;\n  };\n  /*\\\n   * Element.removeData\n   [ method ]\n   **\n   * Removes value associated with an element by given key.\n   * If key is not provided, removes all the data of the element.\n   - key (string) #optional key\n   = (object) @Element\n  \\*/\n\n\n  elproto.removeData = function (key) {\n    if (key == null) {\n      eldata[this.id] = {};\n    } else {\n      eldata[this.id] && delete eldata[this.id][key];\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.outerSVG\n   [ method ]\n   **\n   * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n   *\n   * See also @Element.innerSVG\n   = (string) SVG code for the element\n  \\*/\n\n  /*\\\n   * Element.toString\n   [ method ]\n   **\n   * See @Element.outerSVG\n  \\*/\n\n\n  elproto.outerSVG = elproto.toString = toString(1);\n  /*\\\n   * Element.innerSVG\n   [ method ]\n   **\n   * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n   = (string) SVG code for the element\n  \\*/\n\n  elproto.innerSVG = toString();\n\n  function toString(type) {\n    return function () {\n      var res = type ? \"<\" + this.type : \"\",\n          attr = this.node.attributes,\n          chld = this.node.childNodes;\n\n      if (type) {\n        for (var i = 0, ii = attr.length; i < ii; i++) {\n          res += \" \" + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n        }\n      }\n\n      if (chld.length) {\n        type && (res += \">\");\n\n        for (i = 0, ii = chld.length; i < ii; i++) {\n          if (chld[i].nodeType == 3) {\n            res += chld[i].nodeValue;\n          } else if (chld[i].nodeType == 1) {\n            res += wrap(chld[i]).toString();\n          }\n        }\n\n        type && (res += \"</\" + this.type + \">\");\n      } else {\n        type && (res += \"/>\");\n      }\n\n      return res;\n    };\n  }\n\n  elproto.toDataURL = function () {\n    if (window && window.btoa) {\n      var bb = this.getBBox(),\n          svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n        x: +bb.x.toFixed(3),\n        y: +bb.y.toFixed(3),\n        width: +bb.width.toFixed(3),\n        height: +bb.height.toFixed(3),\n        contents: this.outerSVG()\n      });\n      return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n    }\n  };\n  /*\\\n   * Fragment.select\n   [ method ]\n   **\n   * See @Element.select\n  \\*/\n\n\n  Fragment.prototype.select = elproto.select;\n  /*\\\n   * Fragment.selectAll\n   [ method ]\n   **\n   * See @Element.selectAll\n  \\*/\n\n  Fragment.prototype.selectAll = elproto.selectAll;\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var objectToString = Object.prototype.toString,\n      Str = String,\n      math = Math,\n      E = \"\";\n\n  function Matrix(a, b, c, d, e, f) {\n    if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n      this.a = a.a;\n      this.b = a.b;\n      this.c = a.c;\n      this.d = a.d;\n      this.e = a.e;\n      this.f = a.f;\n      return;\n    }\n\n    if (a != null) {\n      this.a = +a;\n      this.b = +b;\n      this.c = +c;\n      this.d = +d;\n      this.e = +e;\n      this.f = +f;\n    } else {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    }\n  }\n\n  (function (matrixproto) {\n    /*\\\n     * Matrix.add\n     [ method ]\n     **\n     * Adds the given matrix to existing one\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - matrix (object) @Matrix\n    \\*/\n    matrixproto.add = function (a, b, c, d, e, f) {\n      if (a && a instanceof Matrix) {\n        return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n      }\n\n      var aNew = a * this.a + b * this.c,\n          bNew = a * this.b + b * this.d;\n      this.e += e * this.a + f * this.c;\n      this.f += e * this.b + f * this.d;\n      this.c = c * this.a + d * this.c;\n      this.d = c * this.b + d * this.d;\n      this.a = aNew;\n      this.b = bNew;\n      return this;\n    };\n    /*\\\n     * Matrix.multLeft\n     [ method ]\n     **\n     * Multiplies a passed affine transform to the left: M * this.\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - matrix (object) @Matrix\n    \\*/\n\n\n    Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n      if (a && a instanceof Matrix) {\n        return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n      }\n\n      var aNew = a * this.a + c * this.b,\n          cNew = a * this.c + c * this.d,\n          eNew = a * this.e + c * this.f + e;\n      this.b = b * this.a + d * this.b;\n      this.d = b * this.c + d * this.d;\n      this.f = b * this.e + d * this.f + f;\n      this.a = aNew;\n      this.c = cNew;\n      this.e = eNew;\n      return this;\n    };\n    /*\\\n     * Matrix.invert\n     [ method ]\n     **\n     * Returns an inverted version of the matrix\n     = (object) @Matrix\n    \\*/\n\n\n    matrixproto.invert = function () {\n      var me = this,\n          x = me.a * me.d - me.b * me.c;\n      return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n    };\n    /*\\\n     * Matrix.clone\n     [ method ]\n     **\n     * Returns a copy of the matrix\n     = (object) @Matrix\n    \\*/\n\n\n    matrixproto.clone = function () {\n      return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n    /*\\\n     * Matrix.translate\n     [ method ]\n     **\n     * Translate the matrix\n     - x (number) horizontal offset distance\n     - y (number) vertical offset distance\n    \\*/\n\n\n    matrixproto.translate = function (x, y) {\n      this.e += x * this.a + y * this.c;\n      this.f += x * this.b + y * this.d;\n      return this;\n    };\n    /*\\\n     * Matrix.scale\n     [ method ]\n     **\n     * Scales the matrix\n     - x (number) amount to be scaled, with `1` resulting in no change\n     - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n     - cx (number) #optional horizontal origin point from which to scale\n     - cy (number) #optional vertical origin point from which to scale\n     * Default cx, cy is the middle point of the element.\n    \\*/\n\n\n    matrixproto.scale = function (x, y, cx, cy) {\n      y == null && (y = x);\n      (cx || cy) && this.translate(cx, cy);\n      this.a *= x;\n      this.b *= x;\n      this.c *= y;\n      this.d *= y;\n      (cx || cy) && this.translate(-cx, -cy);\n      return this;\n    };\n    /*\\\n     * Matrix.rotate\n     [ method ]\n     **\n     * Rotates the matrix\n     - a (number) angle of rotation, in degrees\n     - x (number) horizontal origin point from which to rotate\n     - y (number) vertical origin point from which to rotate\n    \\*/\n\n\n    matrixproto.rotate = function (a, x, y) {\n      a = Snap.rad(a);\n      x = x || 0;\n      y = y || 0;\n      var cos = +math.cos(a).toFixed(9),\n          sin = +math.sin(a).toFixed(9);\n      this.add(cos, sin, -sin, cos, x, y);\n      return this.add(1, 0, 0, 1, -x, -y);\n    };\n    /*\\\n     * Matrix.skewX\n     [ method ]\n     **\n     * Skews the matrix along the x-axis\n     - x (number) Angle to skew along the x-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skewX = function (x) {\n      return this.skew(x, 0);\n    };\n    /*\\\n     * Matrix.skewY\n     [ method ]\n     **\n     * Skews the matrix along the y-axis\n     - y (number) Angle to skew along the y-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skewY = function (y) {\n      return this.skew(0, y);\n    };\n    /*\\\n     * Matrix.skew\n     [ method ]\n     **\n     * Skews the matrix\n     - y (number) Angle to skew along the y-axis (in degrees).\n     - x (number) Angle to skew along the x-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skew = function (x, y) {\n      x = x || 0;\n      y = y || 0;\n      x = Snap.rad(x);\n      y = Snap.rad(y);\n      var c = math.tan(x).toFixed(9);\n      var b = math.tan(y).toFixed(9);\n      return this.add(1, b, c, 1, 0, 0);\n    };\n    /*\\\n     * Matrix.x\n     [ method ]\n     **\n     * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n     - x (number)\n     - y (number)\n     = (number) x\n    \\*/\n\n\n    matrixproto.x = function (x, y) {\n      return x * this.a + y * this.c + this.e;\n    };\n    /*\\\n     * Matrix.y\n     [ method ]\n     **\n     * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n     - x (number)\n     - y (number)\n     = (number) y\n    \\*/\n\n\n    matrixproto.y = function (x, y) {\n      return x * this.b + y * this.d + this.f;\n    };\n\n    matrixproto.get = function (i) {\n      return +this[Str.fromCharCode(97 + i)].toFixed(4);\n    };\n\n    matrixproto.toString = function () {\n      return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n    };\n\n    matrixproto.offset = function () {\n      return [this.e.toFixed(4), this.f.toFixed(4)];\n    };\n\n    function norm(a) {\n      return a[0] * a[0] + a[1] * a[1];\n    }\n\n    function normalize(a) {\n      var mag = math.sqrt(norm(a));\n      a[0] && (a[0] /= mag);\n      a[1] && (a[1] /= mag);\n    }\n    /*\\\n     * Matrix.determinant\n     [ method ]\n     **\n     * Finds determinant of the given matrix.\n     = (number) determinant\n    \\*/\n\n\n    matrixproto.determinant = function () {\n      return this.a * this.d - this.b * this.c;\n    };\n    /*\\\n     * Matrix.split\n     [ method ]\n     **\n     * Splits matrix into primitive transformations\n     = (object) in format:\n     o dx (number) translation by x\n     o dy (number) translation by y\n     o scalex (number) scale by x\n     o scaley (number) scale by y\n     o shear (number) shear\n     o rotate (number) rotation in deg\n     o isSimple (boolean) could it be represented via simple transformations\n    \\*/\n\n\n    matrixproto.split = function () {\n      var out = {}; // translation\n\n      out.dx = this.e;\n      out.dy = this.f; // scale and shear\n\n      var row = [[this.a, this.b], [this.c, this.d]];\n      out.scalex = math.sqrt(norm(row[0]));\n      normalize(row[0]);\n      out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n      row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n      out.scaley = math.sqrt(norm(row[1]));\n      normalize(row[1]);\n      out.shear /= out.scaley;\n\n      if (this.determinant() < 0) {\n        out.scalex = -out.scalex;\n      } // rotation\n\n\n      var sin = row[0][1],\n          cos = row[1][1];\n\n      if (cos < 0) {\n        out.rotate = Snap.deg(math.acos(cos));\n\n        if (sin < 0) {\n          out.rotate = 360 - out.rotate;\n        }\n      } else {\n        out.rotate = Snap.deg(math.asin(sin));\n      }\n\n      out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n      out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n      out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n      return out;\n    };\n    /*\\\n     * Matrix.toTransformString\n     [ method ]\n     **\n     * Returns transform string that represents given matrix\n     = (string) transform string\n    \\*/\n\n\n    matrixproto.toTransformString = function (shorter) {\n      var s = shorter || this.split();\n\n      if (!+s.shear.toFixed(9)) {\n        s.scalex = +s.scalex.toFixed(4);\n        s.scaley = +s.scaley.toFixed(4);\n        s.rotate = +s.rotate.toFixed(4);\n        return (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) + (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n      } else {\n        return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n      }\n    };\n  })(Matrix.prototype);\n  /*\\\n   * Snap.Matrix\n   [ method ]\n   **\n   * Matrix constructor, extend on your own risk.\n   * To create matrices use @Snap.matrix.\n  \\*/\n\n\n  Snap.Matrix = Matrix;\n  /*\\\n   * Snap.matrix\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns a matrix based on the given parameters\n   - a (number)\n   - b (number)\n   - c (number)\n   - d (number)\n   - e (number)\n   - f (number)\n   * or\n   - svgMatrix (SVGMatrix)\n   = (object) @Matrix\n  \\*/\n\n  Snap.matrix = function (a, b, c, d, e, f) {\n    return new Matrix(a, b, c, d, e, f);\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var has = \"hasOwnProperty\",\n      make = Snap._.make,\n      wrap = Snap._.wrap,\n      is = Snap.is,\n      getSomeDefs = Snap._.getSomeDefs,\n      reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n      $ = Snap._.$,\n      URL = Snap.url,\n      Str = String,\n      separator = Snap._.separator,\n      E = \"\";\n  /*\\\n   * Snap.deurl\n   [ method ]\n   **\n   * Unwraps path from `\"url(<path>)\"`.\n   - value (string) url path\n   = (string) unwrapped path\n  \\*/\n\n  Snap.deurl = function (value) {\n    var res = String(value).match(reURLValue);\n    return res ? res[2] : value;\n  }; // Attributes event handlers\n\n\n  eve.on(\"snap.util.attr.mask\", function (value) {\n    if (value instanceof Element || value instanceof Fragment) {\n      eve.stop();\n\n      if (value instanceof Fragment && value.node.childNodes.length == 1) {\n        value = value.node.firstChild;\n        getSomeDefs(this).appendChild(value);\n        value = wrap(value);\n      }\n\n      if (value.type == \"mask\") {\n        var mask = value;\n      } else {\n        mask = make(\"mask\", getSomeDefs(this));\n        mask.node.appendChild(value.node);\n      }\n\n      !mask.node.id && $(mask.node, {\n        id: mask.id\n      });\n      $(this.node, {\n        mask: URL(mask.id)\n      });\n    }\n  });\n\n  (function (clipIt) {\n    eve.on(\"snap.util.attr.clip\", clipIt);\n    eve.on(\"snap.util.attr.clip-path\", clipIt);\n    eve.on(\"snap.util.attr.clipPath\", clipIt);\n  })(function (value) {\n    if (value instanceof Element || value instanceof Fragment) {\n      eve.stop();\n      var clip,\n          node = value.node;\n\n      while (node) {\n        if (node.nodeName === \"clipPath\") {\n          clip = new Element(node);\n          break;\n        }\n\n        if (node.nodeName === \"svg\") {\n          clip = undefined;\n          break;\n        }\n\n        node = node.parentNode;\n      }\n\n      if (!clip) {\n        clip = make(\"clipPath\", getSomeDefs(this));\n        clip.node.appendChild(value.node);\n        !clip.node.id && $(clip.node, {\n          id: clip.id\n        });\n      }\n\n      $(this.node, {\n        \"clip-path\": URL(clip.node.id || clip.id)\n      });\n    }\n  });\n\n  function fillStroke(name) {\n    return function (value) {\n      eve.stop();\n\n      if (value instanceof Fragment && value.node.childNodes.length == 1 && (value.node.firstChild.tagName == \"radialGradient\" || value.node.firstChild.tagName == \"linearGradient\" || value.node.firstChild.tagName == \"pattern\")) {\n        value = value.node.firstChild;\n        getSomeDefs(this).appendChild(value);\n        value = wrap(value);\n      }\n\n      if (value instanceof Element) {\n        if (value.type == \"radialGradient\" || value.type == \"linearGradient\" || value.type == \"pattern\") {\n          if (!value.node.id) {\n            $(value.node, {\n              id: value.id\n            });\n          }\n\n          var fill = URL(value.node.id);\n        } else {\n          fill = value.attr(name);\n        }\n      } else {\n        fill = Snap.color(value);\n\n        if (fill.error) {\n          var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\n          if (grad) {\n            if (!grad.node.id) {\n              $(grad.node, {\n                id: grad.id\n              });\n            }\n\n            fill = URL(grad.node.id);\n          } else {\n            fill = value;\n          }\n        } else {\n          fill = Str(fill);\n        }\n      }\n\n      var attrs = {};\n      attrs[name] = fill;\n      $(this.node, attrs);\n      this.node.style[name] = E;\n    };\n  }\n\n  eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n  eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n  var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n  eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n    string = Str(string);\n    var tokens = string.match(gradrg);\n\n    if (!tokens) {\n      return null;\n    }\n\n    var type = tokens[1],\n        params = tokens[2],\n        stops = tokens[3];\n    params = params.split(/\\s*,\\s*/).map(function (el) {\n      return +el == el ? +el : el;\n    });\n\n    if (params.length == 1 && params[0] == 0) {\n      params = [];\n    }\n\n    stops = stops.split(\"-\");\n    stops = stops.map(function (el) {\n      el = el.split(\":\");\n      var out = {\n        color: el[0]\n      };\n\n      if (el[1]) {\n        out.offset = parseFloat(el[1]);\n      }\n\n      return out;\n    });\n    var len = stops.length,\n        start = 0,\n        j = 0;\n\n    function seed(i, end) {\n      var step = (end - start) / (i - j);\n\n      for (var k = j; k < i; k++) {\n        stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n      }\n\n      j = i;\n      start = end;\n    }\n\n    len--;\n\n    for (var i = 0; i < len; i++) {\n      if (\"offset\" in stops[i]) {\n        seed(i, stops[i].offset);\n      }\n    }\n\n    stops[len].offset = stops[len].offset || 100;\n    seed(len, stops[len].offset);\n    return {\n      type: type,\n      params: params,\n      stops: stops\n    };\n  });\n  eve.on(\"snap.util.attr.d\", function (value) {\n    eve.stop();\n\n    if (is(value, \"array\") && is(value[0], \"array\")) {\n      value = Snap.path.toString.call(value);\n    }\n\n    value = Str(value);\n\n    if (value.match(/[ruo]/i)) {\n      value = Snap.path.toAbsolute(value);\n    }\n\n    $(this.node, {\n      d: value\n    });\n  })(-1);\n  eve.on(\"snap.util.attr.#text\", function (value) {\n    eve.stop();\n    value = Str(value);\n    var txt = glob.doc.createTextNode(value);\n\n    while (this.node.firstChild) {\n      this.node.removeChild(this.node.firstChild);\n    }\n\n    this.node.appendChild(txt);\n  })(-1);\n  eve.on(\"snap.util.attr.path\", function (value) {\n    eve.stop();\n    this.attr({\n      d: value\n    });\n  })(-1);\n  eve.on(\"snap.util.attr.class\", function (value) {\n    eve.stop();\n    this.node.className.baseVal = value;\n  })(-1);\n  eve.on(\"snap.util.attr.viewBox\", function (value) {\n    var vb;\n\n    if (is(value, \"object\") && \"x\" in value) {\n      vb = [value.x, value.y, value.width, value.height].join(\" \");\n    } else if (is(value, \"array\")) {\n      vb = value.join(\" \");\n    } else {\n      vb = value;\n    }\n\n    $(this.node, {\n      viewBox: vb\n    });\n    eve.stop();\n  })(-1);\n  eve.on(\"snap.util.attr.transform\", function (value) {\n    this.transform(value);\n    eve.stop();\n  })(-1);\n  eve.on(\"snap.util.attr.r\", function (value) {\n    if (this.type == \"rect\") {\n      eve.stop();\n      $(this.node, {\n        rx: value,\n        ry: value\n      });\n    }\n  })(-1);\n  eve.on(\"snap.util.attr.textpath\", function (value) {\n    eve.stop();\n\n    if (this.type == \"text\") {\n      var id, tp, node;\n\n      if (!value && this.textPath) {\n        tp = this.textPath;\n\n        while (tp.node.firstChild) {\n          this.node.appendChild(tp.node.firstChild);\n        }\n\n        tp.remove();\n        delete this.textPath;\n        return;\n      }\n\n      if (is(value, \"string\")) {\n        var defs = getSomeDefs(this),\n            path = wrap(defs.parentNode).path(value);\n        defs.appendChild(path.node);\n        id = path.id;\n        path.attr({\n          id: id\n        });\n      } else {\n        value = wrap(value);\n\n        if (value instanceof Element) {\n          id = value.attr(\"id\");\n\n          if (!id) {\n            id = value.id;\n            value.attr({\n              id: id\n            });\n          }\n        }\n      }\n\n      if (id) {\n        tp = this.textPath;\n        node = this.node;\n\n        if (tp) {\n          tp.attr({\n            \"xlink:href\": \"#\" + id\n          });\n        } else {\n          tp = $(\"textPath\", {\n            \"xlink:href\": \"#\" + id\n          });\n\n          while (node.firstChild) {\n            tp.appendChild(node.firstChild);\n          }\n\n          node.appendChild(tp);\n          this.textPath = wrap(tp);\n        }\n      }\n    }\n  })(-1);\n  eve.on(\"snap.util.attr.text\", function (value) {\n    if (this.type == \"text\") {\n      var i = 0,\n          node = this.node,\n          tuner = function tuner(chunk) {\n        var out = $(\"tspan\");\n\n        if (is(chunk, \"array\")) {\n          for (var i = 0; i < chunk.length; i++) {\n            out.appendChild(tuner(chunk[i]));\n          }\n        } else {\n          out.appendChild(glob.doc.createTextNode(chunk));\n        }\n\n        out.normalize && out.normalize();\n        return out;\n      };\n\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n\n      var tuned = tuner(value);\n\n      while (tuned.firstChild) {\n        node.appendChild(tuned.firstChild);\n      }\n    }\n\n    eve.stop();\n  })(-1);\n\n  function setFontSize(value) {\n    eve.stop();\n\n    if (value == +value) {\n      value += \"px\";\n    }\n\n    this.node.style.fontSize = value;\n  }\n\n  eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n  eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n  eve.on(\"snap.util.getattr.transform\", function () {\n    eve.stop();\n    return this.transform();\n  })(-1);\n  eve.on(\"snap.util.getattr.textpath\", function () {\n    eve.stop();\n    return this.textPath;\n  })(-1); // Markers\n\n  (function () {\n    function getter(end) {\n      return function () {\n        eve.stop();\n        var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\n        if (style == \"none\") {\n          return style;\n        } else {\n          return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n        }\n      };\n    }\n\n    function setter(end) {\n      return function (value) {\n        eve.stop();\n        var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\n        if (value == \"\" || !value) {\n          this.node.style[name] = \"none\";\n          return;\n        }\n\n        if (value.type == \"marker\") {\n          var id = value.node.id;\n\n          if (!id) {\n            $(value.node, {\n              id: value.id\n            });\n          }\n\n          this.node.style[name] = URL(id);\n          return;\n        }\n      };\n    }\n\n    eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n    eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n    eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n    eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n    eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n    eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n    eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n    eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n    eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n    eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n    eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n    eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n  })();\n\n  eve.on(\"snap.util.getattr.r\", function () {\n    if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n      eve.stop();\n      return $(this.node, \"rx\");\n    }\n  })(-1);\n\n  function textExtract(node) {\n    var out = [];\n    var children = node.childNodes;\n\n    for (var i = 0, ii = children.length; i < ii; i++) {\n      var chi = children[i];\n\n      if (chi.nodeType == 3) {\n        out.push(chi.nodeValue);\n      }\n\n      if (chi.tagName == \"tspan\") {\n        if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n          out.push(chi.firstChild.nodeValue);\n        } else {\n          out.push(textExtract(chi));\n        }\n      }\n    }\n\n    return out;\n  }\n\n  eve.on(\"snap.util.getattr.text\", function () {\n    if (this.type == \"text\" || this.type == \"tspan\") {\n      eve.stop();\n      var out = textExtract(this.node);\n      return out.length == 1 ? out[0] : out;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.#text\", function () {\n    return this.node.textContent;\n  })(-1);\n  eve.on(\"snap.util.getattr.fill\", function (internal) {\n    if (internal) {\n      return;\n    }\n\n    eve.stop();\n    var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n    return Snap(Snap.deurl(value)) || value;\n  })(-1);\n  eve.on(\"snap.util.getattr.stroke\", function (internal) {\n    if (internal) {\n      return;\n    }\n\n    eve.stop();\n    var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n    return Snap(Snap.deurl(value)) || value;\n  })(-1);\n  eve.on(\"snap.util.getattr.viewBox\", function () {\n    eve.stop();\n    var vb = $(this.node, \"viewBox\");\n\n    if (vb) {\n      vb = vb.split(separator);\n      return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n    } else {\n      return;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.points\", function () {\n    var p = $(this.node, \"points\");\n    eve.stop();\n\n    if (p) {\n      return p.split(separator);\n    } else {\n      return;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.path\", function () {\n    var p = $(this.node, \"d\");\n    eve.stop();\n    return p;\n  })(-1);\n  eve.on(\"snap.util.getattr.class\", function () {\n    return this.node.className.baseVal;\n  })(-1);\n\n  function getFontSize() {\n    eve.stop();\n    return this.node.style.fontSize;\n  }\n\n  eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n  eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n}); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var rgNotSpace = /\\S+/g,\n      rgBadSpace = /[\\t\\r\\n\\f]/g,\n      rgTrim = /(^\\s+|\\s+$)/g,\n      Str = String,\n      elproto = Element.prototype;\n  /*\\\n   * Element.addClass\n   [ method ]\n   **\n   * Adds given class name or list of class names to the element.\n   - value (string) class name or space separated list of class names\n   **\n   = (Element) original element.\n  \\*/\n\n  elproto.addClass = function (value) {\n    var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n\n    if (classes.length) {\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (!~pos) {\n          curClasses.push(clazz);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.removeClass\n   [ method ]\n   **\n   * Removes given class name or list of class names from the element.\n   - value (string) class name or space separated list of class names\n   **\n   = (Element) original element.\n  \\*/\n\n\n  elproto.removeClass = function (value) {\n    var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n\n    if (curClasses.length) {\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (~pos) {\n          curClasses.splice(pos, 1);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.hasClass\n   [ method ]\n   **\n   * Checks if the element has a given class name in the list of class names applied to it.\n   - value (string) class name\n   **\n   = (boolean) `true` if the element has given class\n  \\*/\n\n\n  elproto.hasClass = function (value) {\n    var elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [];\n    return !!~curClasses.indexOf(value);\n  };\n  /*\\\n   * Element.toggleClass\n   [ method ]\n   **\n   * Add or remove one or more classes from the element, depending on either\n   * the class’s presence or the value of the `flag` argument.\n   - value (string) class name or space separated list of class names\n   - flag (boolean) value to determine whether the class should be added or removed\n   **\n   = (Element) original element.\n  \\*/\n\n\n  elproto.toggleClass = function (value, flag) {\n    if (flag != null) {\n      if (flag) {\n        return this.addClass(value);\n      } else {\n        return this.removeClass(value);\n      }\n    }\n\n    var classes = (value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n    j = 0;\n\n    while (clazz = classes[j++]) {\n      pos = curClasses.indexOf(clazz);\n\n      if (~pos) {\n        curClasses.splice(pos, 1);\n      } else {\n        curClasses.push(clazz);\n      }\n    }\n\n    finalValue = curClasses.join(\" \");\n\n    if (className != finalValue) {\n      elem.className.baseVal = finalValue;\n    }\n\n    return this;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var operators = {\n    \"+\": function _(x, y) {\n      return x + y;\n    },\n    \"-\": function _(x, y) {\n      return x - y;\n    },\n    \"/\": function _(x, y) {\n      return x / y;\n    },\n    \"*\": function _(x, y) {\n      return x * y;\n    }\n  },\n      Str = String,\n      reUnit = /[a-z]+$/i,\n      reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\n  function getNumber(val) {\n    return val;\n  }\n\n  function getUnit(unit) {\n    return function (val) {\n      return +val.toFixed(3) + unit;\n    };\n  }\n\n  eve.on(\"snap.util.attr\", function (val) {\n    var plus = Str(val).match(reAddon);\n\n    if (plus) {\n      var evnt = eve.nt(),\n          name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n          a = this.attr(name),\n          atr = {};\n      eve.stop();\n      var unit = plus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[plus[1]];\n\n      if (aUnit && aUnit == unit) {\n        val = op(parseFloat(a), +plus[2]);\n      } else {\n        a = this.asPX(name);\n        val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n      }\n\n      if (isNaN(a) || isNaN(val)) {\n        return;\n      }\n\n      atr[name] = val;\n      this.attr(atr);\n    }\n  })(-10);\n  eve.on(\"snap.util.equal\", function (name, b) {\n    var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this,\n        bplus = Str(b).match(reAddon);\n\n    if (bplus) {\n      eve.stop();\n      var unit = bplus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[bplus[1]];\n\n      if (aUnit && aUnit == unit) {\n        return {\n          from: parseFloat(a),\n          to: op(parseFloat(a), +bplus[2]),\n          f: getUnit(aUnit)\n        };\n      } else {\n        a = this.asPX(name);\n        return {\n          from: a,\n          to: op(a, this.asPX(name, bplus[2] + unit)),\n          f: getNumber\n        };\n      }\n    }\n  })(-10);\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var proto = Paper.prototype,\n      is = Snap.is;\n  /*\\\n   * Paper.rect\n   [ method ]\n   *\n   * Draws a rectangle\n   **\n   - x (number) x coordinate of the top left corner\n   - y (number) y coordinate of the top left corner\n   - width (number) width\n   - height (number) height\n   - rx (number) #optional horizontal radius for rounded corners, default is 0\n   - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n   = (object) the `rect` element\n   **\n   > Usage\n   | // regular rectangle\n   | var c = paper.rect(10, 10, 50, 50);\n   | // rectangle with rounded corners\n   | var c = paper.rect(40, 40, 50, 50, 10);\n  \\*/\n\n  proto.rect = function (x, y, w, h, rx, ry) {\n    var attr;\n\n    if (ry == null) {\n      ry = rx;\n    }\n\n    if (is(x, \"object\") && x == \"[object Object]\") {\n      attr = x;\n    } else if (x != null) {\n      attr = {\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      };\n\n      if (rx != null) {\n        attr.rx = rx;\n        attr.ry = ry;\n      }\n    }\n\n    return this.el(\"rect\", attr);\n  };\n  /*\\\n   * Paper.circle\n   [ method ]\n   **\n   * Draws a circle\n   **\n   - x (number) x coordinate of the centre\n   - y (number) y coordinate of the centre\n   - r (number) radius\n   = (object) the `circle` element\n   **\n   > Usage\n   | var c = paper.circle(50, 50, 40);\n  \\*/\n\n\n  proto.circle = function (cx, cy, r) {\n    var attr;\n\n    if (is(cx, \"object\") && cx == \"[object Object]\") {\n      attr = cx;\n    } else if (cx != null) {\n      attr = {\n        cx: cx,\n        cy: cy,\n        r: r\n      };\n    }\n\n    return this.el(\"circle\", attr);\n  };\n\n  var preload = function () {\n    function onerror() {\n      this.parentNode.removeChild(this);\n    }\n\n    return function (src, f) {\n      var img = glob.doc.createElement(\"img\"),\n          body = glob.doc.body;\n      img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\n      img.onload = function () {\n        f.call(img);\n        img.onload = img.onerror = null;\n        body.removeChild(img);\n      };\n\n      img.onerror = onerror;\n      body.appendChild(img);\n      img.src = src;\n    };\n  }();\n  /*\\\n   * Paper.image\n   [ method ]\n   **\n   * Places an image on the surface\n   **\n   - src (string) URI of the source image\n   - x (number) x offset position\n   - y (number) y offset position\n   - width (number) width of the image\n   - height (number) height of the image\n   = (object) the `image` element\n   * or\n   = (object) Snap element object with type `image`\n   **\n   > Usage\n   | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n  \\*/\n\n\n  proto.image = function (src, x, y, width, height) {\n    var el = this.el(\"image\");\n\n    if (is(src, \"object\") && \"src\" in src) {\n      el.attr(src);\n    } else if (src != null) {\n      var set = {\n        \"xlink:href\": src,\n        preserveAspectRatio: \"none\"\n      };\n\n      if (x != null && y != null) {\n        set.x = x;\n        set.y = y;\n      }\n\n      if (width != null && height != null) {\n        set.width = width;\n        set.height = height;\n      } else {\n        preload(src, function () {\n          Snap._.$(el.node, {\n            width: this.offsetWidth,\n            height: this.offsetHeight\n          });\n        });\n      }\n\n      Snap._.$(el.node, set);\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.ellipse\n   [ method ]\n   **\n   * Draws an ellipse\n   **\n   - x (number) x coordinate of the centre\n   - y (number) y coordinate of the centre\n   - rx (number) horizontal radius\n   - ry (number) vertical radius\n   = (object) the `ellipse` element\n   **\n   > Usage\n   | var c = paper.ellipse(50, 50, 40, 20);\n  \\*/\n\n\n  proto.ellipse = function (cx, cy, rx, ry) {\n    var attr;\n\n    if (is(cx, \"object\") && cx == \"[object Object]\") {\n      attr = cx;\n    } else if (cx != null) {\n      attr = {\n        cx: cx,\n        cy: cy,\n        rx: rx,\n        ry: ry\n      };\n    }\n\n    return this.el(\"ellipse\", attr);\n  }; // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\n  /*\\\n   * Paper.path\n   [ method ]\n   **\n   * Creates a `<path>` element using the given string as the path's definition\n   - pathString (string) #optional path string in SVG format\n   * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n   | \"M10,20L30,40\"\n   * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n   *\n   # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n   # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n   # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n   # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n   # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n   # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n   # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n   # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n   # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n   # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n   # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n   # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n   # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n   * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n   * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n   > Usage\n   | var c = paper.path(\"M10 10L90 90\");\n   | // draw a diagonal line:\n   | // move to 10,10, line to 90,90\n  \\*/\n\n\n  proto.path = function (d) {\n    var attr;\n\n    if (is(d, \"object\") && !is(d, \"array\")) {\n      attr = d;\n    } else if (d) {\n      attr = {\n        d: d\n      };\n    }\n\n    return this.el(\"path\", attr);\n  };\n  /*\\\n   * Paper.g\n   [ method ]\n   **\n   * Creates a group element\n   **\n   - varargs (…) #optional elements to nest within the group\n   = (object) the `g` element\n   **\n   > Usage\n   | var c1 = paper.circle(),\n   |     c2 = paper.rect(),\n   |     g = paper.g(c2, c1); // note that the order of elements is different\n   * or\n   | var c1 = paper.circle(),\n   |     c2 = paper.rect(),\n   |     g = paper.g();\n   | g.add(c2, c1);\n  \\*/\n\n  /*\\\n   * Paper.group\n   [ method ]\n   **\n   * See @Paper.g\n  \\*/\n\n\n  proto.group = proto.g = function (first) {\n    var attr,\n        el = this.el(\"g\");\n\n    if (arguments.length == 1 && first && !first.type) {\n      el.attr(first);\n    } else if (arguments.length) {\n      el.add(Array.prototype.slice.call(arguments, 0));\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.svg\n   [ method ]\n   **\n   * Creates a nested SVG element.\n   - x (number) @optional X of the element\n   - y (number) @optional Y of the element\n   - width (number) @optional width of the element\n   - height (number) @optional height of the element\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   **\n   = (object) the `svg` element\n   **\n  \\*/\n\n\n  proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n    var attrs = {};\n\n    if (is(x, \"object\") && y == null) {\n      attrs = x;\n    } else {\n      if (x != null) {\n        attrs.x = x;\n      }\n\n      if (y != null) {\n        attrs.y = y;\n      }\n\n      if (width != null) {\n        attrs.width = width;\n      }\n\n      if (height != null) {\n        attrs.height = height;\n      }\n\n      if (vbx != null && vby != null && vbw != null && vbh != null) {\n        attrs.viewBox = [vbx, vby, vbw, vbh];\n      }\n    }\n\n    return this.el(\"svg\", attrs);\n  };\n  /*\\\n   * Paper.mask\n   [ method ]\n   **\n   * Equivalent in behaviour to @Paper.g, except it’s a mask.\n   **\n   = (object) the `mask` element\n   **\n  \\*/\n\n\n  proto.mask = function (first) {\n    var attr,\n        el = this.el(\"mask\");\n\n    if (arguments.length == 1 && first && !first.type) {\n      el.attr(first);\n    } else if (arguments.length) {\n      el.add(Array.prototype.slice.call(arguments, 0));\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.ptrn\n   [ method ]\n   **\n   * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n   - x (number) @optional X of the element\n   - y (number) @optional Y of the element\n   - width (number) @optional width of the element\n   - height (number) @optional height of the element\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   **\n   = (object) the `pattern` element\n   **\n  \\*/\n\n\n  proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n    if (is(x, \"object\")) {\n      var attr = x;\n    } else {\n      attr = {\n        patternUnits: \"userSpaceOnUse\"\n      };\n\n      if (x) {\n        attr.x = x;\n      }\n\n      if (y) {\n        attr.y = y;\n      }\n\n      if (width != null) {\n        attr.width = width;\n      }\n\n      if (height != null) {\n        attr.height = height;\n      }\n\n      if (vx != null && vy != null && vw != null && vh != null) {\n        attr.viewBox = [vx, vy, vw, vh];\n      } else {\n        attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n      }\n    }\n\n    return this.el(\"pattern\", attr);\n  };\n  /*\\\n   * Paper.use\n   [ method ]\n   **\n   * Creates a <use> element.\n   - id (string) @optional id of element to link\n   * or\n   - id (Element) @optional element to link\n   **\n   = (object) the `use` element\n   **\n  \\*/\n\n\n  proto.use = function (id) {\n    if (id != null) {\n      if (id instanceof Element) {\n        if (!id.attr(\"id\")) {\n          id.attr({\n            id: Snap._.id(id)\n          });\n        }\n\n        id = id.attr(\"id\");\n      }\n\n      if (String(id).charAt() == \"#\") {\n        id = id.substring(1);\n      }\n\n      return this.el(\"use\", {\n        \"xlink:href\": \"#\" + id\n      });\n    } else {\n      return Element.prototype.use.call(this);\n    }\n  };\n  /*\\\n   * Paper.symbol\n   [ method ]\n   **\n   * Creates a <symbol> element.\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   = (object) the `symbol` element\n   **\n  \\*/\n\n\n  proto.symbol = function (vx, vy, vw, vh) {\n    var attr = {};\n\n    if (vx != null && vy != null && vw != null && vh != null) {\n      attr.viewBox = [vx, vy, vw, vh];\n    }\n\n    return this.el(\"symbol\", attr);\n  };\n  /*\\\n   * Paper.text\n   [ method ]\n   **\n   * Draws a text string\n   **\n   - x (number) x coordinate position\n   - y (number) y coordinate position\n   - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n   = (object) the `text` element\n   **\n   > Usage\n   | var t1 = paper.text(50, 50, \"Snap\");\n   | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n   | // Text path usage\n   | t1.attr({textpath: \"M10,10L100,100\"});\n   | // or\n   | var pth = paper.path(\"M10,10L100,100\");\n   | t1.attr({textpath: pth});\n  \\*/\n\n\n  proto.text = function (x, y, text) {\n    var attr = {};\n\n    if (is(x, \"object\")) {\n      attr = x;\n    } else if (x != null) {\n      attr = {\n        x: x,\n        y: y,\n        text: text || \"\"\n      };\n    }\n\n    return this.el(\"text\", attr);\n  };\n  /*\\\n   * Paper.line\n   [ method ]\n   **\n   * Draws a line\n   **\n   - x1 (number) x coordinate position of the start\n   - y1 (number) y coordinate position of the start\n   - x2 (number) x coordinate position of the end\n   - y2 (number) y coordinate position of the end\n   = (object) the `line` element\n   **\n   > Usage\n   | var t1 = paper.line(50, 50, 100, 100);\n  \\*/\n\n\n  proto.line = function (x1, y1, x2, y2) {\n    var attr = {};\n\n    if (is(x1, \"object\")) {\n      attr = x1;\n    } else if (x1 != null) {\n      attr = {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    }\n\n    return this.el(\"line\", attr);\n  };\n  /*\\\n   * Paper.polyline\n   [ method ]\n   **\n   * Draws a polyline\n   **\n   - points (array) array of points\n   * or\n   - varargs (…) points\n   = (object) the `polyline` element\n   **\n   > Usage\n   | var p1 = paper.polyline([10, 10, 100, 100]);\n   | var p2 = paper.polyline(10, 10, 100, 100);\n  \\*/\n\n\n  proto.polyline = function (points) {\n    if (arguments.length > 1) {\n      points = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var attr = {};\n\n    if (is(points, \"object\") && !is(points, \"array\")) {\n      attr = points;\n    } else if (points != null) {\n      attr = {\n        points: points\n      };\n    }\n\n    return this.el(\"polyline\", attr);\n  };\n  /*\\\n   * Paper.polygon\n   [ method ]\n   **\n   * Draws a polygon. See @Paper.polyline\n  \\*/\n\n\n  proto.polygon = function (points) {\n    if (arguments.length > 1) {\n      points = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var attr = {};\n\n    if (is(points, \"object\") && !is(points, \"array\")) {\n      attr = points;\n    } else if (points != null) {\n      attr = {\n        points: points\n      };\n    }\n\n    return this.el(\"polygon\", attr);\n  }; // gradients\n\n\n  (function () {\n    var $ = Snap._.$; // gradients' helpers\n\n    /*\\\n     * Element.stops\n     [ method ]\n     **\n     * Only for gradients!\n     * Returns array of gradient stops elements.\n     = (array) the stops array.\n    \\*/\n\n    function Gstops() {\n      return this.selectAll(\"stop\");\n    }\n    /*\\\n     * Element.addStop\n     [ method ]\n     **\n     * Only for gradients!\n     * Adds another stop to the gradient.\n     - color (string) stops color\n     - offset (number) stops offset 0..100\n     = (object) gradient element\n    \\*/\n\n\n    function GaddStop(color, offset) {\n      var stop = $(\"stop\"),\n          attr = {\n        offset: +offset + \"%\"\n      };\n      color = Snap.color(color);\n      attr[\"stop-color\"] = color.hex;\n\n      if (color.opacity < 1) {\n        attr[\"stop-opacity\"] = color.opacity;\n      }\n\n      $(stop, attr);\n      var stops = this.stops(),\n          inserted;\n\n      for (var i = 0; i < stops.length; i++) {\n        var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n\n        if (stopOffset > offset) {\n          this.node.insertBefore(stop, stops[i].node);\n          inserted = true;\n          break;\n        }\n      }\n\n      if (!inserted) {\n        this.node.appendChild(stop);\n      }\n\n      return this;\n    }\n\n    function GgetBBox() {\n      if (this.type == \"linearGradient\") {\n        var x1 = $(this.node, \"x1\") || 0,\n            x2 = $(this.node, \"x2\") || 1,\n            y1 = $(this.node, \"y1\") || 0,\n            y2 = $(this.node, \"y2\") || 0;\n        return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n      } else {\n        var cx = this.node.cx || .5,\n            cy = this.node.cy || .5,\n            r = this.node.r || 0;\n        return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n      }\n    }\n    /*\\\n     * Element.setStops\n     [ method ]\n     **\n     * Only for gradients!\n     * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n     - str (string) gradient descriptor part after `()`.\n     = (object) gradient element\n     | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n     | g.setStops(\"#fff-#000-#f00-#fc0\");\n    \\*/\n\n\n    function GsetStops(str) {\n      var grad = str,\n          stops = this.stops();\n\n      if (typeof str == \"string\") {\n        grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n      }\n\n      if (!Snap.is(grad, \"array\")) {\n        return;\n      }\n\n      for (var i = 0; i < stops.length; i++) {\n        if (grad[i]) {\n          var color = Snap.color(grad[i].color),\n              attr = {\n            \"offset\": grad[i].offset + \"%\"\n          };\n          attr[\"stop-color\"] = color.hex;\n\n          if (color.opacity < 1) {\n            attr[\"stop-opacity\"] = color.opacity;\n          }\n\n          stops[i].attr(attr);\n        } else {\n          stops[i].remove();\n        }\n      }\n\n      for (i = stops.length; i < grad.length; i++) {\n        this.addStop(grad[i].color, grad[i].offset);\n      }\n\n      return this;\n    }\n\n    function gradient(defs, str) {\n      var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n          el;\n\n      if (!grad) {\n        return null;\n      }\n\n      grad.params.unshift(defs);\n\n      if (grad.type.toLowerCase() == \"l\") {\n        el = gradientLinear.apply(0, grad.params);\n      } else {\n        el = gradientRadial.apply(0, grad.params);\n      }\n\n      if (grad.type != grad.type.toLowerCase()) {\n        $(el.node, {\n          gradientUnits: \"userSpaceOnUse\"\n        });\n      }\n\n      var stops = grad.stops,\n          len = stops.length;\n\n      for (var i = 0; i < len; i++) {\n        var stop = stops[i];\n        el.addStop(stop.color, stop.offset);\n      }\n\n      return el;\n    }\n\n    function gradientLinear(defs, x1, y1, x2, y2) {\n      var el = Snap._.make(\"linearGradient\", defs);\n\n      el.stops = Gstops;\n      el.addStop = GaddStop;\n      el.getBBox = GgetBBox;\n      el.setStops = GsetStops;\n\n      if (x1 != null) {\n        $(el.node, {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        });\n      }\n\n      return el;\n    }\n\n    function gradientRadial(defs, cx, cy, r, fx, fy) {\n      var el = Snap._.make(\"radialGradient\", defs);\n\n      el.stops = Gstops;\n      el.addStop = GaddStop;\n      el.getBBox = GgetBBox;\n\n      if (cx != null) {\n        $(el.node, {\n          cx: cx,\n          cy: cy,\n          r: r\n        });\n      }\n\n      if (fx != null && fy != null) {\n        $(el.node, {\n          fx: fx,\n          fy: fy\n        });\n      }\n\n      return el;\n    }\n    /*\\\n     * Paper.gradient\n     [ method ]\n     **\n     * Creates a gradient element\n     **\n     - gradient (string) gradient descriptor\n     > Gradient Descriptor\n     * The gradient descriptor is an expression formatted as\n     * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n     * either linear or radial.  The uppercase `L` or `R` letters\n     * indicate absolute coordinates offset from the SVG surface.\n     * Lowercase `l` or `r` letters indicate coordinates\n     * calculated relative to the element to which the gradient is\n     * applied.  Coordinates specify a linear gradient vector as\n     * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n     * `r` and optional `fx`, `fy` specifying a focal point away\n     * from the center of the circle. Specify `<colors>` as a list\n     * of dash-separated CSS color values.  Each color may be\n     * followed by a custom offset value, separated with a colon\n     * character.\n     > Examples\n     * Linear gradient, relative from top-left corner to bottom-right\n     * corner, from black through red to white:\n     | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n     * Linear gradient, absolute from (0, 0) to (100, 100), from black\n     * through red at 25% to white:\n     | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n     * Radial gradient, relative from the center of the element with radius\n     * half the width, from black to white:\n     | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n     * To apply the gradient:\n     | paper.circle(50, 50, 40).attr({\n     |     fill: g\n     | });\n     = (object) the `gradient` element\n    \\*/\n\n\n    proto.gradient = function (str) {\n      return gradient(this.defs, str);\n    };\n\n    proto.gradientLinear = function (x1, y1, x2, y2) {\n      return gradientLinear(this.defs, x1, y1, x2, y2);\n    };\n\n    proto.gradientRadial = function (cx, cy, r, fx, fy) {\n      return gradientRadial(this.defs, cx, cy, r, fx, fy);\n    };\n    /*\\\n     * Paper.toString\n     [ method ]\n     **\n     * Returns SVG code for the @Paper\n     = (string) SVG code for the @Paper\n    \\*/\n\n\n    proto.toString = function () {\n      var doc = this.node.ownerDocument,\n          f = doc.createDocumentFragment(),\n          d = doc.createElement(\"div\"),\n          svg = this.node.cloneNode(true),\n          res;\n      f.appendChild(d);\n      d.appendChild(svg);\n\n      Snap._.$(svg, {\n        xmlns: \"http://www.w3.org/2000/svg\"\n      });\n\n      res = d.innerHTML;\n      f.removeChild(f.firstChild);\n      return res;\n    };\n    /*\\\n     * Paper.toDataURL\n     [ method ]\n     **\n     * Returns SVG code for the @Paper as Data URI string.\n     = (string) Data URI string\n    \\*/\n\n\n    proto.toDataURL = function () {\n      if (window && window.btoa) {\n        return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n      }\n    };\n    /*\\\n     * Paper.clear\n     [ method ]\n     **\n     * Removes all child nodes of the paper, except <defs>.\n    \\*/\n\n\n    proto.clear = function () {\n      var node = this.node.firstChild,\n          next;\n\n      while (node) {\n        next = node.nextSibling;\n\n        if (node.tagName != \"defs\") {\n          node.parentNode.removeChild(node);\n        } else {\n          proto.clear.call({\n            node: node\n          });\n        }\n\n        node = next;\n      }\n    };\n  })();\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      clone = Snap._.clone,\n      has = \"hasOwnProperty\",\n      p2s = /,?([a-z]),?/gi,\n      toFloat = parseFloat,\n      math = Math,\n      PI = math.PI,\n      mmin = math.min,\n      mmax = math.max,\n      pow = math.pow,\n      abs = math.abs;\n\n  function paths(ps) {\n    var p = paths.ps = paths.ps || {};\n\n    if (p[ps]) {\n      p[ps].sleep = 100;\n    } else {\n      p[ps] = {\n        sleep: 100\n      };\n    }\n\n    setTimeout(function () {\n      for (var key in p) {\n        if (p[has](key) && key != ps) {\n          p[key].sleep--;\n          !p[key].sleep && delete p[key];\n        }\n      }\n    });\n    return p[ps];\n  }\n\n  function box(x, y, width, height) {\n    if (x == null) {\n      x = y = width = height = 0;\n    }\n\n    if (y == null) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      x = x.x;\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      w: width,\n      height: height,\n      h: height,\n      x2: x + width,\n      y2: y + height,\n      cx: x + width / 2,\n      cy: y + height / 2,\n      r1: math.min(width, height) / 2,\n      r2: math.max(width, height) / 2,\n      r0: math.sqrt(width * width + height * height) / 2,\n      path: rectPath(x, y, width, height),\n      vb: [x, y, width, height].join(\" \")\n    };\n  }\n\n  function toString() {\n    return this.join(\",\").replace(p2s, \"$1\");\n  }\n\n  function pathClone(pathArray) {\n    var res = clone(pathArray);\n    res.toString = toString;\n    return res;\n  }\n\n  function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n    if (length == null) {\n      return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n    } else {\n      return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n    }\n  }\n\n  function getLengthFactory(istotal, subpath) {\n    function O(val) {\n      return +(+val).toFixed(3);\n    }\n\n    return Snap._.cacher(function (path, length, onlystart) {\n      if (path instanceof Element) {\n        path = path.attr(\"d\");\n      }\n\n      path = path2curve(path);\n      var x,\n          y,\n          p,\n          l,\n          sp = \"\",\n          subpaths = {},\n          point,\n          len = 0;\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n\n        if (p[0] == \"M\") {\n          x = +p[1];\n          y = +p[2];\n        } else {\n          l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\n          if (len + l > length) {\n            if (subpath && !subpaths.start) {\n              point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n              sp += [\"C\" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)];\n\n              if (onlystart) {\n                return sp;\n              }\n\n              subpaths.start = sp;\n              sp = [\"M\" + O(point.x), O(point.y) + \"C\" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join();\n              len += l;\n              x = +p[5];\n              y = +p[6];\n              continue;\n            }\n\n            if (!istotal && !subpath) {\n              point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n              return point;\n            }\n          }\n\n          len += l;\n          x = +p[5];\n          y = +p[6];\n        }\n\n        sp += p.shift() + p;\n      }\n\n      subpaths.end = sp;\n      point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n      return point;\n    }, null, Snap._.clone);\n  }\n\n  var getTotalLength = getLengthFactory(1),\n      getPointAtLength = getLengthFactory(),\n      getSubpathsAtLength = getLengthFactory(0, 1);\n\n  function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t,\n        t13 = pow(t1, 3),\n        t12 = pow(t1, 2),\n        t2 = t * t,\n        t3 = t2 * t,\n        x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n        y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n        mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n        my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n        nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n        ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n        ax = t1 * p1x + t * c1x,\n        ay = t1 * p1y + t * c1y,\n        cx = t1 * c2x + t * p2x,\n        cy = t1 * c2y + t * p2y,\n        alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI; // (mx > nx || my < ny) && (alpha += 180);\n\n    return {\n      x: x,\n      y: y,\n      m: {\n        x: mx,\n        y: my\n      },\n      n: {\n        x: nx,\n        y: ny\n      },\n      start: {\n        x: ax,\n        y: ay\n      },\n      end: {\n        x: cx,\n        y: cy\n      },\n      alpha: alpha\n    };\n  }\n\n  function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n    if (!Snap.is(p1x, \"array\")) {\n      p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n    }\n\n    var bbox = curveDim.apply(null, p1x);\n    return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n  }\n\n  function isPointInsideBBox(bbox, x, y) {\n    return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n  }\n\n  function isBBoxIntersect(bbox1, bbox2) {\n    bbox1 = box(bbox1);\n    bbox2 = box(bbox2);\n    return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n  }\n\n  function base3(t, p1, p2, p3, p4) {\n    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n        t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n    return t * t2 - 3 * p1 + 3 * p2;\n  }\n\n  function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n    if (z == null) {\n      z = 1;\n    }\n\n    z = z > 1 ? 1 : z < 0 ? 0 : z;\n    var z2 = z / 2,\n        n = 12,\n        Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n        Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n        sum = 0;\n\n    for (var i = 0; i < n; i++) {\n      var ct = z2 * Tvalues[i] + z2,\n          xbase = base3(ct, x1, x2, x3, x4),\n          ybase = base3(ct, y1, y2, y3, y4),\n          comb = xbase * xbase + ybase * ybase;\n      sum += Cvalues[i] * math.sqrt(comb);\n    }\n\n    return z2 * sum;\n  }\n\n  function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n    if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n      return;\n    }\n\n    var t = 1,\n        step = t / 2,\n        t2 = t - step,\n        l,\n        e = .01;\n    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\n    while (abs(l - ll) > e) {\n      step /= 2;\n      t2 += (l < ll ? 1 : -1) * step;\n      l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n    }\n\n    return t2;\n  }\n\n  function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n    if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n      return;\n    }\n\n    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n        denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n    if (!denominator) {\n      return;\n    }\n\n    var px = nx / denominator,\n        py = ny / denominator,\n        px2 = +px.toFixed(2),\n        py2 = +py.toFixed(2);\n\n    if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n      return;\n    }\n\n    return {\n      x: px,\n      y: py\n    };\n  }\n\n  function inter(bez1, bez2) {\n    return interHelper(bez1, bez2);\n  }\n\n  function interCount(bez1, bez2) {\n    return interHelper(bez1, bez2, 1);\n  }\n\n  function interHelper(bez1, bez2, justCount) {\n    var bbox1 = bezierBBox(bez1),\n        bbox2 = bezierBBox(bez2);\n\n    if (!isBBoxIntersect(bbox1, bbox2)) {\n      return justCount ? 0 : [];\n    }\n\n    var l1 = bezlen.apply(0, bez1),\n        l2 = bezlen.apply(0, bez2),\n        n1 = ~~(l1 / 8),\n        n2 = ~~(l2 / 8),\n        dots1 = [],\n        dots2 = [],\n        xy = {},\n        res = justCount ? 0 : [];\n\n    for (var i = 0; i < n1 + 1; i++) {\n      var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n      dots1.push({\n        x: p.x,\n        y: p.y,\n        t: i / n1\n      });\n    }\n\n    for (i = 0; i < n2 + 1; i++) {\n      p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n      dots2.push({\n        x: p.x,\n        y: p.y,\n        t: i / n2\n      });\n    }\n\n    for (i = 0; i < n1; i++) {\n      for (var j = 0; j < n2; j++) {\n        var di = dots1[i],\n            di1 = dots1[i + 1],\n            dj = dots2[j],\n            dj1 = dots2[j + 1],\n            ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n            cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n            is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n        if (is) {\n          if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n            continue;\n          }\n\n          xy[is.x.toFixed(4)] = is.y.toFixed(4);\n          var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n              t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n          if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n            if (justCount) {\n              res++;\n            } else {\n              res.push({\n                x: is.x,\n                y: is.y,\n                t1: t1,\n                t2: t2\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  function pathIntersection(path1, path2) {\n    return interPathHelper(path1, path2);\n  }\n\n  function pathIntersectionNumber(path1, path2) {\n    return interPathHelper(path1, path2, 1);\n  }\n\n  function interPathHelper(path1, path2, justCount) {\n    path1 = path2curve(path1);\n    path2 = path2curve(path2);\n    var x1,\n        y1,\n        x2,\n        y2,\n        x1m,\n        y1m,\n        x2m,\n        y2m,\n        bez1,\n        bez2,\n        res = justCount ? 0 : [];\n\n    for (var i = 0, ii = path1.length; i < ii; i++) {\n      var pi = path1[i];\n\n      if (pi[0] == \"M\") {\n        x1 = x1m = pi[1];\n        y1 = y1m = pi[2];\n      } else {\n        if (pi[0] == \"C\") {\n          bez1 = [x1, y1].concat(pi.slice(1));\n          x1 = bez1[6];\n          y1 = bez1[7];\n        } else {\n          bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n          x1 = x1m;\n          y1 = y1m;\n        }\n\n        for (var j = 0, jj = path2.length; j < jj; j++) {\n          var pj = path2[j];\n\n          if (pj[0] == \"M\") {\n            x2 = x2m = pj[1];\n            y2 = y2m = pj[2];\n          } else {\n            if (pj[0] == \"C\") {\n              bez2 = [x2, y2].concat(pj.slice(1));\n              x2 = bez2[6];\n              y2 = bez2[7];\n            } else {\n              bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n              x2 = x2m;\n              y2 = y2m;\n            }\n\n            var intr = interHelper(bez1, bez2, justCount);\n\n            if (justCount) {\n              res += intr;\n            } else {\n              for (var k = 0, kk = intr.length; k < kk; k++) {\n                intr[k].segment1 = i;\n                intr[k].segment2 = j;\n                intr[k].bez1 = bez1;\n                intr[k].bez2 = bez2;\n              }\n\n              res = res.concat(intr);\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  function isPointInsidePath(path, x, y) {\n    var bbox = pathBBox(path);\n    return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n  }\n\n  function pathBBox(path) {\n    var pth = paths(path);\n\n    if (pth.bbox) {\n      return clone(pth.bbox);\n    }\n\n    if (!path) {\n      return box();\n    }\n\n    path = path2curve(path);\n    var x = 0,\n        y = 0,\n        X = [],\n        Y = [],\n        p;\n\n    for (var i = 0, ii = path.length; i < ii; i++) {\n      p = path[i];\n\n      if (p[0] == \"M\") {\n        x = p[1];\n        y = p[2];\n        X.push(x);\n        Y.push(y);\n      } else {\n        var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n        X = X.concat(dim.min.x, dim.max.x);\n        Y = Y.concat(dim.min.y, dim.max.y);\n        x = p[5];\n        y = p[6];\n      }\n    }\n\n    var xmin = mmin.apply(0, X),\n        ymin = mmin.apply(0, Y),\n        xmax = mmax.apply(0, X),\n        ymax = mmax.apply(0, Y),\n        bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n    pth.bbox = clone(bb);\n    return bb;\n  }\n\n  function rectPath(x, y, w, h, r) {\n    if (r) {\n      return [[\"M\", +x + +r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n    }\n\n    var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n    res.toString = toString;\n    return res;\n  }\n\n  function ellipsePath(x, y, rx, ry, a) {\n    if (a == null && ry == null) {\n      ry = rx;\n    }\n\n    x = +x;\n    y = +y;\n    rx = +rx;\n    ry = +ry;\n\n    if (a != null) {\n      var rad = Math.PI / 180,\n          x1 = x + rx * Math.cos(-ry * rad),\n          x2 = x + rx * Math.cos(-a * rad),\n          y1 = y + rx * Math.sin(-ry * rad),\n          y2 = y + rx * Math.sin(-a * rad),\n          res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n    } else {\n      res = [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n    }\n\n    res.toString = toString;\n    return res;\n  }\n\n  var unit2px = Snap._unit2px,\n      getPath = {\n    path: function path(el) {\n      return el.attr(\"path\");\n    },\n    circle: function circle(el) {\n      var attr = unit2px(el);\n      return ellipsePath(attr.cx, attr.cy, attr.r);\n    },\n    ellipse: function ellipse(el) {\n      var attr = unit2px(el);\n      return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n    },\n    rect: function rect(el) {\n      var attr = unit2px(el);\n      return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n    },\n    image: function image(el) {\n      var attr = unit2px(el);\n      return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n    },\n    line: function line(el) {\n      return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n    },\n    polyline: function polyline(el) {\n      return \"M\" + el.attr(\"points\");\n    },\n    polygon: function polygon(el) {\n      return \"M\" + el.attr(\"points\") + \"z\";\n    },\n    deflt: function deflt(el) {\n      var bbox = el.node.getBBox();\n      return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n    }\n  };\n\n  function pathToRelative(pathArray) {\n    var pth = paths(pathArray),\n        lowerCase = String.prototype.toLowerCase;\n\n    if (pth.rel) {\n      return pathClone(pth.rel);\n    }\n\n    if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n      pathArray = Snap.parsePathString(pathArray);\n    }\n\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0;\n\n    if (pathArray[0][0] == \"M\") {\n      x = pathArray[0][1];\n      y = pathArray[0][2];\n      mx = x;\n      my = y;\n      start++;\n      res.push([\"M\", x, y]);\n    }\n\n    for (var i = start, ii = pathArray.length; i < ii; i++) {\n      var r = res[i] = [],\n          pa = pathArray[i];\n\n      if (pa[0] != lowerCase.call(pa[0])) {\n        r[0] = lowerCase.call(pa[0]);\n\n        switch (r[0]) {\n          case \"a\":\n            r[1] = pa[1];\n            r[2] = pa[2];\n            r[3] = pa[3];\n            r[4] = pa[4];\n            r[5] = pa[5];\n            r[6] = +(pa[6] - x).toFixed(3);\n            r[7] = +(pa[7] - y).toFixed(3);\n            break;\n\n          case \"v\":\n            r[1] = +(pa[1] - y).toFixed(3);\n            break;\n\n          case \"m\":\n            mx = pa[1];\n            my = pa[2];\n\n          default:\n            for (var j = 1, jj = pa.length; j < jj; j++) {\n              r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n            }\n\n        }\n      } else {\n        r = res[i] = [];\n\n        if (pa[0] == \"m\") {\n          mx = pa[1] + x;\n          my = pa[2] + y;\n        }\n\n        for (var k = 0, kk = pa.length; k < kk; k++) {\n          res[i][k] = pa[k];\n        }\n      }\n\n      var len = res[i].length;\n\n      switch (res[i][0]) {\n        case \"z\":\n          x = mx;\n          y = my;\n          break;\n\n        case \"h\":\n          x += +res[i][len - 1];\n          break;\n\n        case \"v\":\n          y += +res[i][len - 1];\n          break;\n\n        default:\n          x += +res[i][len - 2];\n          y += +res[i][len - 1];\n      }\n    }\n\n    res.toString = toString;\n    pth.rel = pathClone(res);\n    return res;\n  }\n\n  function pathToAbsolute(pathArray) {\n    var pth = paths(pathArray);\n\n    if (pth.abs) {\n      return pathClone(pth.abs);\n    }\n\n    if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) {\n      // rough assumption\n      pathArray = Snap.parsePathString(pathArray);\n    }\n\n    if (!pathArray || !pathArray.length) {\n      return [[\"M\", 0, 0]];\n    }\n\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0,\n        pa0;\n\n    if (pathArray[0][0] == \"M\") {\n      x = +pathArray[0][1];\n      y = +pathArray[0][2];\n      mx = x;\n      my = y;\n      start++;\n      res[0] = [\"M\", x, y];\n    }\n\n    var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n      res.push(r = []);\n      pa = pathArray[i];\n      pa0 = pa[0];\n\n      if (pa0 != pa0.toUpperCase()) {\n        r[0] = pa0.toUpperCase();\n\n        switch (r[0]) {\n          case \"A\":\n            r[1] = pa[1];\n            r[2] = pa[2];\n            r[3] = pa[3];\n            r[4] = pa[4];\n            r[5] = pa[5];\n            r[6] = +pa[6] + x;\n            r[7] = +pa[7] + y;\n            break;\n\n          case \"V\":\n            r[1] = +pa[1] + y;\n            break;\n\n          case \"H\":\n            r[1] = +pa[1] + x;\n            break;\n\n          case \"R\":\n            var dots = [x, y].concat(pa.slice(1));\n\n            for (var j = 2, jj = dots.length; j < jj; j++) {\n              dots[j] = +dots[j] + x;\n              dots[++j] = +dots[j] + y;\n            }\n\n            res.pop();\n            res = res.concat(catmullRom2bezier(dots, crz));\n            break;\n\n          case \"O\":\n            res.pop();\n            dots = ellipsePath(x, y, pa[1], pa[2]);\n            dots.push(dots[0]);\n            res = res.concat(dots);\n            break;\n\n          case \"U\":\n            res.pop();\n            res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n            r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            break;\n\n          case \"M\":\n            mx = +pa[1] + x;\n            my = +pa[2] + y;\n\n          default:\n            for (j = 1, jj = pa.length; j < jj; j++) {\n              r[j] = +pa[j] + (j % 2 ? x : y);\n            }\n\n        }\n      } else if (pa0 == \"R\") {\n        dots = [x, y].concat(pa.slice(1));\n        res.pop();\n        res = res.concat(catmullRom2bezier(dots, crz));\n        r = [\"R\"].concat(pa.slice(-2));\n      } else if (pa0 == \"O\") {\n        res.pop();\n        dots = ellipsePath(x, y, pa[1], pa[2]);\n        dots.push(dots[0]);\n        res = res.concat(dots);\n      } else if (pa0 == \"U\") {\n        res.pop();\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n      } else {\n        for (var k = 0, kk = pa.length; k < kk; k++) {\n          r[k] = pa[k];\n        }\n      }\n\n      pa0 = pa0.toUpperCase();\n\n      if (pa0 != \"O\") {\n        switch (r[0]) {\n          case \"Z\":\n            x = +mx;\n            y = +my;\n            break;\n\n          case \"H\":\n            x = r[1];\n            break;\n\n          case \"V\":\n            y = r[1];\n            break;\n\n          case \"M\":\n            mx = r[r.length - 2];\n            my = r[r.length - 1];\n\n          default:\n            x = r[r.length - 2];\n            y = r[r.length - 1];\n        }\n      }\n    }\n\n    res.toString = toString;\n    pth.abs = pathClone(res);\n    return res;\n  }\n\n  function l2c(x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n  }\n\n  function q2c(x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3,\n        _23 = 2 / 3;\n\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n  }\n\n  function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    var _120 = PI * 120 / 180,\n        rad = PI / 180 * (+angle || 0),\n        res = [],\n        xy,\n        rotate = Snap._.cacher(function (x, y, rad) {\n      var X = x * math.cos(rad) - y * math.sin(rad),\n          Y = x * math.sin(rad) + y * math.cos(rad);\n      return {\n        x: X,\n        y: Y\n      };\n    });\n\n    if (!rx || !ry) {\n      return [x1, y1, x2, y2, x2, y2];\n    }\n\n    if (!recursive) {\n      xy = rotate(x1, y1, -rad);\n      x1 = xy.x;\n      y1 = xy.y;\n      xy = rotate(x2, y2, -rad);\n      x2 = xy.x;\n      y2 = xy.y;\n      var cos = math.cos(PI / 180 * angle),\n          sin = math.sin(PI / 180 * angle),\n          x = (x1 - x2) / 2,\n          y = (y1 - y2) / 2;\n      var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n      if (h > 1) {\n        h = math.sqrt(h);\n        rx = h * rx;\n        ry = h * ry;\n      }\n\n      var rx2 = rx * rx,\n          ry2 = ry * ry,\n          k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n          cx = k * rx * y / ry + (x1 + x2) / 2,\n          cy = k * -ry * x / rx + (y1 + y2) / 2,\n          f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n          f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n      f1 = x1 < cx ? PI - f1 : f1;\n      f2 = x2 < cx ? PI - f2 : f2;\n      f1 < 0 && (f1 = PI * 2 + f1);\n      f2 < 0 && (f2 = PI * 2 + f2);\n\n      if (sweep_flag && f1 > f2) {\n        f1 = f1 - PI * 2;\n      }\n\n      if (!sweep_flag && f2 > f1) {\n        f2 = f2 - PI * 2;\n      }\n    } else {\n      f1 = recursive[0];\n      f2 = recursive[1];\n      cx = recursive[2];\n      cy = recursive[3];\n    }\n\n    var df = f2 - f1;\n\n    if (abs(df) > _120) {\n      var f2old = f2,\n          x2old = x2,\n          y2old = y2;\n      f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n      x2 = cx + rx * math.cos(f2);\n      y2 = cy + ry * math.sin(f2);\n      res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n\n    df = f2 - f1;\n    var c1 = math.cos(f1),\n        s1 = math.sin(f1),\n        c2 = math.cos(f2),\n        s2 = math.sin(f2),\n        t = math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m1 = [x1, y1],\n        m2 = [x1 + hx * s1, y1 - hy * c1],\n        m3 = [x2 + hx * s2, y2 - hy * c2],\n        m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n\n    if (recursive) {\n      return [m2, m3, m4].concat(res);\n    } else {\n      res = [m2, m3, m4].concat(res).join().split(\",\");\n      var newres = [];\n\n      for (var i = 0, ii = res.length; i < ii; i++) {\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n      }\n\n      return newres;\n    }\n  }\n\n  function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t;\n    return {\n      x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n      y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n    };\n  } // Returns bounding box of cubic bezier curve.\n  // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n  // Original version: NISHIO Hirokazu\n  // Modifications: https://github.com/timo22345\n\n\n  function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i == 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = math.sqrt(b2ac);\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return {\n      min: {\n        x: mmin.apply(0, bounds[0]),\n        y: mmin.apply(0, bounds[1])\n      },\n      max: {\n        x: mmax.apply(0, bounds[0]),\n        y: mmax.apply(0, bounds[1])\n      }\n    };\n  }\n\n  function path2curve(path, path2) {\n    var pth = !path2 && paths(path);\n\n    if (!path2 && pth.curve) {\n      return pathClone(pth.curve);\n    }\n\n    var p = pathToAbsolute(path),\n        p2 = path2 && pathToAbsolute(path2),\n        attrs = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n        attrs2 = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n        processPath = function processPath(path, d, pcom) {\n      var nx, ny;\n\n      if (!path) {\n        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n      }\n\n      !(path[0] in {\n        T: 1,\n        Q: 1\n      }) && (d.qx = d.qy = null);\n\n      switch (path[0]) {\n        case \"M\":\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n\n        case \"A\":\n          path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n\n        case \"S\":\n          if (pcom == \"C\" || pcom == \"S\") {\n            // In \"S\" case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx; // And reflect the previous\n\n            ny = d.y * 2 - d.by; // command's control point relative to the current point.\n          } else {\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n\n          path = [\"C\", nx, ny].concat(path.slice(1));\n          break;\n\n        case \"T\":\n          if (pcom == \"Q\" || pcom == \"T\") {\n            // In \"T\" case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n            d.qy = d.y * 2 - d.qy; // to case \"S\".\n          } else {\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n\n          path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n\n        case \"Q\":\n          d.qx = path[1];\n          d.qy = path[2];\n          path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n\n        case \"L\":\n          path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n          break;\n\n        case \"H\":\n          path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n          break;\n\n        case \"V\":\n          path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n          break;\n\n        case \"Z\":\n          path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n          break;\n      }\n\n      return path;\n    },\n        fixArc = function fixArc(pp, i) {\n      if (pp[i].length > 7) {\n        pp[i].shift();\n        var pi = pp[i];\n\n        while (pi.length) {\n          pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\n          p2 && (pcoms2[i] = \"A\"); // the same as above\n\n          pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n        }\n\n        pp.splice(i, 1);\n        ii = mmax(p.length, p2 && p2.length || 0);\n      }\n    },\n        fixM = function fixM(path1, path2, a1, a2, i) {\n      if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n        a1.bx = 0;\n        a1.by = 0;\n        a1.x = path1[i][1];\n        a1.y = path1[i][2];\n        ii = mmax(p.length, p2 && p2.length || 0);\n      }\n    },\n        pcoms1 = [],\n        // path commands of original path p\n    pcoms2 = [],\n        // path commands of original path p2\n    pfirst = \"\",\n        // temporary holder for original path command\n    pcom = \"\"; // holder for previous path command of original path\n\n\n    for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n      p[i] && (pfirst = p[i][0]); // save current path command\n\n      if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n        {\n          pcoms1[i] = pfirst; // Save current path command\n\n          i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n        }\n\n      p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n      if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n      // which may produce multiple C:s\n      // so we have to make sure that C is also C in original path\n\n      fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n      if (p2) {\n        // the same procedures is done to p2\n        p2[i] && (pfirst = p2[i][0]);\n\n        if (pfirst != \"C\") {\n          pcoms2[i] = pfirst;\n          i && (pcom = pcoms2[i - 1]);\n        }\n\n        p2[i] = processPath(p2[i], attrs2, pcom);\n\n        if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n          pcoms2[i] = \"C\";\n        }\n\n        fixArc(p2, i);\n      }\n\n      fixM(p, p2, attrs, attrs2, i);\n      fixM(p2, p, attrs2, attrs, i);\n      var seg = p[i],\n          seg2 = p2 && p2[i],\n          seglen = seg.length,\n          seg2len = p2 && seg2.length;\n      attrs.x = seg[seglen - 2];\n      attrs.y = seg[seglen - 1];\n      attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n      attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n      attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n      attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n      attrs2.x = p2 && seg2[seg2len - 2];\n      attrs2.y = p2 && seg2[seg2len - 1];\n    }\n\n    if (!p2) {\n      pth.curve = pathClone(p);\n    }\n\n    return p2 ? [p, p2] : p;\n  }\n\n  function mapPath(path, matrix) {\n    if (!matrix) {\n      return path;\n    }\n\n    var x, y, i, j, ii, jj, pathi;\n    path = path2curve(path);\n\n    for (i = 0, ii = path.length; i < ii; i++) {\n      pathi = path[i];\n\n      for (j = 1, jj = pathi.length; j < jj; j += 2) {\n        x = matrix.x(pathi[j], pathi[j + 1]);\n        y = matrix.y(pathi[j], pathi[j + 1]);\n        pathi[j] = x;\n        pathi[j + 1] = y;\n      }\n    }\n\n    return path;\n  } // http://schepers.cc/getting-to-the-point\n\n\n  function catmullRom2bezier(crp, z) {\n    var d = [];\n\n    for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n      var p = [{\n        x: +crp[i - 2],\n        y: +crp[i - 1]\n      }, {\n        x: +crp[i],\n        y: +crp[i + 1]\n      }, {\n        x: +crp[i + 2],\n        y: +crp[i + 3]\n      }, {\n        x: +crp[i + 4],\n        y: +crp[i + 5]\n      }];\n\n      if (z) {\n        if (!i) {\n          p[0] = {\n            x: +crp[iLen - 2],\n            y: +crp[iLen - 1]\n          };\n        } else if (iLen - 4 == i) {\n          p[3] = {\n            x: +crp[0],\n            y: +crp[1]\n          };\n        } else if (iLen - 2 == i) {\n          p[2] = {\n            x: +crp[0],\n            y: +crp[1]\n          };\n          p[3] = {\n            x: +crp[2],\n            y: +crp[3]\n          };\n        }\n      } else {\n        if (iLen - 4 == i) {\n          p[3] = p[2];\n        } else if (!i) {\n          p[0] = {\n            x: +crp[i],\n            y: +crp[i + 1]\n          };\n        }\n      }\n\n      d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n    }\n\n    return d;\n  } // export\n\n\n  Snap.path = paths;\n  /*\\\n   * Snap.path.getTotalLength\n   [ method ]\n   **\n   * Returns the length of the given path in pixels\n   **\n   - path (string) SVG path string\n   **\n   = (number) length\n  \\*/\n\n  Snap.path.getTotalLength = getTotalLength;\n  /*\\\n   * Snap.path.getPointAtLength\n   [ method ]\n   **\n   * Returns the coordinates of the point located at the given length along the given path\n   **\n   - path (string) SVG path string\n   - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n   **\n   = (object) representation of the point:\n   o {\n   o     x: (number) x coordinate,\n   o     y: (number) y coordinate,\n   o     alpha: (number) angle of derivative\n   o }\n  \\*/\n\n  Snap.path.getPointAtLength = getPointAtLength;\n  /*\\\n   * Snap.path.getSubpath\n   [ method ]\n   **\n   * Returns the subpath of a given path between given start and end lengths\n   **\n   - path (string) SVG path string\n   - from (number) length, in pixels, from the start of the path to the start of the segment\n   - to (number) length, in pixels, from the start of the path to the end of the segment\n   **\n   = (string) path string definition for the segment\n  \\*/\n\n  Snap.path.getSubpath = function (path, from, to) {\n    if (this.getTotalLength(path) - to < 1e-6) {\n      return getSubpathsAtLength(path, from).end;\n    }\n\n    var a = getSubpathsAtLength(path, to, 1);\n    return from ? getSubpathsAtLength(a, from).end : a;\n  };\n  /*\\\n   * Element.getTotalLength\n   [ method ]\n   **\n   * Returns the length of the path in pixels (only works for `path` elements)\n   = (number) length\n  \\*/\n\n\n  elproto.getTotalLength = function () {\n    if (this.node.getTotalLength) {\n      return this.node.getTotalLength();\n    }\n  }; // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\n  /*\\\n   * Element.getPointAtLength\n   [ method ]\n   **\n   * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n   **\n   - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n   **\n   = (object) representation of the point:\n   o {\n   o     x: (number) x coordinate,\n   o     y: (number) y coordinate,\n   o     alpha: (number) angle of derivative\n   o }\n  \\*/\n\n\n  elproto.getPointAtLength = function (length) {\n    return getPointAtLength(this.attr(\"d\"), length);\n  }; // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\n  /*\\\n   * Element.getSubpath\n   [ method ]\n   **\n   * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n   **\n   - from (number) length, in pixels, from the start of the path to the start of the segment\n   - to (number) length, in pixels, from the start of the path to the end of the segment\n   **\n   = (string) path string definition for the segment\n  \\*/\n\n\n  elproto.getSubpath = function (from, to) {\n    return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n  };\n\n  Snap._.box = box;\n  /*\\\n   * Snap.path.findDotsAtSegment\n   [ method ]\n   **\n   * Utility method\n   **\n   * Finds dot coordinates on the given cubic beziér curve at the given t\n   - p1x (number) x of the first point of the curve\n   - p1y (number) y of the first point of the curve\n   - c1x (number) x of the first anchor of the curve\n   - c1y (number) y of the first anchor of the curve\n   - c2x (number) x of the second anchor of the curve\n   - c2y (number) y of the second anchor of the curve\n   - p2x (number) x of the second point of the curve\n   - p2y (number) y of the second point of the curve\n   - t (number) position on the curve (0..1)\n   = (object) point information in format:\n   o {\n   o     x: (number) x coordinate of the point,\n   o     y: (number) y coordinate of the point,\n   o     m: {\n   o         x: (number) x coordinate of the left anchor,\n   o         y: (number) y coordinate of the left anchor\n   o     },\n   o     n: {\n   o         x: (number) x coordinate of the right anchor,\n   o         y: (number) y coordinate of the right anchor\n   o     },\n   o     start: {\n   o         x: (number) x coordinate of the start of the curve,\n   o         y: (number) y coordinate of the start of the curve\n   o     },\n   o     end: {\n   o         x: (number) x coordinate of the end of the curve,\n   o         y: (number) y coordinate of the end of the curve\n   o     },\n   o     alpha: (number) angle of the curve derivative at the point\n   o }\n  \\*/\n\n  Snap.path.findDotsAtSegment = findDotsAtSegment;\n  /*\\\n   * Snap.path.bezierBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns the bounding box of a given cubic beziér curve\n   - p1x (number) x of the first point of the curve\n   - p1y (number) y of the first point of the curve\n   - c1x (number) x of the first anchor of the curve\n   - c1y (number) y of the first anchor of the curve\n   - c2x (number) x of the second anchor of the curve\n   - c2y (number) y of the second anchor of the curve\n   - p2x (number) x of the second point of the curve\n   - p2y (number) y of the second point of the curve\n   * or\n   - bez (array) array of six points for beziér curve\n   = (object) bounding box\n   o {\n   o     x: (number) x coordinate of the left top point of the box,\n   o     y: (number) y coordinate of the left top point of the box,\n   o     x2: (number) x coordinate of the right bottom point of the box,\n   o     y2: (number) y coordinate of the right bottom point of the box,\n   o     width: (number) width of the box,\n   o     height: (number) height of the box\n   o }\n  \\*/\n\n  Snap.path.bezierBBox = bezierBBox;\n  /*\\\n   * Snap.path.isPointInsideBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if given point is inside bounding box\n   - bbox (string) bounding box\n   - x (string) x coordinate of the point\n   - y (string) y coordinate of the point\n   = (boolean) `true` if point is inside\n  \\*/\n\n  Snap.path.isPointInsideBBox = isPointInsideBBox;\n\n  Snap.closest = function (x, y, X, Y) {\n    var r = 100,\n        b = box(x - r / 2, y - r / 2, r, r),\n        inside = [],\n        getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n      return {\n        x: X[i].x,\n        y: X[i].y\n      };\n    } : function (i) {\n      return {\n        x: X[i],\n        y: Y[i]\n      };\n    },\n        found = 0;\n\n    while (r <= 1e6 && !found) {\n      for (var i = 0, ii = X.length; i < ii; i++) {\n        var xy = getter(i);\n\n        if (isPointInsideBBox(b, xy.x, xy.y)) {\n          found++;\n          inside.push(xy);\n          break;\n        }\n      }\n\n      if (!found) {\n        r *= 2;\n        b = box(x - r / 2, y - r / 2, r, r);\n      }\n    }\n\n    if (r == 1e6) {\n      return;\n    }\n\n    var len = Infinity,\n        res;\n\n    for (i = 0, ii = inside.length; i < ii; i++) {\n      var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\n      if (len > l) {\n        len = l;\n        inside[i].len = l;\n        res = inside[i];\n      }\n    }\n\n    return res;\n  };\n  /*\\\n   * Snap.path.isBBoxIntersect\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if two bounding boxes intersect\n   - bbox1 (string) first bounding box\n   - bbox2 (string) second bounding box\n   = (boolean) `true` if bounding boxes intersect\n  \\*/\n\n\n  Snap.path.isBBoxIntersect = isBBoxIntersect;\n  /*\\\n   * Snap.path.intersection\n   [ method ]\n   **\n   * Utility method\n   **\n   * Finds intersections of two paths\n   - path1 (string) path string\n   - path2 (string) path string\n   = (array) dots of intersection\n   o [\n   o     {\n   o         x: (number) x coordinate of the point,\n   o         y: (number) y coordinate of the point,\n   o         t1: (number) t value for segment of path1,\n   o         t2: (number) t value for segment of path2,\n   o         segment1: (number) order number for segment of path1,\n   o         segment2: (number) order number for segment of path2,\n   o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n   o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n   o     }\n   o ]\n  \\*/\n\n  Snap.path.intersection = pathIntersection;\n  Snap.path.intersectionNumber = pathIntersectionNumber;\n  /*\\\n   * Snap.path.isPointInside\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if given point is inside a given closed path.\n   *\n   * Note: fill mode doesn’t affect the result of this method.\n   - path (string) path string\n   - x (number) x of the point\n   - y (number) y of the point\n   = (boolean) `true` if point is inside the path\n  \\*/\n\n  Snap.path.isPointInside = isPointInsidePath;\n  /*\\\n   * Snap.path.getBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns the bounding box of a given path\n   - path (string) path string\n   = (object) bounding box\n   o {\n   o     x: (number) x coordinate of the left top point of the box,\n   o     y: (number) y coordinate of the left top point of the box,\n   o     x2: (number) x coordinate of the right bottom point of the box,\n   o     y2: (number) y coordinate of the right bottom point of the box,\n   o     width: (number) width of the box,\n   o     height: (number) height of the box\n   o }\n  \\*/\n\n  Snap.path.getBBox = pathBBox;\n  Snap.path.get = getPath;\n  /*\\\n   * Snap.path.toRelative\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path coordinates into relative values\n   - path (string) path string\n   = (array) path string\n  \\*/\n\n  Snap.path.toRelative = pathToRelative;\n  /*\\\n   * Snap.path.toAbsolute\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path coordinates into absolute values\n   - path (string) path string\n   = (array) path string\n  \\*/\n\n  Snap.path.toAbsolute = pathToAbsolute;\n  /*\\\n   * Snap.path.toCubic\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path to a new path where all segments are cubic beziér curves\n   - pathString (string|array) path string or array of segments\n   = (array) array of segments\n  \\*/\n\n  Snap.path.toCubic = path2curve;\n  /*\\\n   * Snap.path.map\n   [ method ]\n   **\n   * Transform the path string with the given matrix\n   - path (string) path string\n   - matrix (object) see @Matrix\n   = (string) transformed path string\n  \\*/\n\n  Snap.path.map = mapPath;\n  Snap.path.toString = toString;\n  Snap.path.clone = pathClone;\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var mmax = Math.max,\n      mmin = Math.min; // Set\n\n  var Set = function Set(items) {\n    this.items = [];\n    this.bindings = {};\n    this.length = 0;\n    this.type = \"set\";\n\n    if (items) {\n      for (var i = 0, ii = items.length; i < ii; i++) {\n        if (items[i]) {\n          this[this.items.length] = this.items[this.items.length] = items[i];\n          this.length++;\n        }\n      }\n    }\n  },\n      setproto = Set.prototype;\n  /*\\\n   * Set.push\n   [ method ]\n   **\n   * Adds each argument to the current set\n   = (object) original element\n  \\*/\n\n\n  setproto.push = function () {\n    var item, len;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      item = arguments[i];\n\n      if (item) {\n        len = this.items.length;\n        this[len] = this.items[len] = item;\n        this.length++;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.pop\n   [ method ]\n   **\n   * Removes last element and returns it\n   = (object) element\n  \\*/\n\n\n  setproto.pop = function () {\n    this.length && delete this[this.length--];\n    return this.items.pop();\n  };\n  /*\\\n   * Set.forEach\n   [ method ]\n   **\n   * Executes given function for each element in the set\n   *\n   * If the function returns `false`, the loop stops running.\n   **\n   - callback (function) function to run\n   - thisArg (object) context object for the callback\n   = (object) Set object\n  \\*/\n\n\n  setproto.forEach = function (callback, thisArg) {\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      if (callback.call(thisArg, this.items[i], i) === false) {\n        return this;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.animate\n   [ method ]\n   **\n   * Animates each element in set in sync.\n   *\n   **\n   - attrs (object) key-value pairs of destination attributes\n   - duration (number) duration of the animation in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function that executes when the animation ends\n   * or\n   - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n   > Usage\n   | // animate all elements in set to radius 10\n   | set.animate({r: 10}, 500, mina.easein);\n   | // or\n   | // animate first element to radius 10, but second to radius 20 and in different time\n   | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n   = (Element) the current element\n  \\*/\n\n\n  setproto.animate = function (attrs, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    if (attrs instanceof Snap._.Animation) {\n      callback = attrs.callback;\n      easing = attrs.easing;\n      ms = easing.dur;\n      attrs = attrs.attr;\n    }\n\n    var args = arguments;\n\n    if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n      var each = true;\n    }\n\n    var begin,\n        handler = function handler() {\n      if (begin) {\n        this.b = begin;\n      } else {\n        begin = this.b;\n      }\n    },\n        cb = 0,\n        set = this,\n        callbacker = callback && function () {\n      if (++cb == set.length) {\n        callback.call(this);\n      }\n    };\n\n    return this.forEach(function (el, i) {\n      eve.once(\"snap.animcreated.\" + el.id, handler);\n\n      if (each) {\n        args[i] && el.animate.apply(el, args[i]);\n      } else {\n        el.animate(attrs, ms, easing, callbacker);\n      }\n    });\n  };\n  /*\\\n   * Set.remove\n   [ method ]\n   **\n   * Removes all children of the set.\n   *\n   = (object) Set object\n  \\*/\n\n\n  setproto.remove = function () {\n    while (this.length) {\n      this.pop().remove();\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.bind\n   [ method ]\n   **\n   * Specifies how to handle a specific attribute when applied\n   * to a set.\n   *\n   **\n   - attr (string) attribute name\n   - callback (function) function to run\n   * or\n   - attr (string) attribute name\n   - element (Element) specific element in the set to apply the attribute to\n   * or\n   - attr (string) attribute name\n   - element (Element) specific element in the set to apply the attribute to\n   - eattr (string) attribute on the element to bind the attribute to\n   = (object) Set object\n  \\*/\n\n\n  setproto.bind = function (attr, a, b) {\n    var data = {};\n\n    if (typeof a == \"function\") {\n      this.bindings[attr] = a;\n    } else {\n      var aname = b || attr;\n\n      this.bindings[attr] = function (v) {\n        data[aname] = v;\n        a.attr(data);\n      };\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.attr\n   [ method ]\n   **\n   * Equivalent of @Element.attr.\n   = (object) Set object\n  \\*/\n\n\n  setproto.attr = function (value) {\n    var unbound = {};\n\n    for (var k in value) {\n      if (this.bindings[k]) {\n        this.bindings[k](value[k]);\n      } else {\n        unbound[k] = value[k];\n      }\n    }\n\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      this.items[i].attr(unbound);\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.clear\n   [ method ]\n   **\n   * Removes all elements from the set\n  \\*/\n\n\n  setproto.clear = function () {\n    while (this.length) {\n      this.pop();\n    }\n  };\n  /*\\\n   * Set.splice\n   [ method ]\n   **\n   * Removes range of elements from the set\n   **\n   - index (number) position of the deletion\n   - count (number) number of element to remove\n   - insertion… (object) #optional elements to insert\n   = (object) set elements that were deleted\n  \\*/\n\n\n  setproto.splice = function (index, count, insertion) {\n    index = index < 0 ? mmax(this.length + index, 0) : index;\n    count = mmax(0, mmin(this.length - index, count));\n    var tail = [],\n        todel = [],\n        args = [],\n        i;\n\n    for (i = 2; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    for (i = 0; i < count; i++) {\n      todel.push(this[index + i]);\n    }\n\n    for (; i < this.length - index; i++) {\n      tail.push(this[index + i]);\n    }\n\n    var arglen = args.length;\n\n    for (i = 0; i < arglen + tail.length; i++) {\n      this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n    }\n\n    i = this.items.length = this.length -= count - arglen;\n\n    while (this[i]) {\n      delete this[i++];\n    }\n\n    return new Set(todel);\n  };\n  /*\\\n   * Set.exclude\n   [ method ]\n   **\n   * Removes given element from the set\n   **\n   - element (object) element to remove\n   = (boolean) `true` if object was found and removed from the set\n  \\*/\n\n\n  setproto.exclude = function (el) {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (this[i] == el) {\n        this.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /*\\\n   * Set.insertAfter\n   [ method ]\n   **\n   * Inserts set elements after given element.\n   **\n   - element (object) set will be inserted after this element\n   = (object) Set object\n  \\*/\n\n\n  setproto.insertAfter = function (el) {\n    var i = this.items.length;\n\n    while (i--) {\n      this.items[i].insertAfter(el);\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.getBBox\n   [ method ]\n   **\n   * Union of all bboxes of the set. See @Element.getBBox.\n   = (object) bounding box descriptor. See @Element.getBBox.\n  \\*/\n\n\n  setproto.getBBox = function () {\n    var x = [],\n        y = [],\n        x2 = [],\n        y2 = [];\n\n    for (var i = this.items.length; i--;) {\n      if (!this.items[i].removed) {\n        var box = this.items[i].getBBox();\n        x.push(box.x);\n        y.push(box.y);\n        x2.push(box.x + box.width);\n        y2.push(box.y + box.height);\n      }\n    }\n\n    x = mmin.apply(0, x);\n    y = mmin.apply(0, y);\n    x2 = mmax.apply(0, x2);\n    y2 = mmax.apply(0, y2);\n    return {\n      x: x,\n      y: y,\n      x2: x2,\n      y2: y2,\n      width: x2 - x,\n      height: y2 - y,\n      cx: x + (x2 - x) / 2,\n      cy: y + (y2 - y) / 2\n    };\n  };\n  /*\\\n   * Set.insertAfter\n   [ method ]\n   **\n   * Creates a clone of the set.\n   **\n   = (object) New Set object\n  \\*/\n\n\n  setproto.clone = function (s) {\n    s = new Set();\n\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      s.push(this.items[i].clone());\n    }\n\n    return s;\n  };\n\n  setproto.toString = function () {\n    return \"Snap\\u2018s set\";\n  };\n\n  setproto.type = \"set\"; // export\n\n  /*\\\n   * Snap.Set\n   [ property ]\n   **\n   * Set constructor.\n  \\*/\n\n  Snap.Set = Set;\n  /*\\\n   * Snap.set\n   [ method ]\n   **\n   * Creates a set and fills it with list of arguments.\n   **\n   = (object) New Set object\n   | var r = paper.rect(0, 0, 10, 10),\n   |     s1 = Snap.set(), // empty set\n   |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n  \\*/\n\n  Snap.set = function () {\n    var set = new Set();\n\n    if (arguments.length) {\n      set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n    }\n\n    return set;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var names = {},\n      reUnit = /[%a-z]+$/i,\n      Str = String;\n  names.stroke = names.fill = \"colour\";\n\n  function getEmpty(item) {\n    var l = item[0];\n\n    switch (l.toLowerCase()) {\n      case \"t\":\n        return [l, 0, 0];\n\n      case \"m\":\n        return [l, 1, 0, 0, 1, 0, 0];\n\n      case \"r\":\n        if (item.length == 4) {\n          return [l, 0, item[2], item[3]];\n        } else {\n          return [l, 0];\n        }\n\n      case \"s\":\n        if (item.length == 5) {\n          return [l, 1, 1, item[3], item[4]];\n        } else if (item.length == 3) {\n          return [l, 1, 1];\n        } else {\n          return [l, 1];\n        }\n\n    }\n  }\n\n  function equaliseTransform(t1, t2, getBBox) {\n    t1 = t1 || new Snap.Matrix();\n    t2 = t2 || new Snap.Matrix();\n    t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n    t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n    var maxlength = Math.max(t1.length, t2.length),\n        from = [],\n        to = [],\n        i = 0,\n        j,\n        jj,\n        tt1,\n        tt2;\n\n    for (; i < maxlength; i++) {\n      tt1 = t1[i] || getEmpty(t2[i]);\n      tt2 = t2[i] || getEmpty(tt1);\n\n      if (tt1[0] != tt2[0] || tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {\n        t1 = Snap._.transform2matrix(t1, getBBox());\n        t2 = Snap._.transform2matrix(t2, getBBox());\n        from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n        to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n        break;\n      }\n\n      from[i] = [];\n      to[i] = [];\n\n      for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n        j in tt1 && (from[i][j] = tt1[j]);\n        j in tt2 && (to[i][j] = tt2[j]);\n      }\n    }\n\n    return {\n      from: path2array(from),\n      to: path2array(to),\n      f: getPath(from)\n    };\n  }\n\n  function getNumber(val) {\n    return val;\n  }\n\n  function getUnit(unit) {\n    return function (val) {\n      return +val.toFixed(3) + unit;\n    };\n  }\n\n  function getViewBox(val) {\n    return val.join(\" \");\n  }\n\n  function getColour(clr) {\n    return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n  }\n\n  function getPath(path) {\n    var k = 0,\n        i,\n        ii,\n        j,\n        jj,\n        out,\n        a,\n        b = [];\n\n    for (i = 0, ii = path.length; i < ii; i++) {\n      out = \"[\";\n      a = ['\"' + path[i][0] + '\"'];\n\n      for (j = 1, jj = path[i].length; j < jj; j++) {\n        a[j] = \"val[\" + k++ + \"]\";\n      }\n\n      out += a + \"]\";\n      b[i] = out;\n    }\n\n    return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n  }\n\n  function path2array(path) {\n    var out = [];\n\n    for (var i = 0, ii = path.length; i < ii; i++) {\n      for (var j = 1, jj = path[i].length; j < jj; j++) {\n        out.push(path[i][j]);\n      }\n    }\n\n    return out;\n  }\n\n  function isNumeric(obj) {\n    return isFinite(obj);\n  }\n\n  function arrayEqual(arr1, arr2) {\n    if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n      return false;\n    }\n\n    return arr1.toString() == arr2.toString();\n  }\n\n  Element.prototype.equal = function (name, b) {\n    return eve(\"snap.util.equal\", this, name, b).firstDefined();\n  };\n\n  eve.on(\"snap.util.equal\", function (name, b) {\n    var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this;\n\n    if (names[name] == \"colour\") {\n      A = Snap.color(a);\n      B = Snap.color(b);\n      return {\n        from: [A.r, A.g, A.b, A.opacity],\n        to: [B.r, B.g, B.b, B.opacity],\n        f: getColour\n      };\n    }\n\n    if (name == \"viewBox\") {\n      A = this.attr(name).vb.split(\" \").map(Number);\n      B = b.split(\" \").map(Number);\n      return {\n        from: A,\n        to: B,\n        f: getViewBox\n      };\n    }\n\n    if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n      if (typeof b == \"string\") {\n        b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n      }\n\n      a = this.matrix;\n\n      if (!Snap._.rgTransform.test(b)) {\n        b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n      } else {\n        b = Snap._.transform2matrix(b, this.getBBox());\n      }\n\n      return equaliseTransform(a, b, function () {\n        return el.getBBox(1);\n      });\n    }\n\n    if (name == \"d\" || name == \"path\") {\n      A = Snap.path.toCubic(a, b);\n      return {\n        from: path2array(A[0]),\n        to: path2array(A[1]),\n        f: getPath(A[0])\n      };\n    }\n\n    if (name == \"points\") {\n      A = Str(a).split(Snap._.separator);\n      B = Str(b).split(Snap._.separator);\n      return {\n        from: A,\n        to: B,\n        f: function f(val) {\n          return val;\n        }\n      };\n    }\n\n    if (isNumeric(a) && isNumeric(b)) {\n      return {\n        from: parseFloat(a),\n        to: parseFloat(b),\n        f: getNumber\n      };\n    }\n\n    var aUnit = a.match(reUnit),\n        bUnit = Str(b).match(reUnit);\n\n    if (aUnit && arrayEqual(aUnit, bUnit)) {\n      return {\n        from: parseFloat(a),\n        to: parseFloat(b),\n        f: getUnit(aUnit)\n      };\n    } else {\n      return {\n        from: this.asPX(name),\n        to: this.asPX(name, b),\n        f: getNumber\n      };\n    }\n  });\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      has = \"hasOwnProperty\",\n      supportsTouch = \"createTouch\" in glob.doc,\n      events = [\"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n      touchMap = {\n    mousedown: \"touchstart\",\n    mousemove: \"touchmove\",\n    mouseup: \"touchend\"\n  },\n      getScroll = function getScroll(xy, el) {\n    var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n        doc = el && el.node ? el.node.ownerDocument : glob.doc;\n    return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n  },\n      preventDefault = function preventDefault() {\n    this.returnValue = false;\n  },\n      preventTouch = function preventTouch() {\n    return this.originalEvent.preventDefault();\n  },\n      stopPropagation = function stopPropagation() {\n    this.cancelBubble = true;\n  },\n      stopTouch = function stopTouch() {\n    return this.originalEvent.stopPropagation();\n  },\n      addEvent = function addEvent(obj, type, fn, element) {\n    var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n        f = function f(e) {\n      var scrollY = getScroll(\"y\", element),\n          scrollX = getScroll(\"x\", element);\n\n      if (supportsTouch && touchMap[has](type)) {\n        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n          if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n            var olde = e;\n            e = e.targetTouches[i];\n            e.originalEvent = olde;\n            e.preventDefault = preventTouch;\n            e.stopPropagation = stopTouch;\n            break;\n          }\n        }\n      }\n\n      var x = e.clientX + scrollX,\n          y = e.clientY + scrollY;\n      return fn.call(element, e, x, y);\n    };\n\n    if (type !== realName) {\n      obj.addEventListener(type, f, false);\n    }\n\n    obj.addEventListener(realName, f, false);\n    return function () {\n      if (type !== realName) {\n        obj.removeEventListener(type, f, false);\n      }\n\n      obj.removeEventListener(realName, f, false);\n      return true;\n    };\n  },\n      drag = [],\n      dragMove = function dragMove(e) {\n    var x = e.clientX,\n        y = e.clientY,\n        scrollY = getScroll(\"y\"),\n        scrollX = getScroll(\"x\"),\n        dragi,\n        j = drag.length;\n\n    while (j--) {\n      dragi = drag[j];\n\n      if (supportsTouch) {\n        var i = e.touches && e.touches.length,\n            touch;\n\n        while (i--) {\n          touch = e.touches[i];\n\n          if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n            x = touch.clientX;\n            y = touch.clientY;\n            (e.originalEvent ? e.originalEvent : e).preventDefault();\n            break;\n          }\n        }\n      } else {\n        e.preventDefault();\n      }\n\n      var node = dragi.el.node,\n          o,\n          next = node.nextSibling,\n          parent = node.parentNode,\n          display = node.style.display; // glob.win.opera && parent.removeChild(node);\n      // node.style.display = \"none\";\n      // o = dragi.el.paper.getElementByPoint(x, y);\n      // node.style.display = display;\n      // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n      // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\n      x += scrollX;\n      y += scrollY;\n      eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n    }\n  },\n      dragUp = function dragUp(e) {\n    Snap.unmousemove(dragMove).unmouseup(dragUp);\n    var i = drag.length,\n        dragi;\n\n    while (i--) {\n      dragi = drag[i];\n      dragi.el._drag = {};\n      eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n      eve.off(\"snap.drag.*.\" + dragi.el.id);\n    }\n\n    drag = [];\n  };\n  /*\\\n   * Element.click\n   [ method ]\n   **\n   * Adds a click event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unclick\n   [ method ]\n   **\n   * Removes a click event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.dblclick\n   [ method ]\n   **\n   * Adds a double click event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.undblclick\n   [ method ]\n   **\n   * Removes a double click event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mousedown\n   [ method ]\n   **\n   * Adds a mousedown event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmousedown\n   [ method ]\n   **\n   * Removes a mousedown event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mousemove\n   [ method ]\n   **\n   * Adds a mousemove event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmousemove\n   [ method ]\n   **\n   * Removes a mousemove event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseout\n   [ method ]\n   **\n   * Adds a mouseout event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseout\n   [ method ]\n   **\n   * Removes a mouseout event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseover\n   [ method ]\n   **\n   * Adds a mouseover event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseover\n   [ method ]\n   **\n   * Removes a mouseover event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseup\n   [ method ]\n   **\n   * Adds a mouseup event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseup\n   [ method ]\n   **\n   * Removes a mouseup event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchstart\n   [ method ]\n   **\n   * Adds a touchstart event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchstart\n   [ method ]\n   **\n   * Removes a touchstart event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchmove\n   [ method ]\n   **\n   * Adds a touchmove event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchmove\n   [ method ]\n   **\n   * Removes a touchmove event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchend\n   [ method ]\n   **\n   * Adds a touchend event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchend\n   [ method ]\n   **\n   * Removes a touchend event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchcancel\n   [ method ]\n   **\n   * Adds a touchcancel event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchcancel\n   [ method ]\n   **\n   * Removes a touchcancel event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n\n  for (var i = events.length; i--;) {\n    (function (eventName) {\n      Snap[eventName] = elproto[eventName] = function (fn, scope) {\n        if (Snap.is(fn, \"function\")) {\n          this.events = this.events || [];\n          this.events.push({\n            name: eventName,\n            f: fn,\n            unbind: addEvent(this.node || document, eventName, fn, scope || this)\n          });\n        } else {\n          for (var i = 0, ii = this.events.length; i < ii; i++) {\n            if (this.events[i].name == eventName) {\n              try {\n                this.events[i].f.call(this);\n              } catch (e) {}\n            }\n          }\n        }\n\n        return this;\n      };\n\n      Snap[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n        var events = this.events || [],\n            l = events.length;\n\n        while (l--) {\n          if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n            events[l].unbind();\n            events.splice(l, 1);\n            !events.length && delete this.events;\n            return this;\n          }\n        }\n\n        return this;\n      };\n    })(events[i]);\n  }\n  /*\\\n   * Element.hover\n   [ method ]\n   **\n   * Adds hover event handlers to the element\n   - f_in (function) handler for hover in\n   - f_out (function) handler for hover out\n   - icontext (object) #optional context for hover in handler\n   - ocontext (object) #optional context for hover out handler\n   = (object) @Element\n  \\*/\n\n\n  elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n    return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n  };\n  /*\\\n   * Element.unhover\n   [ method ]\n   **\n   * Removes hover event handlers from the element\n   - f_in (function) handler for hover in\n   - f_out (function) handler for hover out\n   = (object) @Element\n  \\*/\n\n\n  elproto.unhover = function (f_in, f_out) {\n    return this.unmouseover(f_in).unmouseout(f_out);\n  };\n\n  var draggable = []; // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n  // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n  // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n  // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\n  /*\\\n   * Element.drag\n   [ method ]\n   **\n   * Adds event handlers for an element's drag gesture\n   **\n   - onmove (function) handler for moving\n   - onstart (function) handler for drag start\n   - onend (function) handler for drag end\n   - mcontext (object) #optional context for moving handler\n   - scontext (object) #optional context for drag start handler\n   - econtext (object) #optional context for drag end handler\n   * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n   * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n   * `drag.over.<id>` fires as well.\n   *\n   * Start event and start handler are called in specified context or in context of the element with following parameters:\n   o x (number) x position of the mouse\n   o y (number) y position of the mouse\n   o event (object) DOM event object\n   * Move event and move handler are called in specified context or in context of the element with following parameters:\n   o dx (number) shift by x from the start point\n   o dy (number) shift by y from the start point\n   o x (number) x position of the mouse\n   o y (number) y position of the mouse\n   o event (object) DOM event object\n   * End event and end handler are called in specified context or in context of the element with following parameters:\n   o event (object) DOM event object\n   = (object) @Element\n  \\*/\n\n  elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n    var el = this;\n\n    if (!arguments.length) {\n      var origTransform;\n      return el.drag(function (dx, dy) {\n        this.attr({\n          transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n        });\n      }, function () {\n        origTransform = this.transform().local;\n      });\n    }\n\n    function start(e, x, y) {\n      (e.originalEvent || e).preventDefault();\n      el._drag.x = x;\n      el._drag.y = y;\n      el._drag.id = e.identifier;\n      !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n      drag.push({\n        el: el,\n        move_scope: move_scope,\n        start_scope: start_scope,\n        end_scope: end_scope\n      });\n      onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n      onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n      onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n      eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n    }\n\n    function init(e, x, y) {\n      eve(\"snap.draginit.\" + el.id, el, e, x, y);\n    }\n\n    eve.on(\"snap.draginit.\" + el.id, start);\n    el._drag = {};\n    draggable.push({\n      el: el,\n      start: start,\n      init: init\n    });\n    el.mousedown(init);\n    return el;\n  };\n  /*\n   * Element.onDragOver\n   [ method ]\n   **\n   * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n   - f (function) handler for event, first argument would be the element you are dragging over\n  \\*/\n  // elproto.onDragOver = function (f) {\n  //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n  // };\n\n  /*\\\n   * Element.undrag\n   [ method ]\n   **\n   * Removes all drag event handlers from the given element\n  \\*/\n\n\n  elproto.undrag = function () {\n    var i = draggable.length;\n\n    while (i--) {\n      if (draggable[i].el == this) {\n        this.unmousedown(draggable[i].init);\n        draggable.splice(i, 1);\n        eve.unbind(\"snap.drag.*.\" + this.id);\n        eve.unbind(\"snap.draginit.\" + this.id);\n      }\n    }\n\n    !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n    return this;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      pproto = Paper.prototype,\n      rgurl = /^\\s*url\\((.+)\\)/,\n      Str = String,\n      $ = Snap._.$;\n  Snap.filter = {};\n  /*\\\n   * Paper.filter\n   [ method ]\n   **\n   * Creates a `<filter>` element\n   **\n   - filstr (string) SVG fragment of filter provided as a string\n   = (object) @Element\n   * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n   > Usage\n   | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n  pproto.filter = function (filstr) {\n    var paper = this;\n\n    if (paper.type != \"svg\") {\n      paper = paper.paper;\n    }\n\n    var f = Snap.parse(Str(filstr)),\n        id = Snap._.id(),\n        width = paper.node.offsetWidth,\n        height = paper.node.offsetHeight,\n        filter = $(\"filter\");\n\n    $(filter, {\n      id: id,\n      filterUnits: \"userSpaceOnUse\"\n    });\n    filter.appendChild(f.node);\n    paper.defs.appendChild(filter);\n    return new Element(filter);\n  };\n\n  eve.on(\"snap.util.getattr.filter\", function () {\n    eve.stop();\n    var p = $(this.node, \"filter\");\n\n    if (p) {\n      var match = Str(p).match(rgurl);\n      return match && Snap.select(match[1]);\n    }\n  });\n  eve.on(\"snap.util.attr.filter\", function (value) {\n    if (value instanceof Element && value.type == \"filter\") {\n      eve.stop();\n      var id = value.node.id;\n\n      if (!id) {\n        $(value.node, {\n          id: value.id\n        });\n        id = value.id;\n      }\n\n      $(this.node, {\n        filter: Snap.url(id)\n      });\n    }\n\n    if (!value || value == \"none\") {\n      eve.stop();\n      this.node.removeAttribute(\"filter\");\n    }\n  });\n  /*\\\n   * Snap.filter.blur\n   [ method ]\n   **\n   * Returns an SVG markup string for the blur filter\n   **\n   - x (number) amount of horizontal blur, in pixels\n   - y (number) #optional amount of vertical blur, in pixels\n   = (string) filter representation\n   > Usage\n   | var f = paper.filter(Snap.filter.blur(5, 10)),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n  Snap.filter.blur = function (x, y) {\n    if (x == null) {\n      x = 2;\n    }\n\n    var def = y == null ? x : [x, y];\n    return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n      def: def\n    });\n  };\n\n  Snap.filter.blur.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.shadow\n   [ method ]\n   **\n   * Returns an SVG markup string for the shadow filter\n   **\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - blur (number) #optional amount of blur\n   - color (string) #optional color of the shadow\n   - opacity (number) #optional `0..1` opacity of the shadow\n   * or\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - color (string) #optional color of the shadow\n   - opacity (number) #optional `0..1` opacity of the shadow\n   * which makes blur default to `4`. Or\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - opacity (number) #optional `0..1` opacity of the shadow\n   = (string) filter representation\n   > Usage\n   | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n\n  Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n    if (opacity == null) {\n      if (color == null) {\n        opacity = blur;\n        blur = 4;\n        color = \"#000\";\n      } else {\n        opacity = color;\n        color = blur;\n        blur = 4;\n      }\n    }\n\n    if (blur == null) {\n      blur = 4;\n    }\n\n    if (opacity == null) {\n      opacity = 1;\n    }\n\n    if (dx == null) {\n      dx = 0;\n      dy = 2;\n    }\n\n    if (dy == null) {\n      dy = dx;\n    }\n\n    color = Snap.color(color);\n    return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n      color: color,\n      dx: dx,\n      dy: dy,\n      blur: blur,\n      opacity: opacity\n    });\n  };\n\n  Snap.filter.shadow.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.grayscale\n   [ method ]\n   **\n   * Returns an SVG markup string for the grayscale filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.grayscale = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n      a: 0.2126 + 0.7874 * (1 - amount),\n      b: 0.7152 - 0.7152 * (1 - amount),\n      c: 0.0722 - 0.0722 * (1 - amount),\n      d: 0.2126 - 0.2126 * (1 - amount),\n      e: 0.7152 + 0.2848 * (1 - amount),\n      f: 0.0722 - 0.0722 * (1 - amount),\n      g: 0.2126 - 0.2126 * (1 - amount),\n      h: 0.0722 + 0.9278 * (1 - amount)\n    });\n  };\n\n  Snap.filter.grayscale.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.sepia\n   [ method ]\n   **\n   * Returns an SVG markup string for the sepia filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.sepia = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n      a: 0.393 + 0.607 * (1 - amount),\n      b: 0.769 - 0.769 * (1 - amount),\n      c: 0.189 - 0.189 * (1 - amount),\n      d: 0.349 - 0.349 * (1 - amount),\n      e: 0.686 + 0.314 * (1 - amount),\n      f: 0.168 - 0.168 * (1 - amount),\n      g: 0.272 - 0.272 * (1 - amount),\n      h: 0.534 - 0.534 * (1 - amount),\n      i: 0.131 + 0.869 * (1 - amount)\n    });\n  };\n\n  Snap.filter.sepia.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.saturate\n   [ method ]\n   **\n   * Returns an SVG markup string for the saturate filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.saturate = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n      amount: 1 - amount\n    });\n  };\n\n  Snap.filter.saturate.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.hueRotate\n   [ method ]\n   **\n   * Returns an SVG markup string for the hue-rotate filter\n   **\n   - angle (number) angle of rotation\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.hueRotate = function (angle) {\n    angle = angle || 0;\n    return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n      angle: angle\n    });\n  };\n\n  Snap.filter.hueRotate.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.invert\n   [ method ]\n   **\n   * Returns an SVG markup string for the invert filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.invert = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    } //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n      amount: amount,\n      amount2: 1 - amount\n    });\n  };\n\n  Snap.filter.invert.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.brightness\n   [ method ]\n   **\n   * Returns an SVG markup string for the brightness filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.brightness = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n      amount: amount\n    });\n  };\n\n  Snap.filter.brightness.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.contrast\n   [ method ]\n   **\n   * Returns an SVG markup string for the contrast filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.contrast = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n      amount: amount,\n      amount2: .5 - amount / 2\n    });\n  };\n\n  Snap.filter.contrast.toString = function () {\n    return this();\n  };\n}); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var box = Snap._.box,\n      is = Snap.is,\n      firstLetter = /^[^a-z]*([tbmlrc])/i,\n      toString = function toString() {\n    return \"T\" + this.dx + \",\" + this.dy;\n  };\n  /*\\\n   * Element.getAlign\n   [ method ]\n   **\n   * Returns shift needed to align the element relatively to given element.\n   * If no elements specified, parent `<svg>` container will be used.\n   - el (object) @optional alignment element\n   - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n   = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n   > Usage\n   | el.transform(el.getAlign(el2, \"top\"));\n   * or\n   | var dy = el.getAlign(el2, \"top\").dy;\n  \\*/\n\n\n  Element.prototype.getAlign = function (el, way) {\n    if (way == null && is(el, \"string\")) {\n      way = el;\n      el = null;\n    }\n\n    el = el || this.paper;\n    var bx = el.getBBox ? el.getBBox() : box(el),\n        bb = this.getBBox(),\n        out = {};\n    way = way && way.match(firstLetter);\n    way = way ? way[1].toLowerCase() : \"c\";\n\n    switch (way) {\n      case \"t\":\n        out.dx = 0;\n        out.dy = bx.y - bb.y;\n        break;\n\n      case \"b\":\n        out.dx = 0;\n        out.dy = bx.y2 - bb.y2;\n        break;\n\n      case \"m\":\n        out.dx = 0;\n        out.dy = bx.cy - bb.cy;\n        break;\n\n      case \"l\":\n        out.dx = bx.x - bb.x;\n        out.dy = 0;\n        break;\n\n      case \"r\":\n        out.dx = bx.x2 - bb.x2;\n        out.dy = 0;\n        break;\n\n      default:\n        out.dx = bx.cx - bb.cx;\n        out.dy = 0;\n        break;\n    }\n\n    out.toString = toString;\n    return out;\n  };\n  /*\\\n   * Element.align\n   [ method ]\n   **\n   * Aligns the element relatively to given one via transformation.\n   * If no elements specified, parent `<svg>` container will be used.\n   - el (object) @optional alignment element\n   - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n   = (object) this element\n   > Usage\n   | el.align(el2, \"top\");\n   * or\n   | el.align(\"middle\");\n  \\*/\n\n\n  Element.prototype.align = function (el, way) {\n    return this.transform(\"...\" + this.getAlign(el, way));\n  };\n}); // Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      has = \"hasOwnProperty\";\n\n  function slice(from, to, f) {\n    return function (arr) {\n      var res = arr.slice(from, to);\n\n      if (res.length == 1) {\n        res = res[0];\n      }\n\n      return f ? f(res) : res;\n    };\n  }\n\n  var Animation = function Animation(attr, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    this.attr = attr;\n    this.dur = ms;\n    easing && (this.easing = easing);\n    callback && (this.callback = callback);\n  };\n\n  Snap._.Animation = Animation;\n  /*\\\n   * Snap.animation\n   [ method ]\n   **\n   * Creates an animation object\n   **\n   - attr (object) attributes of final destination\n   - duration (number) duration of the animation, in milliseconds\n   - easing (function) #optional one of easing functions of @mina or custom one\n   - callback (function) #optional callback function that fires when animation ends\n   = (object) animation object\n  \\*/\n\n  Snap.animation = function (attr, ms, easing, callback) {\n    return new Animation(attr, ms, easing, callback);\n  };\n  /*\\\n   * Element.inAnim\n   [ method ]\n   **\n   * Returns a set of animations that may be able to manipulate the current element\n   **\n   = (object) in format:\n   o {\n   o     anim (object) animation object,\n   o     mina (object) @mina object,\n   o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n   o     status (function) gets or sets the status of the animation,\n   o     stop (function) stops the animation\n   o }\n  \\*/\n\n\n  elproto.inAnim = function () {\n    var el = this,\n        res = [];\n\n    for (var id in el.anims) {\n      if (el.anims[has](id)) {\n        (function (a) {\n          res.push({\n            anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n            mina: a,\n            curStatus: a.status(),\n            status: function status(val) {\n              return a.status(val);\n            },\n            stop: function stop() {\n              a.stop();\n            }\n          });\n        })(el.anims[id]);\n      }\n    }\n\n    return res;\n  };\n  /*\\\n   * Snap.animate\n   [ method ]\n   **\n   * Runs generic animation of one number into another with a caring function\n   **\n   - from (number|array) number or array of numbers\n   - to (number|array) number or array of numbers\n   - setter (function) caring function that accepts one number argument\n   - duration (number) duration, in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function to execute when animation ends\n   = (object) animation object in @mina format\n   o {\n   o     id (string) animation id, consider it read-only,\n   o     duration (function) gets or sets the duration of the animation,\n   o     easing (function) easing,\n   o     speed (function) gets or sets the speed of the animation,\n   o     status (function) gets or sets the status of the animation,\n   o     stop (function) stops the animation\n   o }\n   | var rect = Snap().rect(0, 0, 10, 10);\n   | Snap.animate(0, 10, function (val) {\n   |     rect.attr({\n   |         x: val\n   |     });\n   | }, 1000);\n   | // in given context is equivalent to\n   | rect.animate({x: 10}, 1000);\n  \\*/\n\n\n  Snap.animate = function (from, to, setter, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    var now = mina.time(),\n        anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n    callback && eve.once(\"mina.finish.\" + anim.id, callback);\n    return anim;\n  };\n  /*\\\n   * Element.stop\n   [ method ]\n   **\n   * Stops all the animations for the current element\n   **\n   = (Element) the current element\n  \\*/\n\n\n  elproto.stop = function () {\n    var anims = this.inAnim();\n\n    for (var i = 0, ii = anims.length; i < ii; i++) {\n      anims[i].stop();\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.animate\n   [ method ]\n   **\n   * Animates the given attributes of the element\n   **\n   - attrs (object) key-value pairs of destination attributes\n   - duration (number) duration of the animation in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function that executes when the animation ends\n   = (Element) the current element\n  \\*/\n\n\n  elproto.animate = function (attrs, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    if (attrs instanceof Animation) {\n      callback = attrs.callback;\n      easing = attrs.easing;\n      ms = attrs.dur;\n      attrs = attrs.attr;\n    }\n\n    var fkeys = [],\n        tkeys = [],\n        keys = {},\n        from,\n        to,\n        f,\n        eq,\n        el = this;\n\n    for (var key in attrs) {\n      if (attrs[has](key)) {\n        if (el.equal) {\n          eq = el.equal(key, Str(attrs[key]));\n          from = eq.from;\n          to = eq.to;\n          f = eq.f;\n        } else {\n          from = +el.attr(key);\n          to = +attrs[key];\n        }\n\n        var len = is(from, \"array\") ? from.length : 1;\n        keys[key] = slice(fkeys.length, fkeys.length + len, f);\n        fkeys = fkeys.concat(from);\n        tkeys = tkeys.concat(to);\n      }\n    }\n\n    var now = mina.time(),\n        anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n      var attr = {};\n\n      for (var key in keys) {\n        if (keys[has](key)) {\n          attr[key] = keys[key](val);\n        }\n      }\n\n      el.attr(attr);\n    }, easing);\n    el.anims[anim.id] = anim;\n    anim._attrs = attrs;\n    anim._callback = callback;\n    eve(\"snap.animcreated.\" + el.id, anim);\n    eve.once(\"mina.finish.\" + anim.id, function () {\n      eve.off(\"mina.*.\" + anim.id);\n      delete el.anims[anim.id];\n      callback && callback.call(el);\n    });\n    eve.once(\"mina.stop.\" + anim.id, function () {\n      eve.off(\"mina.*.\" + anim.id);\n      delete el.anims[anim.id];\n    });\n    return el;\n  };\n}); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  // Colours are from https://www.materialui.co\n  var red = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n      pink = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n      purple = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n      deeppurple = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n      indigo = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n      blue = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n      lightblue = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n      cyan = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n      teal = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n      green = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n      lightgreen = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n      lime = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n      yellow = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n      amber = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n      orange = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n      deeporange = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n      brown = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n      grey = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n      bluegrey = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n  /*\\\n   * Snap.mui\n   [ property ]\n   **\n   * Contain Material UI colours.\n   | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.mui = {};\n  /*\\\n   * Snap.flat\n   [ property ]\n   **\n   * Contain Flat UI colours.\n   | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.flat = {};\n\n  function saveColor(colors) {\n    colors = colors.split(/(?=#)/);\n    var color = new String(colors[5]);\n    color[50] = colors[0];\n    color[100] = colors[1];\n    color[200] = colors[2];\n    color[300] = colors[3];\n    color[400] = colors[4];\n    color[500] = colors[5];\n    color[600] = colors[6];\n    color[700] = colors[7];\n    color[800] = colors[8];\n    color[900] = colors[9];\n\n    if (colors[10]) {\n      color.A100 = colors[10];\n      color.A200 = colors[11];\n      color.A400 = colors[12];\n      color.A700 = colors[13];\n    }\n\n    return color;\n  }\n\n  Snap.mui.red = saveColor(red);\n  Snap.mui.pink = saveColor(pink);\n  Snap.mui.purple = saveColor(purple);\n  Snap.mui.deeppurple = saveColor(deeppurple);\n  Snap.mui.indigo = saveColor(indigo);\n  Snap.mui.blue = saveColor(blue);\n  Snap.mui.lightblue = saveColor(lightblue);\n  Snap.mui.cyan = saveColor(cyan);\n  Snap.mui.teal = saveColor(teal);\n  Snap.mui.green = saveColor(green);\n  Snap.mui.lightgreen = saveColor(lightgreen);\n  Snap.mui.lime = saveColor(lime);\n  Snap.mui.yellow = saveColor(yellow);\n  Snap.mui.amber = saveColor(amber);\n  Snap.mui.orange = saveColor(orange);\n  Snap.mui.deeporange = saveColor(deeporange);\n  Snap.mui.brown = saveColor(brown);\n  Snap.mui.grey = saveColor(grey);\n  Snap.mui.bluegrey = saveColor(bluegrey);\n  Snap.flat.turquoise = \"#1abc9c\";\n  Snap.flat.greensea = \"#16a085\";\n  Snap.flat.sunflower = \"#f1c40f\";\n  Snap.flat.orange = \"#f39c12\";\n  Snap.flat.emerland = \"#2ecc71\";\n  Snap.flat.nephritis = \"#27ae60\";\n  Snap.flat.carrot = \"#e67e22\";\n  Snap.flat.pumpkin = \"#d35400\";\n  Snap.flat.peterriver = \"#3498db\";\n  Snap.flat.belizehole = \"#2980b9\";\n  Snap.flat.alizarin = \"#e74c3c\";\n  Snap.flat.pomegranate = \"#c0392b\";\n  Snap.flat.amethyst = \"#9b59b6\";\n  Snap.flat.wisteria = \"#8e44ad\";\n  Snap.flat.clouds = \"#ecf0f1\";\n  Snap.flat.silver = \"#bdc3c7\";\n  Snap.flat.wetasphalt = \"#34495e\";\n  Snap.flat.midnightblue = \"#2c3e50\";\n  Snap.flat.concrete = \"#95a5a6\";\n  Snap.flat.asbestos = \"#7f8c8d\";\n  /*\\\n   * Snap.importMUIColors\n   [ method ]\n   **\n   * Imports Material UI colours into global object.\n   | Snap.importMUIColors();\n   | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.importMUIColors = function () {\n    for (var color in Snap.mui) {\n      if (Snap.mui.hasOwnProperty(color)) {\n        window[color] = Snap.mui[color];\n      }\n    }\n  };\n});\nmodule.exports = Snap;","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n(function (glob) {\n  var version = \"0.5.4\",\n      has = \"hasOwnProperty\",\n      separator = /[\\.\\/]/,\n      comaseparator = /\\s*,\\s*/,\n      wildcard = \"*\",\n      numsort = function numsort(a, b) {\n    return a - b;\n  },\n      current_event,\n      stop,\n      events = {\n    n: {}\n  },\n      firstDefined = function firstDefined() {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      lastDefined = function lastDefined() {\n    var i = this.length;\n\n    while (--i) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      objtos = Object.prototype.toString,\n      Str = String,\n      isArray = Array.isArray || function (ar) {\n    return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n  },\n\n  /*\\\n   * eve\n   [ method ]\n    * Fires event with given `name`, given scope and other parameters.\n    - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n   - scope (object) context for the event handlers\n   - varargs (...) the rest of arguments will be sent to event handlers\n    = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n  \\*/\n  eve = function eve(name, scope) {\n    var oldstop = stop,\n        args = Array.prototype.slice.call(arguments, 2),\n        listeners = eve.listeners(name),\n        z = 0,\n        l,\n        indexed = [],\n        queue = {},\n        out = [],\n        ce = current_event;\n    out.firstDefined = firstDefined;\n    out.lastDefined = lastDefined;\n    current_event = name;\n    stop = 0;\n\n    for (var i = 0, ii = listeners.length; i < ii; i++) {\n      if (\"zIndex\" in listeners[i]) {\n        indexed.push(listeners[i].zIndex);\n\n        if (listeners[i].zIndex < 0) {\n          queue[listeners[i].zIndex] = listeners[i];\n        }\n      }\n    }\n\n    indexed.sort(numsort);\n\n    while (indexed[z] < 0) {\n      l = queue[indexed[z++]];\n      out.push(l.apply(scope, args));\n\n      if (stop) {\n        stop = oldstop;\n        return out;\n      }\n    }\n\n    for (i = 0; i < ii; i++) {\n      l = listeners[i];\n\n      if (\"zIndex\" in l) {\n        if (l.zIndex == indexed[z]) {\n          out.push(l.apply(scope, args));\n\n          if (stop) {\n            break;\n          }\n\n          do {\n            z++;\n            l = queue[indexed[z]];\n            l && out.push(l.apply(scope, args));\n\n            if (stop) {\n              break;\n            }\n          } while (l);\n        } else {\n          queue[l.zIndex] = l;\n        }\n      } else {\n        out.push(l.apply(scope, args));\n\n        if (stop) {\n          break;\n        }\n      }\n    }\n\n    stop = oldstop;\n    current_event = ce;\n    return out;\n  }; // Undocumented. Debug only.\n\n\n  eve._events = events;\n  /*\\\n   * eve.listeners\n   [ method ]\n    * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n    - name (string) name of the event, dot (`.`) or slash (`/`) separated\n    = (array) array of event handlers\n  \\*/\n\n  eve.listeners = function (name) {\n    var names = isArray(name) ? name : name.split(separator),\n        e = events,\n        item,\n        items,\n        k,\n        i,\n        ii,\n        j,\n        jj,\n        nes,\n        es = [e],\n        out = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      nes = [];\n\n      for (j = 0, jj = es.length; j < jj; j++) {\n        e = es[j].n;\n        items = [e[names[i]], e[wildcard]];\n        k = 2;\n\n        while (k--) {\n          item = items[k];\n\n          if (item) {\n            nes.push(item);\n            out = out.concat(item.f || []);\n          }\n        }\n      }\n\n      es = nes;\n    }\n\n    return out;\n  };\n  /*\\\n   * eve.separator\n   [ method ]\n    * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n   * here. Be aware that if you pass a string longer than one character it will be treated as\n   * a list of characters.\n    - separator (string) new separator. Empty string resets to default: `.` or `/`.\n  \\*/\n\n\n  eve.separator = function (sep) {\n    if (sep) {\n      sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n      sep = \"[\" + sep + \"]\";\n      separator = new RegExp(sep);\n    } else {\n      separator = /[\\.\\/]/;\n    }\n  };\n  /*\\\n   * eve.on\n   [ method ]\n   **\n   * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n   | eve.on(\"*.under.*\", f);\n   | eve(\"mouse.under.floor\"); // triggers f\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   - name (array) if you don’t want to use separators, you can use array of strings\n   - f (function) event handler function\n   **\n   = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n   > Example:\n   | eve.on(\"mouse\", eatIt)(2);\n   | eve.on(\"mouse\", scream);\n   | eve.on(\"mouse\", catchIt)(1);\n   * This will ensure that `catchIt` function will be called before `eatIt`.\n   *\n   * If you want to put your handler before non-indexed handlers, specify a negative value.\n   * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n  \\*/\n\n\n  eve.on = function (name, f) {\n    if (typeof f != \"function\") {\n      return function () {};\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      (function (name) {\n        var names = isArray(name) ? name : Str(name).split(separator),\n            e = events,\n            exist;\n\n        for (var i = 0, ii = names.length; i < ii; i++) {\n          e = e.n;\n          e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {\n            n: {}\n          });\n        }\n\n        e.f = e.f || [];\n\n        for (i = 0, ii = e.f.length; i < ii; i++) {\n          if (e.f[i] == f) {\n            exist = true;\n            break;\n          }\n        }\n\n        !exist && e.f.push(f);\n      })(names[i]);\n    }\n\n    return function (zIndex) {\n      if (+zIndex == +zIndex) {\n        f.zIndex = +zIndex;\n      }\n    };\n  };\n  /*\\\n   * eve.f\n   [ method ]\n   **\n   * Returns function that will fire given event with optional arguments.\n   * Arguments that will be passed to the result function will be also\n   * concated to the list of final arguments.\n   | el.onclick = eve.f(\"click\", 1, 2);\n   | eve.on(\"click\", function (a, b, c) {\n   |     console.log(a, b, c); // 1, 2, [event object]\n   | });\n   - event (string) event name\n   - varargs (…) and any other arguments\n   = (function) possible event handler function\n  \\*/\n\n\n  eve.f = function (event) {\n    var attrs = [].slice.call(arguments, 1);\n    return function () {\n      eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n    };\n  };\n  /*\\\n   * eve.stop\n   [ method ]\n   **\n   * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n  \\*/\n\n\n  eve.stop = function () {\n    stop = 1;\n  };\n  /*\\\n   * eve.nt\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   - subname (string) #optional subname of the event\n   **\n   = (string) name of the event, if `subname` is not specified\n   * or\n   = (boolean) `true`, if current event’s name contains `subname`\n  \\*/\n\n\n  eve.nt = function (subname) {\n    var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\n    if (subname) {\n      return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n    }\n\n    return cur;\n  };\n  /*\\\n   * eve.nts\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   **\n   = (array) names of the event\n  \\*/\n\n\n  eve.nts = function () {\n    return isArray(current_event) ? current_event : current_event.split(separator);\n  };\n  /*\\\n   * eve.off\n   [ method ]\n   **\n   * Removes given function from the list of event listeners assigned to given name.\n   * If no arguments specified all the events will be cleared.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n  \\*/\n\n  /*\\\n   * eve.unbind\n   [ method ]\n   **\n   * See @eve.off\n  \\*/\n\n\n  eve.off = eve.unbind = function (name, f) {\n    if (!name) {\n      eve._events = events = {\n        n: {}\n      };\n      return;\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    if (names.length > 1) {\n      for (var i = 0, ii = names.length; i < ii; i++) {\n        eve.off(names[i], f);\n      }\n\n      return;\n    }\n\n    names = isArray(name) ? name : Str(name).split(separator);\n    var e,\n        key,\n        splice,\n        i,\n        ii,\n        j,\n        jj,\n        cur = [events],\n        inodes = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      for (j = 0; j < cur.length; j += splice.length - 2) {\n        splice = [j, 1];\n        e = cur[j].n;\n\n        if (names[i] != wildcard) {\n          if (e[names[i]]) {\n            splice.push(e[names[i]]);\n            inodes.unshift({\n              n: e,\n              name: names[i]\n            });\n          }\n        } else {\n          for (key in e) {\n            if (e[has](key)) {\n              splice.push(e[key]);\n              inodes.unshift({\n                n: e,\n                name: key\n              });\n            }\n          }\n        }\n\n        cur.splice.apply(cur, splice);\n      }\n    }\n\n    for (i = 0, ii = cur.length; i < ii; i++) {\n      e = cur[i];\n\n      while (e.n) {\n        if (f) {\n          if (e.f) {\n            for (j = 0, jj = e.f.length; j < jj; j++) {\n              if (e.f[j] == f) {\n                e.f.splice(j, 1);\n                break;\n              }\n            }\n\n            !e.f.length && delete e.f;\n          }\n\n          for (key in e.n) {\n            if (e.n[has](key) && e.n[key].f) {\n              var funcs = e.n[key].f;\n\n              for (j = 0, jj = funcs.length; j < jj; j++) {\n                if (funcs[j] == f) {\n                  funcs.splice(j, 1);\n                  break;\n                }\n              }\n\n              !funcs.length && delete e.n[key].f;\n            }\n          }\n        } else {\n          delete e.f;\n\n          for (key in e.n) {\n            if (e.n[has](key) && e.n[key].f) {\n              delete e.n[key].f;\n            }\n          }\n        }\n\n        e = e.n;\n      }\n    } // prune inner nodes in path\n\n\n    prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n      e = inodes[i];\n\n      for (key in e.n[e.name].f) {\n        // not empty (has listeners)\n        continue prune;\n      }\n\n      for (key in e.n[e.name].n) {\n        // not empty (has children)\n        continue prune;\n      } // is empty\n\n\n      delete e.n[e.name];\n    }\n  };\n  /*\\\n   * eve.once\n   [ method ]\n   **\n   * Binds given event handler with a given name to only run once then unbind itself.\n   | eve.once(\"login\", f);\n   | eve(\"login\"); // triggers f\n   | eve(\"login\"); // no listeners\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) same return function as @eve.on\n  \\*/\n\n\n  eve.once = function (name, f) {\n    var f2 = function f2() {\n      eve.off(name, f2);\n      return f.apply(this, arguments);\n    };\n\n    return eve.on(name, f2);\n  };\n  /*\\\n   * eve.version\n   [ property (string) ]\n   **\n   * Current version of the library.\n  \\*/\n\n\n  eve.version = version;\n\n  eve.toString = function () {\n    return \"You are running Eve \" + version;\n  };\n\n  glob.eve = eve;\n  typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () {\n    return eve;\n  }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n        path.animate({\n          path: steps[pos]\n        }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}